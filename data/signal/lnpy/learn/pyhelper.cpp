/* Generated by Cython 0.23.4 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_23_4"
#include <stddef.h>
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if !defined(CYTHON_USE_PYLONG_INTERNALS) && CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x02070000
#define CYTHON_USE_PYLONG_INTERNALS 1
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
#define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if PY_VERSION_HEX >= 0x030500B1
#define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
#define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
#elif CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
typedef struct {
    unaryfunc am_await;
    unaryfunc am_aiter;
    unaryfunc am_anext;
} __Pyx_PyAsyncMethodsStruct;
#define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
#else
#define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #define CYTHON_INLINE inline
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    operator T&() { return *ptr; }
  private:
    T *ptr;
};

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__lnpy__learn__pyhelper
#define __PYX_HAVE_API__lnpy__learn__pyhelper
#include "string.h"
#include <string>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include "stdint.h"
#include "src/code/helper.h"
#include "src/code/wrap_tron.h"
#include "src/code/sgd.h"
#include "stdio.h"
#include "stdlib.h"
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER) && defined (_M_X64)
    #define __Pyx_sst_abs(value) _abs64(value)
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "lnpy/learn/pyhelper.pyx",
  "__init__.pxd",
  "type.pxd",
};
#define IS_UNSIGNED(type) (((type) -1) > 0)
struct __Pyx_StructField_;
#define __PYX_BUF_FLAGS_PACKED_STRUCT (1 << 0)
typedef struct {
  const char* name;
  struct __Pyx_StructField_* fields;
  size_t size;
  size_t arraysize[8];
  int ndim;
  char typegroup;
  char is_unsigned;
  int flags;
} __Pyx_TypeInfo;
typedef struct __Pyx_StructField_ {
  __Pyx_TypeInfo* type;
  const char* name;
  size_t offset;
} __Pyx_StructField;
typedef struct {
  __Pyx_StructField* field;
  size_t parent_offset;
} __Pyx_BufFmt_StackElem;
typedef struct {
  __Pyx_StructField root;
  __Pyx_BufFmt_StackElem* head;
  size_t fmt_offset;
  size_t new_count, enc_count;
  size_t struct_alignment;
  int is_complex;
  char enc_type;
  char new_packmode;
  char enc_packmode;
  char is_valid_array;
} __Pyx_BufFmt_Context;


/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":725
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":726
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":727
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":728
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":732
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":733
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":734
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":735
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":739
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":740
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":749
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":750
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":751
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":753
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":754
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":755
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":757
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":758
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":760
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":761
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":762
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif


/*--- Type declarations ---*/
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PySparseProblem;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyDenseProblem;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianLoss;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLogLoss;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyHingeLoss;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PySquaredHingeLoss;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonLoss;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianPrior;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLaplacePrior;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD;
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":764
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":765
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":766
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":768
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "lnpy/learn/pyhelper.pyx":12
 * 
 * 
 * cdef class PyProblem:             # <<<<<<<<<<<<<<
 *     cdef Problem *thisptr
 * 
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem {
  PyObject_HEAD
  struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyProblem *__pyx_vtab;
  Problem *thisptr;
};


/* "lnpy/learn/pyhelper.pyx":58
 * 
 * 
 * cdef class PySparseProblem(PyProblem):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=2, mode='c'] X,
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PySparseProblem {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem __pyx_base;
};


/* "lnpy/learn/pyhelper.pyx":81
 * 
 * 
 * cdef class PyDenseProblem(PyProblem):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=2, mode='c'] X,
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyDenseProblem {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem __pyx_base;
};


/* "lnpy/learn/pyhelper.pyx":104
 * 
 * 
 * cdef class PyLossFunction:             # <<<<<<<<<<<<<<
 *     cdef readonly int binary_targets
 * 
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction {
  PyObject_HEAD
  struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLossFunction *__pyx_vtab;
  int binary_targets;
};


/* "lnpy/learn/pyhelper.pyx":117
 * 
 * 
 * cdef class PyGaussianLoss(PyLossFunction):             # <<<<<<<<<<<<<<
 *     cdef GaussianLoss *thisptr
 * 
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianLoss {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction __pyx_base;
  GaussianLoss *thisptr;
};


/* "lnpy/learn/pyhelper.pyx":131
 * 
 * 
 * cdef class PyLogLoss(PyLossFunction):             # <<<<<<<<<<<<<<
 *     cdef LogLoss *thisptr
 * 
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLogLoss {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction __pyx_base;
  LogLoss *thisptr;
};


/* "lnpy/learn/pyhelper.pyx":145
 * 
 * 
 * cdef class PyHingeLoss(PyLossFunction):             # <<<<<<<<<<<<<<
 *     cdef HingeLoss *thisptr
 * 
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyHingeLoss {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction __pyx_base;
  HingeLoss *thisptr;
};


/* "lnpy/learn/pyhelper.pyx":159
 * 
 * 
 * cdef class PySquaredHingeLoss(PyLossFunction):             # <<<<<<<<<<<<<<
 *     cdef SquaredHingeLoss *thisptr
 * 
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PySquaredHingeLoss {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction __pyx_base;
  SquaredHingeLoss *thisptr;
};


/* "lnpy/learn/pyhelper.pyx":173
 * 
 * 
 * cdef class PyPoissonLoss(PyLossFunction):             # <<<<<<<<<<<<<<
 *     cdef PoissonLoss *thisptr
 * 
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonLoss {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction __pyx_base;
  PoissonLoss *thisptr;
};


/* "lnpy/learn/pyhelper.pyx":187
 * 
 * 
 * cdef class PyPrior:             # <<<<<<<<<<<<<<
 *     cdef Prior *thisptr
 * 
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior {
  PyObject_HEAD
  struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior *__pyx_vtab;
  Prior *thisptr;
};


/* "lnpy/learn/pyhelper.pyx":236
 * 
 * 
 * cdef class PyGaussianPrior(PyPrior):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, double alpha=0, int ndim=-1, int penalize_bias=-1,
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianPrior {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior __pyx_base;
};


/* "lnpy/learn/pyhelper.pyx":250
 * 
 * 
 * cdef class PyLaplacePrior(PyPrior):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, double alpha=0, int ndim=-1, double eps=1e-8):
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLaplacePrior {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior __pyx_base;
};


/* "lnpy/learn/pyhelper.pyx":259
 * 
 * 
 * cdef class PyMixedPrior(PyPrior):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, PyPrior p, PyPrior q, double alpha=1, double gamma=.5):
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior __pyx_base;
};


/* "lnpy/learn/pyhelper.pyx":298
 * 
 * 
 * cdef class PyENetPrior(PyPrior):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, double alpha=1., double gamma=.5, int ndim=-1,
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior __pyx_base;
};


/* "lnpy/learn/pyhelper.pyx":318
 * 
 * 
 * cdef class PySmoothnessPrior(PyPrior):             # <<<<<<<<<<<<<<
 *     cdef np.ndarray precision_mat
 * 
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior __pyx_base;
  PyArrayObject *precision_mat;
};


/* "lnpy/learn/pyhelper.pyx":367
 * 
 * 
 * cdef class PyBernoulliGLM:             # <<<<<<<<<<<<<<
 *     cdef BernoulliGLM *thisptr
 *     cpdef PyPrior prior
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM {
  PyObject_HEAD
  BernoulliGLM *thisptr;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *prior;
};


/* "lnpy/learn/pyhelper.pyx":389
 * 
 * 
 * cdef class PySVM:             # <<<<<<<<<<<<<<
 *     cdef SVM *thisptr
 *     cpdef PyPrior prior
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM {
  PyObject_HEAD
  SVM *thisptr;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *prior;
};


/* "lnpy/learn/pyhelper.pyx":411
 * 
 * 
 * cdef class PyPoissonGLM:             # <<<<<<<<<<<<<<
 *     cdef PoissonGLM *thisptr
 *     cpdef PyPrior prior
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM {
  PyObject_HEAD
  PoissonGLM *thisptr;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *prior;
};


/* "lnpy/learn/pyhelper.pyx":434
 * 
 * 
 * cdef class PyGaussianGLM:             # <<<<<<<<<<<<<<
 *     cdef GaussianGLM *thisptr
 *     cpdef PyPrior prior
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM {
  PyObject_HEAD
  GaussianGLM *thisptr;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *prior;
};


/* "lnpy/learn/pyhelper.pyx":456
 * 
 * 
 * cdef class PySGD:             # <<<<<<<<<<<<<<
 *     cdef SGD *thisptr
 * 
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD {
  PyObject_HEAD
  SGD *thisptr;
};


/* "lnpy/learn/pyhelper.pyx":488
 * 
 * 
 * cdef class PyASGD:             # <<<<<<<<<<<<<<
 *     cdef ASGD *thisptr
 * 
 */
struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD {
  PyObject_HEAD
  ASGD *thisptr;
};



/* "lnpy/learn/pyhelper.pyx":12
 * 
 * 
 * cdef class PyProblem:             # <<<<<<<<<<<<<<
 *     cdef Problem *thisptr
 * 
 */

struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyProblem {
  Problem *(*get_pointer)(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *);
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyProblem *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyProblem;


/* "lnpy/learn/pyhelper.pyx":58
 * 
 * 
 * cdef class PySparseProblem(PyProblem):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=2, mode='c'] X,
 */

struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PySparseProblem {
  struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyProblem __pyx_base;
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PySparseProblem *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PySparseProblem;


/* "lnpy/learn/pyhelper.pyx":81
 * 
 * 
 * cdef class PyDenseProblem(PyProblem):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=2, mode='c'] X,
 */

struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyDenseProblem {
  struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyProblem __pyx_base;
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyDenseProblem *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyDenseProblem;


/* "lnpy/learn/pyhelper.pyx":104
 * 
 * 
 * cdef class PyLossFunction:             # <<<<<<<<<<<<<<
 *     cdef readonly int binary_targets
 * 
 */

struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLossFunction {
  LossFunction *(*get_pointer)(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *);
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLossFunction *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLossFunction;


/* "lnpy/learn/pyhelper.pyx":117
 * 
 * 
 * cdef class PyGaussianLoss(PyLossFunction):             # <<<<<<<<<<<<<<
 *     cdef GaussianLoss *thisptr
 * 
 */

struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyGaussianLoss {
  struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLossFunction __pyx_base;
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyGaussianLoss *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyGaussianLoss;


/* "lnpy/learn/pyhelper.pyx":131
 * 
 * 
 * cdef class PyLogLoss(PyLossFunction):             # <<<<<<<<<<<<<<
 *     cdef LogLoss *thisptr
 * 
 */

struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLogLoss {
  struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLossFunction __pyx_base;
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLogLoss *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLogLoss;


/* "lnpy/learn/pyhelper.pyx":145
 * 
 * 
 * cdef class PyHingeLoss(PyLossFunction):             # <<<<<<<<<<<<<<
 *     cdef HingeLoss *thisptr
 * 
 */

struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyHingeLoss {
  struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLossFunction __pyx_base;
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyHingeLoss *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyHingeLoss;


/* "lnpy/learn/pyhelper.pyx":159
 * 
 * 
 * cdef class PySquaredHingeLoss(PyLossFunction):             # <<<<<<<<<<<<<<
 *     cdef SquaredHingeLoss *thisptr
 * 
 */

struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PySquaredHingeLoss {
  struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLossFunction __pyx_base;
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PySquaredHingeLoss *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PySquaredHingeLoss;


/* "lnpy/learn/pyhelper.pyx":173
 * 
 * 
 * cdef class PyPoissonLoss(PyLossFunction):             # <<<<<<<<<<<<<<
 *     cdef PoissonLoss *thisptr
 * 
 */

struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPoissonLoss {
  struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLossFunction __pyx_base;
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPoissonLoss *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyPoissonLoss;


/* "lnpy/learn/pyhelper.pyx":187
 * 
 * 
 * cdef class PyPrior:             # <<<<<<<<<<<<<<
 *     cdef Prior *thisptr
 * 
 */

struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior {
  Prior *(*get_pointer)(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *);
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyPrior;


/* "lnpy/learn/pyhelper.pyx":236
 * 
 * 
 * cdef class PyGaussianPrior(PyPrior):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, double alpha=0, int ndim=-1, int penalize_bias=-1,
 */

struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyGaussianPrior {
  struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior __pyx_base;
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyGaussianPrior *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyGaussianPrior;


/* "lnpy/learn/pyhelper.pyx":250
 * 
 * 
 * cdef class PyLaplacePrior(PyPrior):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, double alpha=0, int ndim=-1, double eps=1e-8):
 */

struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLaplacePrior {
  struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior __pyx_base;
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLaplacePrior *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLaplacePrior;


/* "lnpy/learn/pyhelper.pyx":259
 * 
 * 
 * cdef class PyMixedPrior(PyPrior):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, PyPrior p, PyPrior q, double alpha=1, double gamma=.5):
 */

struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyMixedPrior {
  struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior __pyx_base;
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyMixedPrior *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyMixedPrior;


/* "lnpy/learn/pyhelper.pyx":298
 * 
 * 
 * cdef class PyENetPrior(PyPrior):             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, double alpha=1., double gamma=.5, int ndim=-1,
 */

struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyENetPrior {
  struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior __pyx_base;
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyENetPrior *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyENetPrior;


/* "lnpy/learn/pyhelper.pyx":318
 * 
 * 
 * cdef class PySmoothnessPrior(PyPrior):             # <<<<<<<<<<<<<<
 *     cdef np.ndarray precision_mat
 * 
 */

struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PySmoothnessPrior {
  struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior __pyx_base;
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PySmoothnessPrior *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PySmoothnessPrior;

/* --- Runtime support code (head) --- */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

static CYTHON_INLINE int  __Pyx_GetBufferAndValidate(Py_buffer* buf, PyObject* obj,
    __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack);
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info);

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb);

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

static CYTHON_INLINE npy_intp __Pyx_div_npy_intp(npy_intp, npy_intp);

#define UNARY_NEG_WOULD_OVERFLOW(x)\
        (((x) < 0) & ((unsigned long)(x) == 0-(unsigned long)(x)))

static PyObject *__Pyx_GetBuiltinName(PyObject *name);

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            PyObject* args = PyTuple_Pack(1, key);
            if (likely(args))
                PyErr_SetObject(PyExc_KeyError, args);
            Py_XDECREF(args);
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#else
    #define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#endif

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse);

static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_dealloc);

static int __Pyx_SetVtable(PyObject *dict, void *vtable);

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

typedef struct {
  Py_ssize_t shape, strides, suboffsets;
} __Pyx_Buf_DimInfo;
typedef struct {
  size_t refcount;
  Py_buffer pybuffer;
} __Pyx_Buffer;
typedef struct {
  __Pyx_Buffer *rcbuffer;
  char *data;
  __Pyx_Buf_DimInfo diminfo[8];
} __Pyx_LocalBuf_ND;

#if PY_MAJOR_VERSION < 3
    static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags);
    static void __Pyx_ReleaseBuffer(Py_buffer *view);
#else
    #define __Pyx_GetBuffer PyObject_GetBuffer
    #define __Pyx_ReleaseBuffer PyBuffer_Release
#endif


static Py_ssize_t __Pyx_zeros[] = {0, 0, 0, 0, 0, 0, 0, 0};
static Py_ssize_t __Pyx_minusones[] = {-1, -1, -1, -1, -1, -1, -1, -1};

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

static CYTHON_INLINE Py_intptr_t __Pyx_PyInt_As_Py_intptr_t(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_Py_intptr_t(Py_intptr_t value);

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if (defined(_WIN32) || defined(__clang__)) && defined(__cplusplus) && CYTHON_CCOMPLEX
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eqf(a, b)   ((a)==(b))
    #define __Pyx_c_sumf(a, b)  ((a)+(b))
    #define __Pyx_c_difff(a, b) ((a)-(b))
    #define __Pyx_c_prodf(a, b) ((a)*(b))
    #define __Pyx_c_quotf(a, b) ((a)/(b))
    #define __Pyx_c_negf(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zerof(z) ((z)==(float)0)
    #define __Pyx_c_conjf(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_absf(z)     (::std::abs(z))
        #define __Pyx_c_powf(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zerof(z) ((z)==0)
    #define __Pyx_c_conjf(z)    (conjf(z))
    #if 1
        #define __Pyx_c_absf(z)     (cabsf(z))
        #define __Pyx_c_powf(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq(a, b)   ((a)==(b))
    #define __Pyx_c_sum(a, b)  ((a)+(b))
    #define __Pyx_c_diff(a, b) ((a)-(b))
    #define __Pyx_c_prod(a, b) ((a)*(b))
    #define __Pyx_c_quot(a, b) ((a)/(b))
    #define __Pyx_c_neg(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero(z) ((z)==(double)0)
    #define __Pyx_c_conj(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (::std::abs(z))
        #define __Pyx_c_pow(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero(z) ((z)==0)
    #define __Pyx_c_conj(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (cabs(z))
        #define __Pyx_c_pow(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value);

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

static int __Pyx_check_binary_version(void);

#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

static PyObject *__Pyx_ImportModule(const char *name);

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static Problem *__pyx_f_4lnpy_5learn_8pyhelper_9PyProblem_get_pointer(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self); /* proto*/
static LossFunction *__pyx_f_4lnpy_5learn_8pyhelper_14PyLossFunction_get_pointer(CYTHON_UNUSED struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *__pyx_v_self); /* proto*/
static LossFunction *__pyx_f_4lnpy_5learn_8pyhelper_14PyGaussianLoss_get_pointer(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianLoss *__pyx_v_self); /* proto*/
static LossFunction *__pyx_f_4lnpy_5learn_8pyhelper_9PyLogLoss_get_pointer(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLogLoss *__pyx_v_self); /* proto*/
static LossFunction *__pyx_f_4lnpy_5learn_8pyhelper_11PyHingeLoss_get_pointer(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyHingeLoss *__pyx_v_self); /* proto*/
static LossFunction *__pyx_f_4lnpy_5learn_8pyhelper_18PySquaredHingeLoss_get_pointer(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySquaredHingeLoss *__pyx_v_self); /* proto*/
static LossFunction *__pyx_f_4lnpy_5learn_8pyhelper_13PyPoissonLoss_get_pointer(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonLoss *__pyx_v_self); /* proto*/
static Prior *__pyx_f_4lnpy_5learn_8pyhelper_7PyPrior_get_pointer(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self); /* proto*/

/* Module declarations from 'libc.string' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libc.stdint' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/

/* Module declarations from 'lnpy.learn.pyhelper' */
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PyProblem = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PySparseProblem = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PyDenseProblem = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PyLossFunction = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PyGaussianLoss = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PyLogLoss = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PyHingeLoss = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PySquaredHingeLoss = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PyPoissonLoss = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PyGaussianPrior = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PyLaplacePrior = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PyMixedPrior = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PyENetPrior = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PySmoothnessPrior = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PyBernoulliGLM = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PySVM = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PyPoissonGLM = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PyGaussianGLM = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PySGD = 0;
static PyTypeObject *__pyx_ptype_4lnpy_5learn_8pyhelper_PyASGD = 0;
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t = { "float64_t", NULL, sizeof(__pyx_t_5numpy_float64_t), { 0 }, 0, 'R', 0, 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t = { "uint64_t", NULL, sizeof(__pyx_t_5numpy_uint64_t), { 0 }, 0, IS_UNSIGNED(__pyx_t_5numpy_uint64_t) ? 'U' : 'I', IS_UNSIGNED(__pyx_t_5numpy_uint64_t), 0 };
#define __Pyx_MODULE_NAME "lnpy.learn.pyhelper"
int __pyx_module_is_main_lnpy__learn__pyhelper = 0;

/* Implementation of 'lnpy.learn.pyhelper' */
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_RuntimeError;
static char __pyx_k_B[] = "B";
static char __pyx_k_C[] = "C";
static char __pyx_k_D[] = "D";
static char __pyx_k_H[] = "H";
static char __pyx_k_I[] = "I";
static char __pyx_k_L[] = "L";
static char __pyx_k_O[] = "O";
static char __pyx_k_Q[] = "Q";
static char __pyx_k_X[] = "X";
static char __pyx_k_Y[] = "Y";
static char __pyx_k_b[] = "b";
static char __pyx_k_d[] = "d";
static char __pyx_k_f[] = "f";
static char __pyx_k_g[] = "g";
static char __pyx_k_h[] = "h";
static char __pyx_k_i[] = "i";
static char __pyx_k_l[] = "l";
static char __pyx_k_p[] = "p";
static char __pyx_k_q[] = "q";
static char __pyx_k_w[] = "w";
static char __pyx_k_Zd[] = "Zd";
static char __pyx_k_Zf[] = "Zf";
static char __pyx_k_Zg[] = "Zg";
static char __pyx_k_dt[] = "dt";
static char __pyx_k_mu[] = "mu";
static char __pyx_k_np[] = "np";
static char __pyx_k_p1[] = "p1";
static char __pyx_k_p2[] = "p2";
static char __pyx_k_wa[] = "wa";
static char __pyx_k_eps[] = "eps";
static char __pyx_k_bias[] = "bias";
static char __pyx_k_copy[] = "copy";
static char __pyx_k_log2[] = "log2";
static char __pyx_k_loss[] = "loss";
static char __pyx_k_main[] = "__main__";
static char __pyx_k_name[] = "__name__";
static char __pyx_k_ndim[] = "ndim";
static char __pyx_k_prob[] = "prob";
static char __pyx_k_test[] = "__test__";
static char __pyx_k_alpha[] = "alpha";
static char __pyx_k_class[] = "__class__";
static char __pyx_k_gamma[] = "gamma";
static char __pyx_k_get_N[] = "get_N";
static char __pyx_k_numpy[] = "numpy";
static char __pyx_k_prior[] = "prior";
static char __pyx_k_range[] = "range";
static char __pyx_k_import[] = "__import__";
static char __pyx_k_linear[] = "linear";
static char __pyx_k_update[] = "update";
static char __pyx_k_n_alpha[] = "n_alpha";
static char __pyx_k_n_gamma[] = "n_gamma";
static char __pyx_k_scaling[] = "scaling";
static char __pyx_k_verbose[] = "verbose";
static char __pyx_k_linspace[] = "linspace";
static char __pyx_k_max_iter[] = "max_iter";
static char __pyx_k_n_epochs[] = "n_epochs";
static char __pyx_k_canonical[] = "canonical";
static char __pyx_k_tolerance[] = "tolerance";
static char __pyx_k_ValueError[] = "ValueError";
static char __pyx_k_poly_decay[] = "poly_decay";
static char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static char __pyx_k_start_iter[] = "start_iter";
static char __pyx_k_warm_start[] = "warm_start";
static char __pyx_k_alpha_range[] = "alpha_range";
static char __pyx_k_gamma_range[] = "gamma_range";
static char __pyx_k_get_ntrials[] = "get_ntrials";
static char __pyx_k_RuntimeError[] = "RuntimeError";
static char __pyx_k_penalize_bias[] = "penalize_bias";
static char __pyx_k_lnpy_learn_pyhelper[] = "lnpy.learn.pyhelper";
static char __pyx_k_rebuild_mixed_prior[] = "rebuild_mixed_prior";
static char __pyx_k_rebuild_smoothness_prior[] = "rebuild_smoothness_prior";
static char __pyx_k_ndarray_is_not_C_contiguous[] = "ndarray is not C contiguous";
static char __pyx_k_home_arne_Postdoc_misc_code_lnp[] = "/home/arne/Postdoc/misc/code/lnpy/lnpy/learn/pyhelper.pyx";
static char __pyx_k_unknown_dtype_code_in_numpy_pxd[] = "unknown dtype code in numpy.pxd (%d)";
static char __pyx_k_Format_string_allocated_too_shor[] = "Format string allocated too short, see comment in numpy.pxd";
static char __pyx_k_Non_native_byte_order_not_suppor[] = "Non-native byte order not supported";
static char __pyx_k_ndarray_is_not_Fortran_contiguou[] = "ndarray is not Fortran contiguous";
static char __pyx_k_Format_string_allocated_too_shor_2[] = "Format string allocated too short.";
static PyObject *__pyx_n_s_C;
static PyObject *__pyx_n_s_D;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor_2;
static PyObject *__pyx_kp_u_Non_native_byte_order_not_suppor;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_n_s_X;
static PyObject *__pyx_n_s_Y;
static PyObject *__pyx_n_s_alpha;
static PyObject *__pyx_n_s_alpha_range;
static PyObject *__pyx_n_s_bias;
static PyObject *__pyx_n_s_canonical;
static PyObject *__pyx_n_s_class;
static PyObject *__pyx_n_s_copy;
static PyObject *__pyx_n_s_dt;
static PyObject *__pyx_n_s_eps;
static PyObject *__pyx_n_s_gamma;
static PyObject *__pyx_n_s_gamma_range;
static PyObject *__pyx_n_s_get_N;
static PyObject *__pyx_n_s_get_ntrials;
static PyObject *__pyx_kp_s_home_arne_Postdoc_misc_code_lnp;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_linear;
static PyObject *__pyx_n_s_linspace;
static PyObject *__pyx_n_s_lnpy_learn_pyhelper;
static PyObject *__pyx_n_s_log2;
static PyObject *__pyx_n_s_loss;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_max_iter;
static PyObject *__pyx_n_s_mu;
static PyObject *__pyx_n_s_n_alpha;
static PyObject *__pyx_n_s_n_epochs;
static PyObject *__pyx_n_s_n_gamma;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_kp_u_ndarray_is_not_C_contiguous;
static PyObject *__pyx_kp_u_ndarray_is_not_Fortran_contiguou;
static PyObject *__pyx_n_s_ndim;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_n_s_p;
static PyObject *__pyx_n_s_p1;
static PyObject *__pyx_n_s_p2;
static PyObject *__pyx_n_s_penalize_bias;
static PyObject *__pyx_n_s_poly_decay;
static PyObject *__pyx_n_s_prior;
static PyObject *__pyx_n_s_prob;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_q;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_rebuild_mixed_prior;
static PyObject *__pyx_n_s_rebuild_smoothness_prior;
static PyObject *__pyx_n_s_scaling;
static PyObject *__pyx_n_s_start_iter;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_tolerance;
static PyObject *__pyx_kp_u_unknown_dtype_code_in_numpy_pxd;
static PyObject *__pyx_n_s_update;
static PyObject *__pyx_n_s_verbose;
static PyObject *__pyx_n_s_w;
static PyObject *__pyx_n_s_wa;
static PyObject *__pyx_n_s_warm_start;
static int __pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem___cinit__(CYTHON_UNUSED struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_4get_N(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_6get_ndim(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_8get_ntrials(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_10get_Y(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_12set_weights(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self, PyArrayObject *__pyx_v_C); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_14set_permutation(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self, PyArrayObject *__pyx_v_perm); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_16reset_index(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_15PySparseProblem___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySparseProblem *__pyx_v_self, PyArrayObject *__pyx_v_X, PyArrayObject *__pyx_v_Y, double __pyx_v_bias, PyArrayObject *__pyx_v_C, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_15PySparseProblem_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySparseProblem *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_14PyDenseProblem___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyDenseProblem *__pyx_v_self, PyArrayObject *__pyx_v_X, PyArrayObject *__pyx_v_Y, double __pyx_v_bias, PyArrayObject *__pyx_v_C, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_14PyDenseProblem_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyDenseProblem *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_14PyLossFunction___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *__pyx_v_self); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_14PyLossFunction_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_14PyLossFunction_14binary_targets___get__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_14PyGaussianLoss___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianLoss *__pyx_v_self); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_14PyGaussianLoss_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianLoss *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_9PyLogLoss___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLogLoss *__pyx_v_self); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_9PyLogLoss_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLogLoss *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_11PyHingeLoss___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyHingeLoss *__pyx_v_self); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_11PyHingeLoss_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyHingeLoss *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_18PySquaredHingeLoss___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySquaredHingeLoss *__pyx_v_self); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_18PySquaredHingeLoss_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySquaredHingeLoss *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_13PyPoissonLoss___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonLoss *__pyx_v_self, double __pyx_v_dt, int __pyx_v_canonical); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_13PyPoissonLoss_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonLoss *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior___cinit__(CYTHON_UNUSED struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_4name___get__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_5alpha___get__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_5alpha_2__set__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_4get_ndim(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_6set_ndim(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self, int __pyx_v_d); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_8get_default_grid(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self, PyObject *__pyx_v_n_alpha, PyObject *__pyx_v_alpha_range, PyObject *__pyx_v_n_gamma, PyObject *__pyx_v_gamma_range); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_15PyGaussianPrior___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianPrior *__pyx_v_self, double __pyx_v_alpha, int __pyx_v_ndim, int __pyx_v_penalize_bias, PyArrayObject *__pyx_v_mu); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_15PyGaussianPrior_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianPrior *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_14PyLaplacePrior___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLaplacePrior *__pyx_v_self, double __pyx_v_alpha, int __pyx_v_ndim, double __pyx_v_eps); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_14PyLaplacePrior_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLaplacePrior *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_12PyMixedPrior___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_p, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_q, double __pyx_v_alpha, double __pyx_v_gamma); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_12PyMixedPrior_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_12PyMixedPrior_4__reduce__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_12PyMixedPrior_5gamma___get__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_12PyMixedPrior_5gamma_2__set__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_rebuild_mixed_prior(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_p1, PyObject *__pyx_v_p2, PyObject *__pyx_v_alpha, PyObject *__pyx_v_gamma); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_11PyENetPrior___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior *__pyx_v_self, double __pyx_v_alpha, double __pyx_v_gamma, int __pyx_v_ndim, double __pyx_v_eps); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_11PyENetPrior_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_11PyENetPrior_5gamma___get__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_11PyENetPrior_5gamma_2__set__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *__pyx_v_self, double __pyx_v_alpha, double __pyx_v_gamma, PyArrayObject *__pyx_v_D); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_4__reduce__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5alpha___get__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5alpha_2__set__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5gamma___get__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5gamma_2__set__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_2rebuild_smoothness_prior(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_alpha, PyObject *__pyx_v_gamma, PyObject *__pyx_v_D); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_14PyBernoulliGLM___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_prior); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_4get_prior(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_6fit(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob, PyArrayObject *__pyx_v_w, double __pyx_v_tolerance, int __pyx_v_max_iter, int __pyx_v_verbose); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_5PySVM___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_prior); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_5PySVM_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_5PySVM_4get_prior(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_5PySVM_6fit(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob, PyArrayObject *__pyx_v_w, double __pyx_v_tolerance, int __pyx_v_max_iter, int __pyx_v_verbose); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_12PyPoissonGLM___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_prior, double __pyx_v_dt, int __pyx_v_canonical); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_12PyPoissonGLM_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_12PyPoissonGLM_4get_prior(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_12PyPoissonGLM_6fit(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob, PyArrayObject *__pyx_v_w, double __pyx_v_tolerance, int __pyx_v_max_iter, int __pyx_v_verbose); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_13PyGaussianGLM___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_prior); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_13PyGaussianGLM_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_13PyGaussianGLM_4get_prior(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_13PyGaussianGLM_6fit(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob, PyArrayObject *__pyx_v_w, double __pyx_v_tolerance, int __pyx_v_max_iter, int __pyx_v_verbose); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_5PySGD___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *__pyx_v_self, PyArrayObject *__pyx_v_w, double __pyx_v_bias, double __pyx_v_n_epochs, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *__pyx_v_loss, double __pyx_v_alpha, bool __pyx_v_warm_start); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_5PySGD_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_5PySGD_4fit(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob, int __pyx_v_start_iter, int __pyx_v_verbose); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_5PySGD_6get_bias(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_5PySGD_8set_alpha(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *__pyx_v_self, int __pyx_v_alpha); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_5PySGD_10get_alpha(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *__pyx_v_self); /* proto */
static int __pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *__pyx_v_self, PyArrayObject *__pyx_v_w, PyArrayObject *__pyx_v_wa, double __pyx_v_bias, double __pyx_v_n_epochs, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *__pyx_v_loss, double __pyx_v_alpha, bool __pyx_v_warm_start, double __pyx_v_poly_decay); /* proto */
static void __pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD_4fit(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob, int __pyx_v_start_iter, int __pyx_v_verbose); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD_6get_bias(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD_8set_alpha(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *__pyx_v_self, int __pyx_v_alpha); /* proto */
static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD_10get_alpha(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *__pyx_v_self); /* proto */
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyProblem(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PySparseProblem(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyDenseProblem(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyLossFunction(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyGaussianLoss(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyLogLoss(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyHingeLoss(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PySquaredHingeLoss(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyPoissonLoss(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyPrior(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyGaussianPrior(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyLaplacePrior(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyMixedPrior(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyENetPrior(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PySmoothnessPrior(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyBernoulliGLM(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PySVM(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyPoissonGLM(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyGaussianGLM(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PySGD(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyASGD(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_float_0_;
static PyObject *__pyx_float_1_;
static PyObject *__pyx_float_2_;
static PyObject *__pyx_int_10;
static PyObject *__pyx_k_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_codeobj__10;
static PyObject *__pyx_codeobj__12;

/* "lnpy/learn/pyhelper.pyx":15
 *     cdef Problem *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem___cinit__(CYTHON_UNUSED struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":18
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":21
 *         pass
 * 
 *     cdef Problem* get_pointer(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr
 * 
 */

static Problem *__pyx_f_4lnpy_5learn_8pyhelper_9PyProblem_get_pointer(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self) {
  Problem *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_pointer", 0);

  /* "lnpy/learn/pyhelper.pyx":22
 * 
 *     cdef Problem* get_pointer(self):
 *         return self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def get_N(self):
 */
  __pyx_r = __pyx_v_self->thisptr;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":21
 *         pass
 * 
 *     cdef Problem* get_pointer(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":24
 *         return self.thisptr
 * 
 *     def get_N(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_N()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_5get_N(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_5get_N(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_N (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_4get_N(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_4get_N(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_N", 0);

  /* "lnpy/learn/pyhelper.pyx":25
 * 
 *     def get_N(self):
 *         return self.thisptr.get_N()             # <<<<<<<<<<<<<<
 * 
 *     def get_ndim(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->get_N()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 25; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":24
 *         return self.thisptr
 * 
 *     def get_N(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_N()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyProblem.get_N", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":27
 *         return self.thisptr.get_N()
 * 
 *     def get_ndim(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_ndim()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_7get_ndim(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_7get_ndim(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_ndim (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_6get_ndim(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_6get_ndim(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_ndim", 0);

  /* "lnpy/learn/pyhelper.pyx":28
 * 
 *     def get_ndim(self):
 *         return self.thisptr.get_ndim()             # <<<<<<<<<<<<<<
 * 
 *     def get_ntrials(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->get_ndim()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 28; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":27
 *         return self.thisptr.get_N()
 * 
 *     def get_ndim(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_ndim()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyProblem.get_ndim", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":30
 *         return self.thisptr.get_ndim()
 * 
 *     def get_ntrials(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_ntrials()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_9get_ntrials(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_9get_ntrials(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_ntrials (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_8get_ntrials(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_8get_ntrials(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_ntrials", 0);

  /* "lnpy/learn/pyhelper.pyx":31
 * 
 *     def get_ntrials(self):
 *         return self.thisptr.get_ntrials()             # <<<<<<<<<<<<<<
 * 
 *     def get_Y(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->get_ntrials()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 31; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":30
 *         return self.thisptr.get_ndim()
 * 
 *     def get_ntrials(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_ntrials()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyProblem.get_ntrials", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":33
 *         return self.thisptr.get_ntrials()
 * 
 *     def get_Y(self):             # <<<<<<<<<<<<<<
 *         cdef double *ptr = self.thisptr.get_Y()
 *         cdef np.npy_intp shape[2]
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_11get_Y(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_11get_Y(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_Y (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_10get_Y(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_10get_Y(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self) {
  double *__pyx_v_ptr;
  npy_intp __pyx_v_shape[2];
  PyObject *__pyx_v_arr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  npy_intp __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_Y", 0);

  /* "lnpy/learn/pyhelper.pyx":34
 * 
 *     def get_Y(self):
 *         cdef double *ptr = self.thisptr.get_Y()             # <<<<<<<<<<<<<<
 *         cdef np.npy_intp shape[2]
 *         shape[0] = self.get_N()
 */
  __pyx_v_ptr = __pyx_v_self->thisptr->get_Y();

  /* "lnpy/learn/pyhelper.pyx":36
 *         cdef double *ptr = self.thisptr.get_Y()
 *         cdef np.npy_intp shape[2]
 *         shape[0] = self.get_N()             # <<<<<<<<<<<<<<
 *         shape[1] = self.get_ntrials()
 *         arr = np.PyArray_SimpleNewFromData(2, shape, np.NPY_DOUBLE, ptr)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_N); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_Py_intptr_t(__pyx_t_1); if (unlikely((__pyx_t_4 == (npy_intp)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 36; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  (__pyx_v_shape[0]) = __pyx_t_4;

  /* "lnpy/learn/pyhelper.pyx":37
 *         cdef np.npy_intp shape[2]
 *         shape[0] = self.get_N()
 *         shape[1] = self.get_ntrials()             # <<<<<<<<<<<<<<
 *         arr = np.PyArray_SimpleNewFromData(2, shape, np.NPY_DOUBLE, ptr)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_ntrials); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_Py_intptr_t(__pyx_t_1); if (unlikely((__pyx_t_4 == (npy_intp)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  (__pyx_v_shape[1]) = __pyx_t_4;

  /* "lnpy/learn/pyhelper.pyx":38
 *         shape[0] = self.get_N()
 *         shape[1] = self.get_ntrials()
 *         arr = np.PyArray_SimpleNewFromData(2, shape, np.NPY_DOUBLE, ptr)             # <<<<<<<<<<<<<<
 * 
 *         return arr
 */
  __pyx_t_1 = PyArray_SimpleNewFromData(2, __pyx_v_shape, NPY_DOUBLE, __pyx_v_ptr); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_arr = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "lnpy/learn/pyhelper.pyx":40
 *         arr = np.PyArray_SimpleNewFromData(2, shape, np.NPY_DOUBLE, ptr)
 * 
 *         return arr             # <<<<<<<<<<<<<<
 * 
 *     def set_weights(self, np.ndarray[np.float64_t, ndim=1, mode='c'] C):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_arr);
  __pyx_r = __pyx_v_arr;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":33
 *         return self.thisptr.get_ntrials()
 * 
 *     def get_Y(self):             # <<<<<<<<<<<<<<
 *         cdef double *ptr = self.thisptr.get_Y()
 *         cdef np.npy_intp shape[2]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyProblem.get_Y", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_arr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":42
 *         return arr
 * 
 *     def set_weights(self, np.ndarray[np.float64_t, ndim=1, mode='c'] C):             # <<<<<<<<<<<<<<
 *         if C is None:
 *             self.thisptr.set_C(NULL)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_13set_weights(PyObject *__pyx_v_self, PyObject *__pyx_v_C); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_13set_weights(PyObject *__pyx_v_self, PyObject *__pyx_v_C) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_weights (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_C), __pyx_ptype_5numpy_ndarray, 1, "C", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_12set_weights(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *)__pyx_v_self), ((PyArrayObject *)__pyx_v_C));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_12set_weights(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self, PyArrayObject *__pyx_v_C) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_C;
  __Pyx_Buffer __pyx_pybuffer_C;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_weights", 0);
  __pyx_pybuffer_C.pybuffer.buf = NULL;
  __pyx_pybuffer_C.refcount = 0;
  __pyx_pybuffernd_C.data = NULL;
  __pyx_pybuffernd_C.rcbuffer = &__pyx_pybuffer_C;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_C.rcbuffer->pybuffer, (PyObject*)__pyx_v_C, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_C.diminfo[0].strides = __pyx_pybuffernd_C.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_C.diminfo[0].shape = __pyx_pybuffernd_C.rcbuffer->pybuffer.shape[0];

  /* "lnpy/learn/pyhelper.pyx":43
 * 
 *     def set_weights(self, np.ndarray[np.float64_t, ndim=1, mode='c'] C):
 *         if C is None:             # <<<<<<<<<<<<<<
 *             self.thisptr.set_C(NULL)
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_C) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "lnpy/learn/pyhelper.pyx":44
 *     def set_weights(self, np.ndarray[np.float64_t, ndim=1, mode='c'] C):
 *         if C is None:
 *             self.thisptr.set_C(NULL)             # <<<<<<<<<<<<<<
 *         else:
 *             self.thisptr.set_C(<double*>C.data)
 */
    __pyx_v_self->thisptr->set_C(NULL);

    /* "lnpy/learn/pyhelper.pyx":43
 * 
 *     def set_weights(self, np.ndarray[np.float64_t, ndim=1, mode='c'] C):
 *         if C is None:             # <<<<<<<<<<<<<<
 *             self.thisptr.set_C(NULL)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "lnpy/learn/pyhelper.pyx":46
 *             self.thisptr.set_C(NULL)
 *         else:
 *             self.thisptr.set_C(<double*>C.data)             # <<<<<<<<<<<<<<
 * 
 *     def set_permutation(self, np.ndarray[np.uint64_t, ndim=1, mode='c'] perm):
 */
  /*else*/ {
    __pyx_v_self->thisptr->set_C(((double *)__pyx_v_C->data));
  }
  __pyx_L3:;

  /* "lnpy/learn/pyhelper.pyx":42
 *         return arr
 * 
 *     def set_weights(self, np.ndarray[np.float64_t, ndim=1, mode='c'] C):             # <<<<<<<<<<<<<<
 *         if C is None:
 *             self.thisptr.set_C(NULL)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_C.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyProblem.set_weights", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_C.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":48
 *             self.thisptr.set_C(<double*>C.data)
 * 
 *     def set_permutation(self, np.ndarray[np.uint64_t, ndim=1, mode='c'] perm):             # <<<<<<<<<<<<<<
 *         if perm is None:
 *             self.thisptr.set_permutation(0, NULL)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_15set_permutation(PyObject *__pyx_v_self, PyObject *__pyx_v_perm); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_15set_permutation(PyObject *__pyx_v_self, PyObject *__pyx_v_perm) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_permutation (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_perm), __pyx_ptype_5numpy_ndarray, 1, "perm", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_14set_permutation(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *)__pyx_v_self), ((PyArrayObject *)__pyx_v_perm));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_14set_permutation(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self, PyArrayObject *__pyx_v_perm) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_perm;
  __Pyx_Buffer __pyx_pybuffer_perm;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_permutation", 0);
  __pyx_pybuffer_perm.pybuffer.buf = NULL;
  __pyx_pybuffer_perm.refcount = 0;
  __pyx_pybuffernd_perm.data = NULL;
  __pyx_pybuffernd_perm.rcbuffer = &__pyx_pybuffer_perm;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_perm.rcbuffer->pybuffer, (PyObject*)__pyx_v_perm, &__Pyx_TypeInfo_nn___pyx_t_5numpy_uint64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 48; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_perm.diminfo[0].strides = __pyx_pybuffernd_perm.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_perm.diminfo[0].shape = __pyx_pybuffernd_perm.rcbuffer->pybuffer.shape[0];

  /* "lnpy/learn/pyhelper.pyx":49
 * 
 *     def set_permutation(self, np.ndarray[np.uint64_t, ndim=1, mode='c'] perm):
 *         if perm is None:             # <<<<<<<<<<<<<<
 *             self.thisptr.set_permutation(0, NULL)
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_perm) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "lnpy/learn/pyhelper.pyx":50
 *     def set_permutation(self, np.ndarray[np.uint64_t, ndim=1, mode='c'] perm):
 *         if perm is None:
 *             self.thisptr.set_permutation(0, NULL)             # <<<<<<<<<<<<<<
 *         else:
 *             self.thisptr.set_permutation(perm.shape[0], <uint64_t*>perm.data)
 */
    __pyx_v_self->thisptr->set_permutation(0, NULL);

    /* "lnpy/learn/pyhelper.pyx":49
 * 
 *     def set_permutation(self, np.ndarray[np.uint64_t, ndim=1, mode='c'] perm):
 *         if perm is None:             # <<<<<<<<<<<<<<
 *             self.thisptr.set_permutation(0, NULL)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "lnpy/learn/pyhelper.pyx":52
 *             self.thisptr.set_permutation(0, NULL)
 *         else:
 *             self.thisptr.set_permutation(perm.shape[0], <uint64_t*>perm.data)             # <<<<<<<<<<<<<<
 * 
 *     def reset_index(self):
 */
  /*else*/ {
    __pyx_v_self->thisptr->set_permutation((__pyx_v_perm->dimensions[0]), ((uint64_t *)__pyx_v_perm->data));
  }
  __pyx_L3:;

  /* "lnpy/learn/pyhelper.pyx":48
 *             self.thisptr.set_C(<double*>C.data)
 * 
 *     def set_permutation(self, np.ndarray[np.uint64_t, ndim=1, mode='c'] perm):             # <<<<<<<<<<<<<<
 *         if perm is None:
 *             self.thisptr.set_permutation(0, NULL)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_perm.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyProblem.set_permutation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_perm.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":54
 *             self.thisptr.set_permutation(perm.shape[0], <uint64_t*>perm.data)
 * 
 *     def reset_index(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.reset_index()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_17reset_index(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_17reset_index(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset_index (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_16reset_index(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_9PyProblem_16reset_index(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset_index", 0);

  /* "lnpy/learn/pyhelper.pyx":55
 * 
 *     def reset_index(self):
 *         self.thisptr.reset_index()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->reset_index();

  /* "lnpy/learn/pyhelper.pyx":54
 *             self.thisptr.set_permutation(perm.shape[0], <uint64_t*>perm.data)
 * 
 *     def reset_index(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.reset_index()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":60
 * cdef class PySparseProblem(PyProblem):
 * 
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=2, mode='c'] X,             # <<<<<<<<<<<<<<
 *                  np.ndarray[np.float64_t, ndim=1, mode='c'] Y,
 *                  double bias=1,
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_15PySparseProblem_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_15PySparseProblem_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_X = 0;
  PyArrayObject *__pyx_v_Y = 0;
  double __pyx_v_bias;
  PyArrayObject *__pyx_v_C = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_X,&__pyx_n_s_Y,&__pyx_n_s_bias,&__pyx_n_s_C,0};
    PyObject* values[4] = {0,0,0,0};

    /* "lnpy/learn/pyhelper.pyx":63
 *                  np.ndarray[np.float64_t, ndim=1, mode='c'] Y,
 *                  double bias=1,
 *                  np.ndarray[np.float64_t, ndim=1, mode='c'] C=None, **kwargs):             # <<<<<<<<<<<<<<
 * 
 *         cdef double *cp
 */
    values[3] = (PyObject *)((PyArrayObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_X)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_bias);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_C);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwargs, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_X = ((PyArrayObject *)values[0]);
    __pyx_v_Y = ((PyArrayObject *)values[1]);
    if (values[2]) {
      __pyx_v_bias = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_bias == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 62; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_bias = ((double)1.0);
    }
    __pyx_v_C = ((PyArrayObject *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySparseProblem.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_X), __pyx_ptype_5numpy_ndarray, 1, "X", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_Y), __pyx_ptype_5numpy_ndarray, 1, "Y", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 61; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_C), __pyx_ptype_5numpy_ndarray, 1, "C", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_15PySparseProblem___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySparseProblem *)__pyx_v_self), __pyx_v_X, __pyx_v_Y, __pyx_v_bias, __pyx_v_C, __pyx_v_kwargs);

  /* "lnpy/learn/pyhelper.pyx":60
 * cdef class PySparseProblem(PyProblem):
 * 
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=2, mode='c'] X,             # <<<<<<<<<<<<<<
 *                  np.ndarray[np.float64_t, ndim=1, mode='c'] Y,
 *                  double bias=1,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_15PySparseProblem___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySparseProblem *__pyx_v_self, PyArrayObject *__pyx_v_X, PyArrayObject *__pyx_v_Y, double __pyx_v_bias, PyArrayObject *__pyx_v_C, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  double *__pyx_v_cp;
  int __pyx_v_n_trials;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_C;
  __Pyx_Buffer __pyx_pybuffer_C;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_X;
  __Pyx_Buffer __pyx_pybuffer_X;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_Y;
  __Pyx_Buffer __pyx_pybuffer_Y;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_pybuffer_X.pybuffer.buf = NULL;
  __pyx_pybuffer_X.refcount = 0;
  __pyx_pybuffernd_X.data = NULL;
  __pyx_pybuffernd_X.rcbuffer = &__pyx_pybuffer_X;
  __pyx_pybuffer_Y.pybuffer.buf = NULL;
  __pyx_pybuffer_Y.refcount = 0;
  __pyx_pybuffernd_Y.data = NULL;
  __pyx_pybuffernd_Y.rcbuffer = &__pyx_pybuffer_Y;
  __pyx_pybuffer_C.pybuffer.buf = NULL;
  __pyx_pybuffer_C.refcount = 0;
  __pyx_pybuffernd_C.data = NULL;
  __pyx_pybuffernd_C.rcbuffer = &__pyx_pybuffer_C;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_X.rcbuffer->pybuffer, (PyObject*)__pyx_v_X, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_X.diminfo[0].strides = __pyx_pybuffernd_X.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_X.diminfo[0].shape = __pyx_pybuffernd_X.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_X.diminfo[1].strides = __pyx_pybuffernd_X.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_X.diminfo[1].shape = __pyx_pybuffernd_X.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_Y.rcbuffer->pybuffer, (PyObject*)__pyx_v_Y, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_Y.diminfo[0].strides = __pyx_pybuffernd_Y.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_Y.diminfo[0].shape = __pyx_pybuffernd_Y.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_C.rcbuffer->pybuffer, (PyObject*)__pyx_v_C, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_C.diminfo[0].strides = __pyx_pybuffernd_C.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_C.diminfo[0].shape = __pyx_pybuffernd_C.rcbuffer->pybuffer.shape[0];

  /* "lnpy/learn/pyhelper.pyx":66
 * 
 *         cdef double *cp
 *         if C is None:             # <<<<<<<<<<<<<<
 *             cp = <double*>NULL
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_C) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "lnpy/learn/pyhelper.pyx":67
 *         cdef double *cp
 *         if C is None:
 *             cp = <double*>NULL             # <<<<<<<<<<<<<<
 *         else:
 *             cp = <double*>C.data
 */
    __pyx_v_cp = ((double *)NULL);

    /* "lnpy/learn/pyhelper.pyx":66
 * 
 *         cdef double *cp
 *         if C is None:             # <<<<<<<<<<<<<<
 *             cp = <double*>NULL
 *         else:
 */
    goto __pyx_L3;
  }

  /* "lnpy/learn/pyhelper.pyx":69
 *             cp = <double*>NULL
 *         else:
 *             cp = <double*>C.data             # <<<<<<<<<<<<<<
 * 
 *         cdef int n_trials = Y.shape[0] / X.shape[0]
 */
  /*else*/ {
    __pyx_v_cp = ((double *)__pyx_v_C->data);
  }
  __pyx_L3:;

  /* "lnpy/learn/pyhelper.pyx":71
 *             cp = <double*>C.data
 * 
 *         cdef int n_trials = Y.shape[0] / X.shape[0]             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr = new SparseProblem(<double*>X.data, <double*>Y.data,
 */
  if (unlikely((__pyx_v_X->dimensions[0]) == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  else if (sizeof(npy_intp) == sizeof(long) && (!(((npy_intp)-1) > 0)) && unlikely((__pyx_v_X->dimensions[0]) == (npy_intp)-1)  && unlikely(UNARY_NEG_WOULD_OVERFLOW((__pyx_v_Y->dimensions[0])))) {
    PyErr_SetString(PyExc_OverflowError, "value too large to perform division");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 71; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_n_trials = __Pyx_div_npy_intp((__pyx_v_Y->dimensions[0]), (__pyx_v_X->dimensions[0]));

  /* "lnpy/learn/pyhelper.pyx":73
 *         cdef int n_trials = Y.shape[0] / X.shape[0]
 * 
 *         self.thisptr = new SparseProblem(<double*>X.data, <double*>Y.data,             # <<<<<<<<<<<<<<
 *                                          X.shape[0], X.shape[1],
 *                                          bias, n_trials, cp)
 */
  __pyx_v_self->__pyx_base.thisptr = new SparseProblem(((double *)__pyx_v_X->data), ((double *)__pyx_v_Y->data), (__pyx_v_X->dimensions[0]), (__pyx_v_X->dimensions[1]), __pyx_v_bias, __pyx_v_n_trials, __pyx_v_cp);

  /* "lnpy/learn/pyhelper.pyx":60
 * cdef class PySparseProblem(PyProblem):
 * 
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=2, mode='c'] X,             # <<<<<<<<<<<<<<
 *                  np.ndarray[np.float64_t, ndim=1, mode='c'] Y,
 *                  double bias=1,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_C.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_X.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_Y.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySparseProblem.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_C.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_X.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_Y.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":77
 *                                          bias, n_trials, cp)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_15PySparseProblem_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_15PySparseProblem_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_15PySparseProblem_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySparseProblem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_15PySparseProblem_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySparseProblem *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":78
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->__pyx_base.thisptr;

  /* "lnpy/learn/pyhelper.pyx":77
 *                                          bias, n_trials, cp)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":83
 * cdef class PyDenseProblem(PyProblem):
 * 
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=2, mode='c'] X,             # <<<<<<<<<<<<<<
 *                  np.ndarray[np.float64_t, ndim=1, mode='c'] Y,
 *                  double bias=1,
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_14PyDenseProblem_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_14PyDenseProblem_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_X = 0;
  PyArrayObject *__pyx_v_Y = 0;
  double __pyx_v_bias;
  PyArrayObject *__pyx_v_C = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_X,&__pyx_n_s_Y,&__pyx_n_s_bias,&__pyx_n_s_C,0};
    PyObject* values[4] = {0,0,0,0};

    /* "lnpy/learn/pyhelper.pyx":86
 *                  np.ndarray[np.float64_t, ndim=1, mode='c'] Y,
 *                  double bias=1,
 *                  np.ndarray[np.float64_t, ndim=1, mode='c'] C=None, **kwargs):             # <<<<<<<<<<<<<<
 * 
 *         cdef double *cp
 */
    values[3] = (PyObject *)((PyArrayObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_X)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_bias);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_C);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, __pyx_v_kwargs, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_X = ((PyArrayObject *)values[0]);
    __pyx_v_Y = ((PyArrayObject *)values[1]);
    if (values[2]) {
      __pyx_v_bias = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_bias == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_bias = ((double)1.0);
    }
    __pyx_v_C = ((PyArrayObject *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyDenseProblem.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_X), __pyx_ptype_5numpy_ndarray, 1, "X", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_Y), __pyx_ptype_5numpy_ndarray, 1, "Y", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 84; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_C), __pyx_ptype_5numpy_ndarray, 1, "C", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_14PyDenseProblem___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyDenseProblem *)__pyx_v_self), __pyx_v_X, __pyx_v_Y, __pyx_v_bias, __pyx_v_C, __pyx_v_kwargs);

  /* "lnpy/learn/pyhelper.pyx":83
 * cdef class PyDenseProblem(PyProblem):
 * 
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=2, mode='c'] X,             # <<<<<<<<<<<<<<
 *                  np.ndarray[np.float64_t, ndim=1, mode='c'] Y,
 *                  double bias=1,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_14PyDenseProblem___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyDenseProblem *__pyx_v_self, PyArrayObject *__pyx_v_X, PyArrayObject *__pyx_v_Y, double __pyx_v_bias, PyArrayObject *__pyx_v_C, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  double *__pyx_v_cp;
  int __pyx_v_n_trials;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_C;
  __Pyx_Buffer __pyx_pybuffer_C;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_X;
  __Pyx_Buffer __pyx_pybuffer_X;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_Y;
  __Pyx_Buffer __pyx_pybuffer_Y;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_pybuffer_X.pybuffer.buf = NULL;
  __pyx_pybuffer_X.refcount = 0;
  __pyx_pybuffernd_X.data = NULL;
  __pyx_pybuffernd_X.rcbuffer = &__pyx_pybuffer_X;
  __pyx_pybuffer_Y.pybuffer.buf = NULL;
  __pyx_pybuffer_Y.refcount = 0;
  __pyx_pybuffernd_Y.data = NULL;
  __pyx_pybuffernd_Y.rcbuffer = &__pyx_pybuffer_Y;
  __pyx_pybuffer_C.pybuffer.buf = NULL;
  __pyx_pybuffer_C.refcount = 0;
  __pyx_pybuffernd_C.data = NULL;
  __pyx_pybuffernd_C.rcbuffer = &__pyx_pybuffer_C;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_X.rcbuffer->pybuffer, (PyObject*)__pyx_v_X, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_X.diminfo[0].strides = __pyx_pybuffernd_X.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_X.diminfo[0].shape = __pyx_pybuffernd_X.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_X.diminfo[1].strides = __pyx_pybuffernd_X.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_X.diminfo[1].shape = __pyx_pybuffernd_X.rcbuffer->pybuffer.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_Y.rcbuffer->pybuffer, (PyObject*)__pyx_v_Y, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_Y.diminfo[0].strides = __pyx_pybuffernd_Y.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_Y.diminfo[0].shape = __pyx_pybuffernd_Y.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_C.rcbuffer->pybuffer, (PyObject*)__pyx_v_C, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_C.diminfo[0].strides = __pyx_pybuffernd_C.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_C.diminfo[0].shape = __pyx_pybuffernd_C.rcbuffer->pybuffer.shape[0];

  /* "lnpy/learn/pyhelper.pyx":89
 * 
 *         cdef double *cp
 *         if C is None:             # <<<<<<<<<<<<<<
 *             cp = <double*>NULL
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_C) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "lnpy/learn/pyhelper.pyx":90
 *         cdef double *cp
 *         if C is None:
 *             cp = <double*>NULL             # <<<<<<<<<<<<<<
 *         else:
 *             cp = <double*>C.data
 */
    __pyx_v_cp = ((double *)NULL);

    /* "lnpy/learn/pyhelper.pyx":89
 * 
 *         cdef double *cp
 *         if C is None:             # <<<<<<<<<<<<<<
 *             cp = <double*>NULL
 *         else:
 */
    goto __pyx_L3;
  }

  /* "lnpy/learn/pyhelper.pyx":92
 *             cp = <double*>NULL
 *         else:
 *             cp = <double*>C.data             # <<<<<<<<<<<<<<
 * 
 *         cdef int n_trials = Y.shape[0] / X.shape[0]
 */
  /*else*/ {
    __pyx_v_cp = ((double *)__pyx_v_C->data);
  }
  __pyx_L3:;

  /* "lnpy/learn/pyhelper.pyx":94
 *             cp = <double*>C.data
 * 
 *         cdef int n_trials = Y.shape[0] / X.shape[0]             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr = new DenseProblem(<double*>X.data, <double*>Y.data,
 */
  if (unlikely((__pyx_v_X->dimensions[0]) == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  else if (sizeof(npy_intp) == sizeof(long) && (!(((npy_intp)-1) > 0)) && unlikely((__pyx_v_X->dimensions[0]) == (npy_intp)-1)  && unlikely(UNARY_NEG_WOULD_OVERFLOW((__pyx_v_Y->dimensions[0])))) {
    PyErr_SetString(PyExc_OverflowError, "value too large to perform division");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_n_trials = __Pyx_div_npy_intp((__pyx_v_Y->dimensions[0]), (__pyx_v_X->dimensions[0]));

  /* "lnpy/learn/pyhelper.pyx":96
 *         cdef int n_trials = Y.shape[0] / X.shape[0]
 * 
 *         self.thisptr = new DenseProblem(<double*>X.data, <double*>Y.data,             # <<<<<<<<<<<<<<
 * 		                              X.shape[0], X.shape[1],
 *                                         bias, n_trials, cp)
 */
  __pyx_v_self->__pyx_base.thisptr = new DenseProblem(((double *)__pyx_v_X->data), ((double *)__pyx_v_Y->data), (__pyx_v_X->dimensions[0]), (__pyx_v_X->dimensions[1]), __pyx_v_bias, __pyx_v_n_trials, __pyx_v_cp);

  /* "lnpy/learn/pyhelper.pyx":83
 * cdef class PyDenseProblem(PyProblem):
 * 
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=2, mode='c'] X,             # <<<<<<<<<<<<<<
 *                  np.ndarray[np.float64_t, ndim=1, mode='c'] Y,
 *                  double bias=1,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_C.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_X.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_Y.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyDenseProblem.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_C.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_X.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_Y.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":100
 *                                         bias, n_trials, cp)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_14PyDenseProblem_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_14PyDenseProblem_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_14PyDenseProblem_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyDenseProblem *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_14PyDenseProblem_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyDenseProblem *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":101
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->__pyx_base.thisptr;

  /* "lnpy/learn/pyhelper.pyx":100
 *                                         bias, n_trials, cp)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":107
 *     cdef readonly int binary_targets
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.binary_targets = 0
 * 
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_14PyLossFunction_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_14PyLossFunction_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_14PyLossFunction___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_14PyLossFunction___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "lnpy/learn/pyhelper.pyx":108
 * 
 *     def __cinit__(self):
 *         self.binary_targets = 0             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->binary_targets = 0;

  /* "lnpy/learn/pyhelper.pyx":107
 *     cdef readonly int binary_targets
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.binary_targets = 0
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":110
 *         self.binary_targets = 0
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_14PyLossFunction_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_14PyLossFunction_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_14PyLossFunction_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_14PyLossFunction_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":113
 *         pass
 * 
 *     cdef LossFunction* get_pointer(self):             # <<<<<<<<<<<<<<
 *         return <LossFunction*>NULL
 * 
 */

static LossFunction *__pyx_f_4lnpy_5learn_8pyhelper_14PyLossFunction_get_pointer(CYTHON_UNUSED struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *__pyx_v_self) {
  LossFunction *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_pointer", 0);

  /* "lnpy/learn/pyhelper.pyx":114
 * 
 *     cdef LossFunction* get_pointer(self):
 *         return <LossFunction*>NULL             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((LossFunction *)NULL);
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":113
 *         pass
 * 
 *     cdef LossFunction* get_pointer(self):             # <<<<<<<<<<<<<<
 *         return <LossFunction*>NULL
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":105
 * 
 * cdef class PyLossFunction:
 *     cdef readonly int binary_targets             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_14PyLossFunction_14binary_targets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_14PyLossFunction_14binary_targets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_14PyLossFunction_14binary_targets___get__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_14PyLossFunction_14binary_targets___get__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->binary_targets); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyLossFunction.binary_targets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":120
 *     cdef GaussianLoss *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new GaussianLoss()
 *         self.binary_targets = 0
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_14PyGaussianLoss_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_14PyGaussianLoss_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_14PyGaussianLoss___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianLoss *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_14PyGaussianLoss___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianLoss *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "lnpy/learn/pyhelper.pyx":121
 * 
 *     def __cinit__(self):
 *         self.thisptr = new GaussianLoss()             # <<<<<<<<<<<<<<
 *         self.binary_targets = 0
 * 
 */
  __pyx_v_self->thisptr = new GaussianLoss();

  /* "lnpy/learn/pyhelper.pyx":122
 *     def __cinit__(self):
 *         self.thisptr = new GaussianLoss()
 *         self.binary_targets = 0             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.binary_targets = 0;

  /* "lnpy/learn/pyhelper.pyx":120
 *     cdef GaussianLoss *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new GaussianLoss()
 *         self.binary_targets = 0
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":124
 *         self.binary_targets = 0
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_14PyGaussianLoss_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_14PyGaussianLoss_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_14PyGaussianLoss_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianLoss *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_14PyGaussianLoss_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianLoss *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":125
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cdef LossFunction* get_pointer(self):
 */
  delete __pyx_v_self->thisptr;

  /* "lnpy/learn/pyhelper.pyx":124
 *         self.binary_targets = 0
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":127
 *         del self.thisptr
 * 
 *     cdef LossFunction* get_pointer(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr
 * 
 */

static LossFunction *__pyx_f_4lnpy_5learn_8pyhelper_14PyGaussianLoss_get_pointer(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianLoss *__pyx_v_self) {
  LossFunction *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_pointer", 0);

  /* "lnpy/learn/pyhelper.pyx":128
 * 
 *     cdef LossFunction* get_pointer(self):
 *         return self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->thisptr;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":127
 *         del self.thisptr
 * 
 *     cdef LossFunction* get_pointer(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":134
 *     cdef LogLoss *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new LogLoss()
 *         self.binary_targets = 1
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_9PyLogLoss_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_9PyLogLoss_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_9PyLogLoss___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLogLoss *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_9PyLogLoss___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLogLoss *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "lnpy/learn/pyhelper.pyx":135
 * 
 *     def __cinit__(self):
 *         self.thisptr = new LogLoss()             # <<<<<<<<<<<<<<
 *         self.binary_targets = 1
 * 
 */
  __pyx_v_self->thisptr = new LogLoss();

  /* "lnpy/learn/pyhelper.pyx":136
 *     def __cinit__(self):
 *         self.thisptr = new LogLoss()
 *         self.binary_targets = 1             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.binary_targets = 1;

  /* "lnpy/learn/pyhelper.pyx":134
 *     cdef LogLoss *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new LogLoss()
 *         self.binary_targets = 1
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":138
 *         self.binary_targets = 1
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_9PyLogLoss_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_9PyLogLoss_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_9PyLogLoss_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLogLoss *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_9PyLogLoss_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLogLoss *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":139
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cdef LossFunction* get_pointer(self):
 */
  delete __pyx_v_self->thisptr;

  /* "lnpy/learn/pyhelper.pyx":138
 *         self.binary_targets = 1
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":141
 *         del self.thisptr
 * 
 *     cdef LossFunction* get_pointer(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr
 * 
 */

static LossFunction *__pyx_f_4lnpy_5learn_8pyhelper_9PyLogLoss_get_pointer(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLogLoss *__pyx_v_self) {
  LossFunction *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_pointer", 0);

  /* "lnpy/learn/pyhelper.pyx":142
 * 
 *     cdef LossFunction* get_pointer(self):
 *         return self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->thisptr;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":141
 *         del self.thisptr
 * 
 *     cdef LossFunction* get_pointer(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":148
 *     cdef HingeLoss *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new HingeLoss()
 *         self.binary_targets = 1
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_11PyHingeLoss_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_11PyHingeLoss_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_11PyHingeLoss___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyHingeLoss *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_11PyHingeLoss___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyHingeLoss *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "lnpy/learn/pyhelper.pyx":149
 * 
 *     def __cinit__(self):
 *         self.thisptr = new HingeLoss()             # <<<<<<<<<<<<<<
 *         self.binary_targets = 1
 * 
 */
  __pyx_v_self->thisptr = new HingeLoss();

  /* "lnpy/learn/pyhelper.pyx":150
 *     def __cinit__(self):
 *         self.thisptr = new HingeLoss()
 *         self.binary_targets = 1             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.binary_targets = 1;

  /* "lnpy/learn/pyhelper.pyx":148
 *     cdef HingeLoss *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new HingeLoss()
 *         self.binary_targets = 1
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":152
 *         self.binary_targets = 1
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_11PyHingeLoss_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_11PyHingeLoss_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_11PyHingeLoss_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyHingeLoss *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_11PyHingeLoss_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyHingeLoss *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":153
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cdef LossFunction* get_pointer(self):
 */
  delete __pyx_v_self->thisptr;

  /* "lnpy/learn/pyhelper.pyx":152
 *         self.binary_targets = 1
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":155
 *         del self.thisptr
 * 
 *     cdef LossFunction* get_pointer(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr
 * 
 */

static LossFunction *__pyx_f_4lnpy_5learn_8pyhelper_11PyHingeLoss_get_pointer(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyHingeLoss *__pyx_v_self) {
  LossFunction *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_pointer", 0);

  /* "lnpy/learn/pyhelper.pyx":156
 * 
 *     cdef LossFunction* get_pointer(self):
 *         return self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->thisptr;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":155
 *         del self.thisptr
 * 
 *     cdef LossFunction* get_pointer(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":162
 *     cdef SquaredHingeLoss *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new SquaredHingeLoss()
 *         self.binary_targets = 1
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_18PySquaredHingeLoss_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_18PySquaredHingeLoss_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_18PySquaredHingeLoss___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySquaredHingeLoss *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_18PySquaredHingeLoss___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySquaredHingeLoss *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "lnpy/learn/pyhelper.pyx":163
 * 
 *     def __cinit__(self):
 *         self.thisptr = new SquaredHingeLoss()             # <<<<<<<<<<<<<<
 *         self.binary_targets = 1
 * 
 */
  __pyx_v_self->thisptr = new SquaredHingeLoss();

  /* "lnpy/learn/pyhelper.pyx":164
 *     def __cinit__(self):
 *         self.thisptr = new SquaredHingeLoss()
 *         self.binary_targets = 1             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.binary_targets = 1;

  /* "lnpy/learn/pyhelper.pyx":162
 *     cdef SquaredHingeLoss *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new SquaredHingeLoss()
 *         self.binary_targets = 1
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":166
 *         self.binary_targets = 1
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_18PySquaredHingeLoss_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_18PySquaredHingeLoss_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_18PySquaredHingeLoss_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySquaredHingeLoss *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_18PySquaredHingeLoss_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySquaredHingeLoss *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":167
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cdef LossFunction* get_pointer(self):
 */
  delete __pyx_v_self->thisptr;

  /* "lnpy/learn/pyhelper.pyx":166
 *         self.binary_targets = 1
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":169
 *         del self.thisptr
 * 
 *     cdef LossFunction* get_pointer(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr
 * 
 */

static LossFunction *__pyx_f_4lnpy_5learn_8pyhelper_18PySquaredHingeLoss_get_pointer(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySquaredHingeLoss *__pyx_v_self) {
  LossFunction *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_pointer", 0);

  /* "lnpy/learn/pyhelper.pyx":170
 * 
 *     cdef LossFunction* get_pointer(self):
 *         return self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->thisptr;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":169
 *         del self.thisptr
 * 
 *     cdef LossFunction* get_pointer(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":176
 *     cdef PoissonLoss *thisptr
 * 
 *     def __cinit__(self, double dt=1., int canonical=1):             # <<<<<<<<<<<<<<
 *         self.thisptr = new PoissonLoss(dt, canonical > 0)
 * 
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_13PyPoissonLoss_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_13PyPoissonLoss_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_dt;
  int __pyx_v_canonical;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dt,&__pyx_n_s_canonical,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dt);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_canonical);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_dt = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_dt == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_dt = ((double)1.);
    }
    if (values[1]) {
      __pyx_v_canonical = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_canonical == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_canonical = ((int)1);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyPoissonLoss.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_13PyPoissonLoss___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonLoss *)__pyx_v_self), __pyx_v_dt, __pyx_v_canonical);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_13PyPoissonLoss___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonLoss *__pyx_v_self, double __pyx_v_dt, int __pyx_v_canonical) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "lnpy/learn/pyhelper.pyx":177
 * 
 *     def __cinit__(self, double dt=1., int canonical=1):
 *         self.thisptr = new PoissonLoss(dt, canonical > 0)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->thisptr = new PoissonLoss(__pyx_v_dt, (__pyx_v_canonical > 0));

  /* "lnpy/learn/pyhelper.pyx":176
 *     cdef PoissonLoss *thisptr
 * 
 *     def __cinit__(self, double dt=1., int canonical=1):             # <<<<<<<<<<<<<<
 *         self.thisptr = new PoissonLoss(dt, canonical > 0)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":179
 *         self.thisptr = new PoissonLoss(dt, canonical > 0)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_13PyPoissonLoss_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_13PyPoissonLoss_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_13PyPoissonLoss_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonLoss *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_13PyPoissonLoss_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonLoss *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":180
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     cdef LossFunction* get_pointer(self):
 */
  delete __pyx_v_self->thisptr;

  /* "lnpy/learn/pyhelper.pyx":179
 *         self.thisptr = new PoissonLoss(dt, canonical > 0)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":182
 *         del self.thisptr
 * 
 *     cdef LossFunction* get_pointer(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr
 * 
 */

static LossFunction *__pyx_f_4lnpy_5learn_8pyhelper_13PyPoissonLoss_get_pointer(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonLoss *__pyx_v_self) {
  LossFunction *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_pointer", 0);

  /* "lnpy/learn/pyhelper.pyx":183
 * 
 *     cdef LossFunction* get_pointer(self):
 *         return self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->thisptr;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":182
 *         del self.thisptr
 * 
 *     cdef LossFunction* get_pointer(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":190
 *     cdef Prior *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior___cinit__(CYTHON_UNUSED struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":193
 *         pass
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":196
 *         pass
 * 
 *     cdef Prior* get_pointer(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr
 * 
 */

static Prior *__pyx_f_4lnpy_5learn_8pyhelper_7PyPrior_get_pointer(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self) {
  Prior *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_pointer", 0);

  /* "lnpy/learn/pyhelper.pyx":197
 * 
 *     cdef Prior* get_pointer(self):
 *         return self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     property name:
 */
  __pyx_r = __pyx_v_self->thisptr;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":196
 *         pass
 * 
 *     cdef Prior* get_pointer(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":200
 * 
 *     property name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.__class__.__name__
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_4name_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_4name_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_4name___get__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_4name___get__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "lnpy/learn/pyhelper.pyx":201
 *     property name:
 *         def __get__(self):
 *             return self.__class__.__name__             # <<<<<<<<<<<<<<
 * 
 *     property alpha:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 201; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":200
 * 
 *     property name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.__class__.__name__
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyPrior.name.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":204
 * 
 *     property alpha:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.get_alpha()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_5alpha_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_5alpha_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_5alpha___get__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_5alpha___get__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "lnpy/learn/pyhelper.pyx":205
 *     property alpha:
 *         def __get__(self):
 *             return self.thisptr.get_alpha()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, x):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->get_alpha()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":204
 * 
 *     property alpha:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.get_alpha()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyPrior.alpha.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":207
 *             return self.thisptr.get_alpha()
 * 
 *         def __set__(self, x):             # <<<<<<<<<<<<<<
 *             self.thisptr.set_alpha(x)
 * 
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_5alpha_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_5alpha_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_5alpha_2__set__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_5alpha_2__set__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self, PyObject *__pyx_v_x) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "lnpy/learn/pyhelper.pyx":208
 * 
 *         def __set__(self, x):
 *             self.thisptr.set_alpha(x)             # <<<<<<<<<<<<<<
 * 
 *     def get_ndim(self):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->thisptr->set_alpha(__pyx_t_1);

  /* "lnpy/learn/pyhelper.pyx":207
 *             return self.thisptr.get_alpha()
 * 
 *         def __set__(self, x):             # <<<<<<<<<<<<<<
 *             self.thisptr.set_alpha(x)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyPrior.alpha.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":210
 *             self.thisptr.set_alpha(x)
 * 
 *     def get_ndim(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_ndim()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_5get_ndim(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_5get_ndim(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_ndim (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_4get_ndim(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_4get_ndim(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_ndim", 0);

  /* "lnpy/learn/pyhelper.pyx":211
 * 
 *     def get_ndim(self):
 *         return self.thisptr.get_ndim()             # <<<<<<<<<<<<<<
 * 
 *     def set_ndim(self, int d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->get_ndim()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":210
 *             self.thisptr.set_alpha(x)
 * 
 *     def get_ndim(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_ndim()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyPrior.get_ndim", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":213
 *         return self.thisptr.get_ndim()
 * 
 *     def set_ndim(self, int d):             # <<<<<<<<<<<<<<
 *         self.thisptr.set_ndim(d)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_7set_ndim(PyObject *__pyx_v_self, PyObject *__pyx_arg_d); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_7set_ndim(PyObject *__pyx_v_self, PyObject *__pyx_arg_d) {
  int __pyx_v_d;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_ndim (wrapper)", 0);
  assert(__pyx_arg_d); {
    __pyx_v_d = __Pyx_PyInt_As_int(__pyx_arg_d); if (unlikely((__pyx_v_d == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyPrior.set_ndim", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_6set_ndim(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_v_self), ((int)__pyx_v_d));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_6set_ndim(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self, int __pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_ndim", 0);

  /* "lnpy/learn/pyhelper.pyx":214
 * 
 *     def set_ndim(self, int d):
 *         self.thisptr.set_ndim(d)             # <<<<<<<<<<<<<<
 * 
 *     def get_default_grid(self, n_alpha=10, alpha_range=(2.**-20, 2.**20),
 */
  __pyx_v_self->thisptr->set_ndim(__pyx_v_d);

  /* "lnpy/learn/pyhelper.pyx":213
 *         return self.thisptr.get_ndim()
 * 
 *     def set_ndim(self, int d):             # <<<<<<<<<<<<<<
 *         self.thisptr.set_ndim(d)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":216
 *         self.thisptr.set_ndim(d)
 * 
 *     def get_default_grid(self, n_alpha=10, alpha_range=(2.**-20, 2.**20),             # <<<<<<<<<<<<<<
 *                          n_gamma=10, gamma_range=(0., 1.)):
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_9get_default_grid(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_9get_default_grid(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_n_alpha = 0;
  PyObject *__pyx_v_alpha_range = 0;
  PyObject *__pyx_v_n_gamma = 0;
  PyObject *__pyx_v_gamma_range = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_default_grid (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_n_alpha,&__pyx_n_s_alpha_range,&__pyx_n_s_n_gamma,&__pyx_n_s_gamma_range,0};
    PyObject* values[4] = {0,0,0,0};
    values[0] = ((PyObject *)__pyx_int_10);
    values[1] = __pyx_k_;
    values[2] = ((PyObject *)__pyx_int_10);

    /* "lnpy/learn/pyhelper.pyx":217
 * 
 *     def get_default_grid(self, n_alpha=10, alpha_range=(2.**-20, 2.**20),
 *                          n_gamma=10, gamma_range=(0., 1.)):             # <<<<<<<<<<<<<<
 * 
 *         param_grid = {}
 */
    values[3] = ((PyObject *)__pyx_tuple__2);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_n_alpha);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha_range);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_n_gamma);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gamma_range);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "get_default_grid") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_n_alpha = values[0];
    __pyx_v_alpha_range = values[1];
    __pyx_v_n_gamma = values[2];
    __pyx_v_gamma_range = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_default_grid", 0, 0, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyPrior.get_default_grid", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_8get_default_grid(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_v_self), __pyx_v_n_alpha, __pyx_v_alpha_range, __pyx_v_n_gamma, __pyx_v_gamma_range);

  /* "lnpy/learn/pyhelper.pyx":216
 *         self.thisptr.set_ndim(d)
 * 
 *     def get_default_grid(self, n_alpha=10, alpha_range=(2.**-20, 2.**20),             # <<<<<<<<<<<<<<
 *                          n_gamma=10, gamma_range=(0., 1.)):
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_7PyPrior_8get_default_grid(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_self, PyObject *__pyx_v_n_alpha, PyObject *__pyx_v_alpha_range, PyObject *__pyx_v_n_gamma, PyObject *__pyx_v_gamma_range) {
  PyObject *__pyx_v_param_grid = NULL;
  PyObject *__pyx_v_param_info = NULL;
  PyObject *__pyx_v_values = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  Py_ssize_t __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_default_grid", 0);

  /* "lnpy/learn/pyhelper.pyx":219
 *                          n_gamma=10, gamma_range=(0., 1.)):
 * 
 *         param_grid = {}             # <<<<<<<<<<<<<<
 *         param_info = {}
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_param_grid = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "lnpy/learn/pyhelper.pyx":220
 * 
 *         param_grid = {}
 *         param_info = {}             # <<<<<<<<<<<<<<
 * 
 *         if hasattr(self, 'alpha'):
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 220; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_param_info = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "lnpy/learn/pyhelper.pyx":222
 *         param_info = {}
 * 
 *         if hasattr(self, 'alpha'):             # <<<<<<<<<<<<<<
 *             values = 2. ** np.linspace(np.log2(alpha_range[0]),
 *                                        np.log2(alpha_range[1]), n_alpha)
 */
  __pyx_t_2 = PyObject_HasAttr(((PyObject *)__pyx_v_self), __pyx_n_s_alpha); if (unlikely(__pyx_t_2 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "lnpy/learn/pyhelper.pyx":223
 * 
 *         if hasattr(self, 'alpha'):
 *             values = 2. ** np.linspace(np.log2(alpha_range[0]),             # <<<<<<<<<<<<<<
 *                                        np.log2(alpha_range[1]), n_alpha)
 *             param_grid.update({'alpha': values})
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_linspace); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_log2); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_alpha_range, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_4);
    } else {
      __pyx_t_9 = PyTuple_New(1+1); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_8); __pyx_t_8 = NULL;
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_9, 0+1, __pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_9, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "lnpy/learn/pyhelper.pyx":224
 *         if hasattr(self, 'alpha'):
 *             values = 2. ** np.linspace(np.log2(alpha_range[0]),
 *                                        np.log2(alpha_range[1]), n_alpha)             # <<<<<<<<<<<<<<
 *             param_grid.update({'alpha': values})
 *             param_info.update({'alpha': {'scaling': 'log2'}})
 */
    __pyx_t_9 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_log2); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = __Pyx_GetItemInt(__pyx_v_alpha_range, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_8 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    if (!__pyx_t_8) {
      __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_9); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_GOTREF(__pyx_t_7);
    } else {
      __pyx_t_10 = PyTuple_New(1+1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_8); __pyx_t_8 = NULL;
      __Pyx_GIVEREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_10, 0+1, __pyx_t_9);
      __pyx_t_9 = 0;
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_10, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 224; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    __pyx_t_11 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_11 = 1;
      }
    }
    __pyx_t_10 = PyTuple_New(3+__pyx_t_11); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    if (__pyx_t_6) {
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_10, 0+__pyx_t_11, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_10, 1+__pyx_t_11, __pyx_t_7);
    __Pyx_INCREF(__pyx_v_n_alpha);
    __Pyx_GIVEREF(__pyx_v_n_alpha);
    PyTuple_SET_ITEM(__pyx_t_10, 2+__pyx_t_11, __pyx_v_n_alpha);
    __pyx_t_4 = 0;
    __pyx_t_7 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_10, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "lnpy/learn/pyhelper.pyx":223
 * 
 *         if hasattr(self, 'alpha'):
 *             values = 2. ** np.linspace(np.log2(alpha_range[0]),             # <<<<<<<<<<<<<<
 *                                        np.log2(alpha_range[1]), n_alpha)
 *             param_grid.update({'alpha': values})
 */
    __pyx_t_5 = PyNumber_Power(__pyx_float_2_, __pyx_t_1, Py_None); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_values = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "lnpy/learn/pyhelper.pyx":225
 *             values = 2. ** np.linspace(np.log2(alpha_range[0]),
 *                                        np.log2(alpha_range[1]), n_alpha)
 *             param_grid.update({'alpha': values})             # <<<<<<<<<<<<<<
 *             param_info.update({'alpha': {'scaling': 'log2'}})
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_param_grid, __pyx_n_s_update); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_10 = PyDict_New(); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_alpha, __pyx_v_values) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_7) {
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_10); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_GOTREF(__pyx_t_5);
    } else {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_7); __pyx_t_7 = NULL;
      __Pyx_GIVEREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_10);
      __pyx_t_10 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 225; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "lnpy/learn/pyhelper.pyx":226
 *                                        np.log2(alpha_range[1]), n_alpha)
 *             param_grid.update({'alpha': values})
 *             param_info.update({'alpha': {'scaling': 'log2'}})             # <<<<<<<<<<<<<<
 * 
 *         if hasattr(self, 'gamma'):
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_param_info, __pyx_n_s_update); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_10 = PyDict_New(); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_10);
    if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_scaling, __pyx_n_s_log2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_alpha, __pyx_t_10) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    if (!__pyx_t_10) {
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_5);
    } else {
      __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_10); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_10); __pyx_t_10 = NULL;
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_7, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 226; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "lnpy/learn/pyhelper.pyx":222
 *         param_info = {}
 * 
 *         if hasattr(self, 'alpha'):             # <<<<<<<<<<<<<<
 *             values = 2. ** np.linspace(np.log2(alpha_range[0]),
 *                                        np.log2(alpha_range[1]), n_alpha)
 */
  }

  /* "lnpy/learn/pyhelper.pyx":228
 *             param_info.update({'alpha': {'scaling': 'log2'}})
 * 
 *         if hasattr(self, 'gamma'):             # <<<<<<<<<<<<<<
 *             values = np.linspace(gamma_range[0], gamma_range[1], n_gamma)
 *             param_grid.update({'gamma': values})
 */
  __pyx_t_3 = PyObject_HasAttr(((PyObject *)__pyx_v_self), __pyx_n_s_gamma); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "lnpy/learn/pyhelper.pyx":229
 * 
 *         if hasattr(self, 'gamma'):
 *             values = np.linspace(gamma_range[0], gamma_range[1], n_gamma)             # <<<<<<<<<<<<<<
 *             param_grid.update({'gamma': values})
 *             param_info.update({'gamma': {'scaling': 'linear'}})
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_linspace); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_gamma_range, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_gamma_range, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 0); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_10 = NULL;
    __pyx_t_11 = 0;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
        __pyx_t_11 = 1;
      }
    }
    __pyx_t_6 = PyTuple_New(3+__pyx_t_11); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_10) {
      __Pyx_GIVEREF(__pyx_t_10); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_10); __pyx_t_10 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_11, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_11, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_n_gamma);
    __Pyx_GIVEREF(__pyx_v_n_gamma);
    PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_11, __pyx_v_n_gamma);
    __pyx_t_1 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_6, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF_SET(__pyx_v_values, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "lnpy/learn/pyhelper.pyx":230
 *         if hasattr(self, 'gamma'):
 *             values = np.linspace(gamma_range[0], gamma_range[1], n_gamma)
 *             param_grid.update({'gamma': values})             # <<<<<<<<<<<<<<
 *             param_info.update({'gamma': {'scaling': 'linear'}})
 * 
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_param_grid, __pyx_n_s_update); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = PyDict_New(); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_gamma, __pyx_v_values) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_4 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    if (!__pyx_t_4) {
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_5);
    } else {
      __pyx_t_1 = PyTuple_New(1+1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4); __pyx_t_4 = NULL;
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_1, 0+1, __pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_1, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "lnpy/learn/pyhelper.pyx":231
 *             values = np.linspace(gamma_range[0], gamma_range[1], n_gamma)
 *             param_grid.update({'gamma': values})
 *             param_info.update({'gamma': {'scaling': 'linear'}})             # <<<<<<<<<<<<<<
 * 
 *         return param_grid, param_info
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_param_info, __pyx_n_s_update); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = PyDict_New(); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_scaling, __pyx_n_s_linear) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_gamma, __pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_5);
    } else {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6); __pyx_t_6 = NULL;
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "lnpy/learn/pyhelper.pyx":228
 *             param_info.update({'alpha': {'scaling': 'log2'}})
 * 
 *         if hasattr(self, 'gamma'):             # <<<<<<<<<<<<<<
 *             values = np.linspace(gamma_range[0], gamma_range[1], n_gamma)
 *             param_grid.update({'gamma': values})
 */
  }

  /* "lnpy/learn/pyhelper.pyx":233
 *             param_info.update({'gamma': {'scaling': 'linear'}})
 * 
 *         return param_grid, param_info             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(__pyx_v_param_grid);
  __Pyx_GIVEREF(__pyx_v_param_grid);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_param_grid);
  __Pyx_INCREF(__pyx_v_param_info);
  __Pyx_GIVEREF(__pyx_v_param_info);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_param_info);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":216
 *         self.thisptr.set_ndim(d)
 * 
 *     def get_default_grid(self, n_alpha=10, alpha_range=(2.**-20, 2.**20),             # <<<<<<<<<<<<<<
 *                          n_gamma=10, gamma_range=(0., 1.)):
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyPrior.get_default_grid", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_param_grid);
  __Pyx_XDECREF(__pyx_v_param_info);
  __Pyx_XDECREF(__pyx_v_values);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":238
 * cdef class PyGaussianPrior(PyPrior):
 * 
 *     def __cinit__(self, double alpha=0, int ndim=-1, int penalize_bias=-1,             # <<<<<<<<<<<<<<
 *                   np.ndarray[np.float64_t, ndim=1, mode='c'] mu=None):
 *         if mu is None:
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_15PyGaussianPrior_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_15PyGaussianPrior_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_alpha;
  int __pyx_v_ndim;
  int __pyx_v_penalize_bias;
  PyArrayObject *__pyx_v_mu = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_alpha,&__pyx_n_s_ndim,&__pyx_n_s_penalize_bias,&__pyx_n_s_mu,0};
    PyObject* values[4] = {0,0,0,0};

    /* "lnpy/learn/pyhelper.pyx":239
 * 
 *     def __cinit__(self, double alpha=0, int ndim=-1, int penalize_bias=-1,
 *                   np.ndarray[np.float64_t, ndim=1, mode='c'] mu=None):             # <<<<<<<<<<<<<<
 *         if mu is None:
 *             self.thisptr = new GaussianPrior(alpha, ndim, penalize_bias)
 */
    values[3] = (PyObject *)((PyArrayObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ndim);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_penalize_bias);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_mu);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_alpha = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_alpha == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_alpha = ((double)0.0);
    }
    if (values[1]) {
      __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_ndim = ((int)-1);
    }
    if (values[2]) {
      __pyx_v_penalize_bias = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_penalize_bias == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_penalize_bias = ((int)-1);
    }
    __pyx_v_mu = ((PyArrayObject *)values[3]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyGaussianPrior.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_mu), __pyx_ptype_5numpy_ndarray, 1, "mu", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_15PyGaussianPrior___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianPrior *)__pyx_v_self), __pyx_v_alpha, __pyx_v_ndim, __pyx_v_penalize_bias, __pyx_v_mu);

  /* "lnpy/learn/pyhelper.pyx":238
 * cdef class PyGaussianPrior(PyPrior):
 * 
 *     def __cinit__(self, double alpha=0, int ndim=-1, int penalize_bias=-1,             # <<<<<<<<<<<<<<
 *                   np.ndarray[np.float64_t, ndim=1, mode='c'] mu=None):
 *         if mu is None:
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_15PyGaussianPrior___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianPrior *__pyx_v_self, double __pyx_v_alpha, int __pyx_v_ndim, int __pyx_v_penalize_bias, PyArrayObject *__pyx_v_mu) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_mu;
  __Pyx_Buffer __pyx_pybuffer_mu;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_pybuffer_mu.pybuffer.buf = NULL;
  __pyx_pybuffer_mu.refcount = 0;
  __pyx_pybuffernd_mu.data = NULL;
  __pyx_pybuffernd_mu.rcbuffer = &__pyx_pybuffer_mu;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_mu.rcbuffer->pybuffer, (PyObject*)__pyx_v_mu, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_mu.diminfo[0].strides = __pyx_pybuffernd_mu.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_mu.diminfo[0].shape = __pyx_pybuffernd_mu.rcbuffer->pybuffer.shape[0];

  /* "lnpy/learn/pyhelper.pyx":240
 *     def __cinit__(self, double alpha=0, int ndim=-1, int penalize_bias=-1,
 *                   np.ndarray[np.float64_t, ndim=1, mode='c'] mu=None):
 *         if mu is None:             # <<<<<<<<<<<<<<
 *             self.thisptr = new GaussianPrior(alpha, ndim, penalize_bias)
 *         else:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_mu) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "lnpy/learn/pyhelper.pyx":241
 *                   np.ndarray[np.float64_t, ndim=1, mode='c'] mu=None):
 *         if mu is None:
 *             self.thisptr = new GaussianPrior(alpha, ndim, penalize_bias)             # <<<<<<<<<<<<<<
 *         else:
 *             self.thisptr = new GaussianPrior(alpha, <double*>mu.data,
 */
    __pyx_v_self->__pyx_base.thisptr = new GaussianPrior(__pyx_v_alpha, __pyx_v_ndim, __pyx_v_penalize_bias);

    /* "lnpy/learn/pyhelper.pyx":240
 *     def __cinit__(self, double alpha=0, int ndim=-1, int penalize_bias=-1,
 *                   np.ndarray[np.float64_t, ndim=1, mode='c'] mu=None):
 *         if mu is None:             # <<<<<<<<<<<<<<
 *             self.thisptr = new GaussianPrior(alpha, ndim, penalize_bias)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "lnpy/learn/pyhelper.pyx":243
 *             self.thisptr = new GaussianPrior(alpha, ndim, penalize_bias)
 *         else:
 *             self.thisptr = new GaussianPrior(alpha, <double*>mu.data,             # <<<<<<<<<<<<<<
 *                                              mu.shape[0], penalize_bias)
 * 
 */
  /*else*/ {

    /* "lnpy/learn/pyhelper.pyx":244
 *         else:
 *             self.thisptr = new GaussianPrior(alpha, <double*>mu.data,
 *                                              mu.shape[0], penalize_bias)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
    __pyx_v_self->__pyx_base.thisptr = new GaussianPrior(__pyx_v_alpha, ((double *)__pyx_v_mu->data), (__pyx_v_mu->dimensions[0]), __pyx_v_penalize_bias);
  }
  __pyx_L3:;

  /* "lnpy/learn/pyhelper.pyx":238
 * cdef class PyGaussianPrior(PyPrior):
 * 
 *     def __cinit__(self, double alpha=0, int ndim=-1, int penalize_bias=-1,             # <<<<<<<<<<<<<<
 *                   np.ndarray[np.float64_t, ndim=1, mode='c'] mu=None):
 *         if mu is None:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_mu.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyGaussianPrior.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_mu.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":246
 *                                              mu.shape[0], penalize_bias)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_15PyGaussianPrior_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_15PyGaussianPrior_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_15PyGaussianPrior_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianPrior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_15PyGaussianPrior_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianPrior *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":247
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->__pyx_base.thisptr;

  /* "lnpy/learn/pyhelper.pyx":246
 *                                              mu.shape[0], penalize_bias)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":252
 * cdef class PyLaplacePrior(PyPrior):
 * 
 *     def __cinit__(self, double alpha=0, int ndim=-1, double eps=1e-8):             # <<<<<<<<<<<<<<
 *         self.thisptr = new LaplacePrior(alpha, ndim, eps)
 * 
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_14PyLaplacePrior_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_14PyLaplacePrior_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_alpha;
  int __pyx_v_ndim;
  double __pyx_v_eps;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_alpha,&__pyx_n_s_ndim,&__pyx_n_s_eps,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ndim);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_eps);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_alpha = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_alpha == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_alpha = ((double)0.0);
    }
    if (values[1]) {
      __pyx_v_ndim = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_ndim = ((int)-1);
    }
    if (values[2]) {
      __pyx_v_eps = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_eps == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_eps = ((double)1e-8);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 252; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyLaplacePrior.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_14PyLaplacePrior___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLaplacePrior *)__pyx_v_self), __pyx_v_alpha, __pyx_v_ndim, __pyx_v_eps);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_14PyLaplacePrior___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLaplacePrior *__pyx_v_self, double __pyx_v_alpha, int __pyx_v_ndim, double __pyx_v_eps) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "lnpy/learn/pyhelper.pyx":253
 * 
 *     def __cinit__(self, double alpha=0, int ndim=-1, double eps=1e-8):
 *         self.thisptr = new LaplacePrior(alpha, ndim, eps)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.thisptr = new LaplacePrior(__pyx_v_alpha, __pyx_v_ndim, __pyx_v_eps);

  /* "lnpy/learn/pyhelper.pyx":252
 * cdef class PyLaplacePrior(PyPrior):
 * 
 *     def __cinit__(self, double alpha=0, int ndim=-1, double eps=1e-8):             # <<<<<<<<<<<<<<
 *         self.thisptr = new LaplacePrior(alpha, ndim, eps)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":255
 *         self.thisptr = new LaplacePrior(alpha, ndim, eps)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_14PyLaplacePrior_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_14PyLaplacePrior_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_14PyLaplacePrior_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLaplacePrior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_14PyLaplacePrior_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLaplacePrior *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":256
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->__pyx_base.thisptr;

  /* "lnpy/learn/pyhelper.pyx":255
 *         self.thisptr = new LaplacePrior(alpha, ndim, eps)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":261
 * cdef class PyMixedPrior(PyPrior):
 * 
 *     def __cinit__(self, PyPrior p, PyPrior q, double alpha=1, double gamma=.5):             # <<<<<<<<<<<<<<
 *         self.thisptr = new MixedPrior(p.get_pointer(), q.get_pointer(),
 *                                       alpha, gamma)
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_12PyMixedPrior_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_12PyMixedPrior_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_p = 0;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_q = 0;
  double __pyx_v_alpha;
  double __pyx_v_gamma;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_p,&__pyx_n_s_q,&__pyx_n_s_alpha,&__pyx_n_s_gamma,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_p)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_q)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gamma);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)values[0]);
    __pyx_v_q = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)values[1]);
    if (values[2]) {
      __pyx_v_alpha = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_alpha == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_alpha = ((double)1.0);
    }
    if (values[3]) {
      __pyx_v_gamma = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_gamma == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_gamma = ((double).5);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyMixedPrior.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p), __pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior, 1, "p", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_q), __pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior, 1, "q", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_12PyMixedPrior___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *)__pyx_v_self), __pyx_v_p, __pyx_v_q, __pyx_v_alpha, __pyx_v_gamma);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_12PyMixedPrior___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_p, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_q, double __pyx_v_alpha, double __pyx_v_gamma) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "lnpy/learn/pyhelper.pyx":262
 * 
 *     def __cinit__(self, PyPrior p, PyPrior q, double alpha=1, double gamma=.5):
 *         self.thisptr = new MixedPrior(p.get_pointer(), q.get_pointer(),             # <<<<<<<<<<<<<<
 *                                       alpha, gamma)
 * 
 */
  __pyx_v_self->__pyx_base.thisptr = new MixedPrior(((struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_v_p->__pyx_vtab)->get_pointer(__pyx_v_p), ((struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_v_q->__pyx_vtab)->get_pointer(__pyx_v_q), __pyx_v_alpha, __pyx_v_gamma);

  /* "lnpy/learn/pyhelper.pyx":261
 * cdef class PyMixedPrior(PyPrior):
 * 
 *     def __cinit__(self, PyPrior p, PyPrior q, double alpha=1, double gamma=.5):             # <<<<<<<<<<<<<<
 *         self.thisptr = new MixedPrior(p.get_pointer(), q.get_pointer(),
 *                                       alpha, gamma)
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":265
 *                                       alpha, gamma)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_12PyMixedPrior_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_12PyMixedPrior_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_12PyMixedPrior_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_12PyMixedPrior_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":266
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def __reduce__(self):
 */
  delete __pyx_v_self->__pyx_base.thisptr;

  /* "lnpy/learn/pyhelper.pyx":265
 *                                       alpha, gamma)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":268
 *         del self.thisptr
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         cdef MixedPrior *cp
 *         cp = <MixedPrior*>self.thisptr
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_12PyMixedPrior_5__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_12PyMixedPrior_5__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_12PyMixedPrior_4__reduce__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_12PyMixedPrior_4__reduce__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *__pyx_v_self) {
  MixedPrior *__pyx_v_cp;
  float __pyx_v_alpha;
  float __pyx_v_gamma;
  Prior *__pyx_v_tp1;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_p1 = 0;
  Prior *__pyx_v_tp2;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_p2 = 0;
  PyObject *__pyx_v_dd = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce__", 0);

  /* "lnpy/learn/pyhelper.pyx":270
 *     def __reduce__(self):
 *         cdef MixedPrior *cp
 *         cp = <MixedPrior*>self.thisptr             # <<<<<<<<<<<<<<
 * 
 *         cpdef float alpha = cp.get_alpha()
 */
  __pyx_v_cp = ((MixedPrior *)__pyx_v_self->__pyx_base.thisptr);

  /* "lnpy/learn/pyhelper.pyx":272
 *         cp = <MixedPrior*>self.thisptr
 * 
 *         cpdef float alpha = cp.get_alpha()             # <<<<<<<<<<<<<<
 *         cpdef float gamma = cp.get_gamma()
 *         cdef Prior *tp1 = <Prior*>cp.get_prior_1()
 */
  __pyx_v_alpha = __pyx_v_cp->get_alpha();

  /* "lnpy/learn/pyhelper.pyx":273
 * 
 *         cpdef float alpha = cp.get_alpha()
 *         cpdef float gamma = cp.get_gamma()             # <<<<<<<<<<<<<<
 *         cdef Prior *tp1 = <Prior*>cp.get_prior_1()
 *         cpdef PyPrior p1 = PyPrior()
 */
  __pyx_v_gamma = __pyx_v_cp->get_gamma();

  /* "lnpy/learn/pyhelper.pyx":274
 *         cpdef float alpha = cp.get_alpha()
 *         cpdef float gamma = cp.get_gamma()
 *         cdef Prior *tp1 = <Prior*>cp.get_prior_1()             # <<<<<<<<<<<<<<
 *         cpdef PyPrior p1 = PyPrior()
 *         p1.thisptr = tp1
 */
  __pyx_v_tp1 = ((Prior *)__pyx_v_cp->get_prior_1());

  /* "lnpy/learn/pyhelper.pyx":275
 *         cpdef float gamma = cp.get_gamma()
 *         cdef Prior *tp1 = <Prior*>cp.get_prior_1()
 *         cpdef PyPrior p1 = PyPrior()             # <<<<<<<<<<<<<<
 *         p1.thisptr = tp1
 *         cdef Prior *tp2 = <Prior*>cp.get_prior_2()
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_p1 = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "lnpy/learn/pyhelper.pyx":276
 *         cdef Prior *tp1 = <Prior*>cp.get_prior_1()
 *         cpdef PyPrior p1 = PyPrior()
 *         p1.thisptr = tp1             # <<<<<<<<<<<<<<
 *         cdef Prior *tp2 = <Prior*>cp.get_prior_2()
 *         cpdef PyPrior p2 = PyPrior()
 */
  __pyx_v_p1->thisptr = __pyx_v_tp1;

  /* "lnpy/learn/pyhelper.pyx":277
 *         cpdef PyPrior p1 = PyPrior()
 *         p1.thisptr = tp1
 *         cdef Prior *tp2 = <Prior*>cp.get_prior_2()             # <<<<<<<<<<<<<<
 *         cpdef PyPrior p2 = PyPrior()
 *         p2.thisptr = tp2
 */
  __pyx_v_tp2 = ((Prior *)__pyx_v_cp->get_prior_2());

  /* "lnpy/learn/pyhelper.pyx":278
 *         p1.thisptr = tp1
 *         cdef Prior *tp2 = <Prior*>cp.get_prior_2()
 *         cpdef PyPrior p2 = PyPrior()             # <<<<<<<<<<<<<<
 *         p2.thisptr = tp2
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_p2 = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "lnpy/learn/pyhelper.pyx":279
 *         cdef Prior *tp2 = <Prior*>cp.get_prior_2()
 *         cpdef PyPrior p2 = PyPrior()
 *         p2.thisptr = tp2             # <<<<<<<<<<<<<<
 * 
 *         dd = (rebuild_mixed_prior, (p1, p2, alpha, gamma))
 */
  __pyx_v_p2->thisptr = __pyx_v_tp2;

  /* "lnpy/learn/pyhelper.pyx":281
 *         p2.thisptr = tp2
 * 
 *         dd = (rebuild_mixed_prior, (p1, p2, alpha, gamma))             # <<<<<<<<<<<<<<
 *         return dd
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_rebuild_mixed_prior); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_alpha); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_gamma); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(((PyObject *)__pyx_v_p1));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_p1));
  PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_v_p1));
  __Pyx_INCREF(((PyObject *)__pyx_v_p2));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_p2));
  PyTuple_SET_ITEM(__pyx_t_4, 1, ((PyObject *)__pyx_v_p2));
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_4);
  __pyx_t_1 = 0;
  __pyx_t_4 = 0;
  __pyx_v_dd = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "lnpy/learn/pyhelper.pyx":282
 * 
 *         dd = (rebuild_mixed_prior, (p1, p2, alpha, gamma))
 *         return dd             # <<<<<<<<<<<<<<
 * 
 *     property gamma:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_dd);
  __pyx_r = __pyx_v_dd;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":268
 *         del self.thisptr
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         cdef MixedPrior *cp
 *         cp = <MixedPrior*>self.thisptr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyMixedPrior.__reduce__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_p1);
  __Pyx_XDECREF((PyObject *)__pyx_v_p2);
  __Pyx_XDECREF(__pyx_v_dd);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":285
 * 
 *     property gamma:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef MixedPrior *cp
 *             cp = <MixedPrior*>self.thisptr
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_12PyMixedPrior_5gamma_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_12PyMixedPrior_5gamma_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_12PyMixedPrior_5gamma___get__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_12PyMixedPrior_5gamma___get__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *__pyx_v_self) {
  MixedPrior *__pyx_v_cp;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "lnpy/learn/pyhelper.pyx":287
 *         def __get__(self):
 *             cdef MixedPrior *cp
 *             cp = <MixedPrior*>self.thisptr             # <<<<<<<<<<<<<<
 *             return cp.get_gamma()
 * 
 */
  __pyx_v_cp = ((MixedPrior *)__pyx_v_self->__pyx_base.thisptr);

  /* "lnpy/learn/pyhelper.pyx":288
 *             cdef MixedPrior *cp
 *             cp = <MixedPrior*>self.thisptr
 *             return cp.get_gamma()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, x):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_cp->get_gamma()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":285
 * 
 *     property gamma:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef MixedPrior *cp
 *             cp = <MixedPrior*>self.thisptr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyMixedPrior.gamma.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":290
 *             return cp.get_gamma()
 * 
 *         def __set__(self, x):             # <<<<<<<<<<<<<<
 *             cdef MixedPrior *cp = <MixedPrior*>self.thisptr
 *             cp.set_gamma(x)
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_12PyMixedPrior_5gamma_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_12PyMixedPrior_5gamma_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_12PyMixedPrior_5gamma_2__set__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_12PyMixedPrior_5gamma_2__set__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *__pyx_v_self, PyObject *__pyx_v_x) {
  MixedPrior *__pyx_v_cp;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "lnpy/learn/pyhelper.pyx":291
 * 
 *         def __set__(self, x):
 *             cdef MixedPrior *cp = <MixedPrior*>self.thisptr             # <<<<<<<<<<<<<<
 *             cp.set_gamma(x)
 * 
 */
  __pyx_v_cp = ((MixedPrior *)__pyx_v_self->__pyx_base.thisptr);

  /* "lnpy/learn/pyhelper.pyx":292
 *         def __set__(self, x):
 *             cdef MixedPrior *cp = <MixedPrior*>self.thisptr
 *             cp.set_gamma(x)             # <<<<<<<<<<<<<<
 * 
 * def rebuild_mixed_prior(p1, p2, alpha, gamma):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_cp->set_gamma(__pyx_t_1);

  /* "lnpy/learn/pyhelper.pyx":290
 *             return cp.get_gamma()
 * 
 *         def __set__(self, x):             # <<<<<<<<<<<<<<
 *             cdef MixedPrior *cp = <MixedPrior*>self.thisptr
 *             cp.set_gamma(x)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyMixedPrior.gamma.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":294
 *             cp.set_gamma(x)
 * 
 * def rebuild_mixed_prior(p1, p2, alpha, gamma):             # <<<<<<<<<<<<<<
 *     return PyMixedPrior(p1, p2, alpha, gamma)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_1rebuild_mixed_prior(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4lnpy_5learn_8pyhelper_1rebuild_mixed_prior = {"rebuild_mixed_prior", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_1rebuild_mixed_prior, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_1rebuild_mixed_prior(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_p1 = 0;
  PyObject *__pyx_v_p2 = 0;
  PyObject *__pyx_v_alpha = 0;
  PyObject *__pyx_v_gamma = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rebuild_mixed_prior (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_p1,&__pyx_n_s_p2,&__pyx_n_s_alpha,&__pyx_n_s_gamma,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_p1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_p2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("rebuild_mixed_prior", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("rebuild_mixed_prior", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gamma)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("rebuild_mixed_prior", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "rebuild_mixed_prior") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_p1 = values[0];
    __pyx_v_p2 = values[1];
    __pyx_v_alpha = values[2];
    __pyx_v_gamma = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rebuild_mixed_prior", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.rebuild_mixed_prior", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_rebuild_mixed_prior(__pyx_self, __pyx_v_p1, __pyx_v_p2, __pyx_v_alpha, __pyx_v_gamma);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_rebuild_mixed_prior(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_p1, PyObject *__pyx_v_p2, PyObject *__pyx_v_alpha, PyObject *__pyx_v_gamma) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rebuild_mixed_prior", 0);

  /* "lnpy/learn/pyhelper.pyx":295
 * 
 * def rebuild_mixed_prior(p1, p2, alpha, gamma):
 *     return PyMixedPrior(p1, p2, alpha, gamma)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_p1);
  __Pyx_GIVEREF(__pyx_v_p1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_p1);
  __Pyx_INCREF(__pyx_v_p2);
  __Pyx_GIVEREF(__pyx_v_p2);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_p2);
  __Pyx_INCREF(__pyx_v_alpha);
  __Pyx_GIVEREF(__pyx_v_alpha);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_alpha);
  __Pyx_INCREF(__pyx_v_gamma);
  __Pyx_GIVEREF(__pyx_v_gamma);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_v_gamma);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4lnpy_5learn_8pyhelper_PyMixedPrior), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":294
 *             cp.set_gamma(x)
 * 
 * def rebuild_mixed_prior(p1, p2, alpha, gamma):             # <<<<<<<<<<<<<<
 *     return PyMixedPrior(p1, p2, alpha, gamma)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.rebuild_mixed_prior", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":300
 * cdef class PyENetPrior(PyPrior):
 * 
 *     def __cinit__(self, double alpha=1., double gamma=.5, int ndim=-1,             # <<<<<<<<<<<<<<
 *                   double eps=1e-12):
 *         self.thisptr = new ElasticNetPrior(alpha, gamma, ndim, eps)
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_11PyENetPrior_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_11PyENetPrior_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_alpha;
  double __pyx_v_gamma;
  int __pyx_v_ndim;
  double __pyx_v_eps;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_alpha,&__pyx_n_s_gamma,&__pyx_n_s_ndim,&__pyx_n_s_eps,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gamma);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ndim);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_eps);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_alpha = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_alpha == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_alpha = ((double)1.);
    }
    if (values[1]) {
      __pyx_v_gamma = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_gamma == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_gamma = ((double).5);
    }
    if (values[2]) {
      __pyx_v_ndim = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_ndim == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_ndim = ((int)-1);
    }
    if (values[3]) {
      __pyx_v_eps = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_eps == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_eps = ((double)1e-12);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyENetPrior.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_11PyENetPrior___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior *)__pyx_v_self), __pyx_v_alpha, __pyx_v_gamma, __pyx_v_ndim, __pyx_v_eps);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_11PyENetPrior___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior *__pyx_v_self, double __pyx_v_alpha, double __pyx_v_gamma, int __pyx_v_ndim, double __pyx_v_eps) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "lnpy/learn/pyhelper.pyx":302
 *     def __cinit__(self, double alpha=1., double gamma=.5, int ndim=-1,
 *                   double eps=1e-12):
 *         self.thisptr = new ElasticNetPrior(alpha, gamma, ndim, eps)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->__pyx_base.thisptr = new ElasticNetPrior(__pyx_v_alpha, __pyx_v_gamma, __pyx_v_ndim, __pyx_v_eps);

  /* "lnpy/learn/pyhelper.pyx":300
 * cdef class PyENetPrior(PyPrior):
 * 
 *     def __cinit__(self, double alpha=1., double gamma=.5, int ndim=-1,             # <<<<<<<<<<<<<<
 *                   double eps=1e-12):
 *         self.thisptr = new ElasticNetPrior(alpha, gamma, ndim, eps)
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":304
 *         self.thisptr = new ElasticNetPrior(alpha, gamma, ndim, eps)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_11PyENetPrior_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_11PyENetPrior_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_11PyENetPrior_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_11PyENetPrior_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":305
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     property gamma:
 */
  delete __pyx_v_self->__pyx_base.thisptr;

  /* "lnpy/learn/pyhelper.pyx":304
 *         self.thisptr = new ElasticNetPrior(alpha, gamma, ndim, eps)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":308
 * 
 *     property gamma:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef ElasticNetPrior *cp
 *             cp = <ElasticNetPrior*>self.thisptr
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_11PyENetPrior_5gamma_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_11PyENetPrior_5gamma_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_11PyENetPrior_5gamma___get__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_11PyENetPrior_5gamma___get__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior *__pyx_v_self) {
  ElasticNetPrior *__pyx_v_cp;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "lnpy/learn/pyhelper.pyx":310
 *         def __get__(self):
 *             cdef ElasticNetPrior *cp
 *             cp = <ElasticNetPrior*>self.thisptr             # <<<<<<<<<<<<<<
 *             return cp.get_gamma()
 * 
 */
  __pyx_v_cp = ((ElasticNetPrior *)__pyx_v_self->__pyx_base.thisptr);

  /* "lnpy/learn/pyhelper.pyx":311
 *             cdef ElasticNetPrior *cp
 *             cp = <ElasticNetPrior*>self.thisptr
 *             return cp.get_gamma()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, x):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_cp->get_gamma()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":308
 * 
 *     property gamma:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef ElasticNetPrior *cp
 *             cp = <ElasticNetPrior*>self.thisptr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyENetPrior.gamma.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":313
 *             return cp.get_gamma()
 * 
 *         def __set__(self, x):             # <<<<<<<<<<<<<<
 *             cdef ElasticNetPrior *cp = <ElasticNetPrior*>self.thisptr
 *             cp.set_gamma(x)
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_11PyENetPrior_5gamma_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_11PyENetPrior_5gamma_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_11PyENetPrior_5gamma_2__set__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_11PyENetPrior_5gamma_2__set__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior *__pyx_v_self, PyObject *__pyx_v_x) {
  ElasticNetPrior *__pyx_v_cp;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "lnpy/learn/pyhelper.pyx":314
 * 
 *         def __set__(self, x):
 *             cdef ElasticNetPrior *cp = <ElasticNetPrior*>self.thisptr             # <<<<<<<<<<<<<<
 *             cp.set_gamma(x)
 * 
 */
  __pyx_v_cp = ((ElasticNetPrior *)__pyx_v_self->__pyx_base.thisptr);

  /* "lnpy/learn/pyhelper.pyx":315
 *         def __set__(self, x):
 *             cdef ElasticNetPrior *cp = <ElasticNetPrior*>self.thisptr
 *             cp.set_gamma(x)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_cp->set_gamma(__pyx_t_1);

  /* "lnpy/learn/pyhelper.pyx":313
 *             return cp.get_gamma()
 * 
 *         def __set__(self, x):             # <<<<<<<<<<<<<<
 *             cdef ElasticNetPrior *cp = <ElasticNetPrior*>self.thisptr
 *             cp.set_gamma(x)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyENetPrior.gamma.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":321
 *     cdef np.ndarray precision_mat
 * 
 *     def __cinit__(self, double alpha=0, double gamma=0,             # <<<<<<<<<<<<<<
 *                   np.ndarray[np.float64_t, ndim=2, mode='c'] D=None):
 *         self.thisptr = new SmoothnessPrior(alpha, gamma, <double*>D.data,
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_alpha;
  double __pyx_v_gamma;
  PyArrayObject *__pyx_v_D = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_alpha,&__pyx_n_s_gamma,&__pyx_n_s_D,0};
    PyObject* values[3] = {0,0,0};

    /* "lnpy/learn/pyhelper.pyx":322
 * 
 *     def __cinit__(self, double alpha=0, double gamma=0,
 *                   np.ndarray[np.float64_t, ndim=2, mode='c'] D=None):             # <<<<<<<<<<<<<<
 *         self.thisptr = new SmoothnessPrior(alpha, gamma, <double*>D.data,
 *                                            D.shape[0])
 */
    values[2] = (PyObject *)((PyArrayObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gamma);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_D);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_alpha = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_alpha == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_alpha = ((double)0.0);
    }
    if (values[1]) {
      __pyx_v_gamma = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_gamma == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_gamma = ((double)0.0);
    }
    __pyx_v_D = ((PyArrayObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySmoothnessPrior.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_D), __pyx_ptype_5numpy_ndarray, 1, "D", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *)__pyx_v_self), __pyx_v_alpha, __pyx_v_gamma, __pyx_v_D);

  /* "lnpy/learn/pyhelper.pyx":321
 *     cdef np.ndarray precision_mat
 * 
 *     def __cinit__(self, double alpha=0, double gamma=0,             # <<<<<<<<<<<<<<
 *                   np.ndarray[np.float64_t, ndim=2, mode='c'] D=None):
 *         self.thisptr = new SmoothnessPrior(alpha, gamma, <double*>D.data,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *__pyx_v_self, double __pyx_v_alpha, double __pyx_v_gamma, PyArrayObject *__pyx_v_D) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_D;
  __Pyx_Buffer __pyx_pybuffer_D;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __pyx_pybuffer_D.pybuffer.buf = NULL;
  __pyx_pybuffer_D.refcount = 0;
  __pyx_pybuffernd_D.data = NULL;
  __pyx_pybuffernd_D.rcbuffer = &__pyx_pybuffer_D;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_D.rcbuffer->pybuffer, (PyObject*)__pyx_v_D, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_D.diminfo[0].strides = __pyx_pybuffernd_D.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_D.diminfo[0].shape = __pyx_pybuffernd_D.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_D.diminfo[1].strides = __pyx_pybuffernd_D.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_D.diminfo[1].shape = __pyx_pybuffernd_D.rcbuffer->pybuffer.shape[1];

  /* "lnpy/learn/pyhelper.pyx":323
 *     def __cinit__(self, double alpha=0, double gamma=0,
 *                   np.ndarray[np.float64_t, ndim=2, mode='c'] D=None):
 *         self.thisptr = new SmoothnessPrior(alpha, gamma, <double*>D.data,             # <<<<<<<<<<<<<<
 *                                            D.shape[0])
 *         self.precision_mat = np.copy(D)
 */
  __pyx_v_self->__pyx_base.thisptr = new SmoothnessPrior(__pyx_v_alpha, __pyx_v_gamma, ((double *)__pyx_v_D->data), (__pyx_v_D->dimensions[0]));

  /* "lnpy/learn/pyhelper.pyx":325
 *         self.thisptr = new SmoothnessPrior(alpha, gamma, <double*>D.data,
 *                                            D.shape[0])
 *         self.precision_mat = np.copy(D)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_copy); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_D)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_D));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_D));
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_D));
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->precision_mat);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->precision_mat));
  __pyx_v_self->precision_mat = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "lnpy/learn/pyhelper.pyx":321
 *     cdef np.ndarray precision_mat
 * 
 *     def __cinit__(self, double alpha=0, double gamma=0,             # <<<<<<<<<<<<<<
 *                   np.ndarray[np.float64_t, ndim=2, mode='c'] D=None):
 *         self.thisptr = new SmoothnessPrior(alpha, gamma, <double*>D.data,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_D.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySmoothnessPrior.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_D.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":327
 *         self.precision_mat = np.copy(D)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":328
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def __reduce__(self):
 */
  delete __pyx_v_self->__pyx_base.thisptr;

  /* "lnpy/learn/pyhelper.pyx":327
 *         self.precision_mat = np.copy(D)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":330
 *         del self.thisptr
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         cdef SmoothnessPrior *cp
 *         cp = <SmoothnessPrior*>self.thisptr
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_4__reduce__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_4__reduce__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *__pyx_v_self) {
  SmoothnessPrior *__pyx_v_cp;
  float __pyx_v_alpha;
  float __pyx_v_gamma;
  CYTHON_UNUSED int __pyx_v_ndim;
  PyArrayObject *__pyx_v_D = 0;
  PyObject *__pyx_v_dd = NULL;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_D;
  __Pyx_Buffer __pyx_pybuffer_D;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce__", 0);
  __pyx_pybuffer_D.pybuffer.buf = NULL;
  __pyx_pybuffer_D.refcount = 0;
  __pyx_pybuffernd_D.data = NULL;
  __pyx_pybuffernd_D.rcbuffer = &__pyx_pybuffer_D;

  /* "lnpy/learn/pyhelper.pyx":332
 *     def __reduce__(self):
 *         cdef SmoothnessPrior *cp
 *         cp = <SmoothnessPrior*>self.thisptr             # <<<<<<<<<<<<<<
 * 
 *         cpdef float alpha = cp.get_alpha()
 */
  __pyx_v_cp = ((SmoothnessPrior *)__pyx_v_self->__pyx_base.thisptr);

  /* "lnpy/learn/pyhelper.pyx":334
 *         cp = <SmoothnessPrior*>self.thisptr
 * 
 *         cpdef float alpha = cp.get_alpha()             # <<<<<<<<<<<<<<
 *         cpdef float gamma = cp.get_gamma()
 *         cpdef int ndim = cp.get_ndim()
 */
  __pyx_v_alpha = __pyx_v_cp->get_alpha();

  /* "lnpy/learn/pyhelper.pyx":335
 * 
 *         cpdef float alpha = cp.get_alpha()
 *         cpdef float gamma = cp.get_gamma()             # <<<<<<<<<<<<<<
 *         cpdef int ndim = cp.get_ndim()
 * 
 */
  __pyx_v_gamma = __pyx_v_cp->get_gamma();

  /* "lnpy/learn/pyhelper.pyx":336
 *         cpdef float alpha = cp.get_alpha()
 *         cpdef float gamma = cp.get_gamma()
 *         cpdef int ndim = cp.get_ndim()             # <<<<<<<<<<<<<<
 * 
 *         cpdef np.ndarray[np.float64_t, ndim=2] D = self.precision_mat
 */
  __pyx_v_ndim = __pyx_v_cp->get_ndim();

  /* "lnpy/learn/pyhelper.pyx":338
 *         cpdef int ndim = cp.get_ndim()
 * 
 *         cpdef np.ndarray[np.float64_t, ndim=2] D = self.precision_mat             # <<<<<<<<<<<<<<
 * 
 *         dd = (rebuild_smoothness_prior, (alpha, gamma, D))
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->precision_mat);
  __Pyx_INCREF(__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_D.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_1), &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
      __pyx_v_D = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_D.rcbuffer->pybuffer.buf = NULL;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    } else {__pyx_pybuffernd_D.diminfo[0].strides = __pyx_pybuffernd_D.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_D.diminfo[0].shape = __pyx_pybuffernd_D.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_D.diminfo[1].strides = __pyx_pybuffernd_D.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_D.diminfo[1].shape = __pyx_pybuffernd_D.rcbuffer->pybuffer.shape[1];
    }
  }
  __pyx_v_D = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "lnpy/learn/pyhelper.pyx":340
 *         cpdef np.ndarray[np.float64_t, ndim=2] D = self.precision_mat
 * 
 *         dd = (rebuild_smoothness_prior, (alpha, gamma, D))             # <<<<<<<<<<<<<<
 *         return dd
 * 
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_rebuild_smoothness_prior); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_alpha); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_gamma); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_D));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_D));
  PyTuple_SET_ITEM(__pyx_t_4, 2, ((PyObject *)__pyx_v_D));
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_4);
  __pyx_t_1 = 0;
  __pyx_t_4 = 0;
  __pyx_v_dd = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "lnpy/learn/pyhelper.pyx":341
 * 
 *         dd = (rebuild_smoothness_prior, (alpha, gamma, D))
 *         return dd             # <<<<<<<<<<<<<<
 * 
 *     property alpha:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_dd);
  __pyx_r = __pyx_v_dd;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":330
 *         del self.thisptr
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         cdef SmoothnessPrior *cp
 *         cp = <SmoothnessPrior*>self.thisptr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_D.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySmoothnessPrior.__reduce__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_D.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_D);
  __Pyx_XDECREF(__pyx_v_dd);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":344
 * 
 *     property alpha:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef SmoothnessPrior *cp
 *             cp = <SmoothnessPrior*>self.thisptr
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5alpha_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5alpha_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5alpha___get__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5alpha___get__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *__pyx_v_self) {
  SmoothnessPrior *__pyx_v_cp;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "lnpy/learn/pyhelper.pyx":346
 *         def __get__(self):
 *             cdef SmoothnessPrior *cp
 *             cp = <SmoothnessPrior*>self.thisptr             # <<<<<<<<<<<<<<
 *             return cp.get_alpha()
 * 
 */
  __pyx_v_cp = ((SmoothnessPrior *)__pyx_v_self->__pyx_base.thisptr);

  /* "lnpy/learn/pyhelper.pyx":347
 *             cdef SmoothnessPrior *cp
 *             cp = <SmoothnessPrior*>self.thisptr
 *             return cp.get_alpha()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, x):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_cp->get_alpha()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":344
 * 
 *     property alpha:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef SmoothnessPrior *cp
 *             cp = <SmoothnessPrior*>self.thisptr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySmoothnessPrior.alpha.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":349
 *             return cp.get_alpha()
 * 
 *         def __set__(self, x):             # <<<<<<<<<<<<<<
 *             cdef SmoothnessPrior *cp = <SmoothnessPrior*>self.thisptr
 *             cp.set_alpha(x)
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5alpha_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5alpha_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5alpha_2__set__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5alpha_2__set__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *__pyx_v_self, PyObject *__pyx_v_x) {
  SmoothnessPrior *__pyx_v_cp;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "lnpy/learn/pyhelper.pyx":350
 * 
 *         def __set__(self, x):
 *             cdef SmoothnessPrior *cp = <SmoothnessPrior*>self.thisptr             # <<<<<<<<<<<<<<
 *             cp.set_alpha(x)
 * 
 */
  __pyx_v_cp = ((SmoothnessPrior *)__pyx_v_self->__pyx_base.thisptr);

  /* "lnpy/learn/pyhelper.pyx":351
 *         def __set__(self, x):
 *             cdef SmoothnessPrior *cp = <SmoothnessPrior*>self.thisptr
 *             cp.set_alpha(x)             # <<<<<<<<<<<<<<
 * 
 *     property gamma:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 351; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_cp->set_alpha(__pyx_t_1);

  /* "lnpy/learn/pyhelper.pyx":349
 *             return cp.get_alpha()
 * 
 *         def __set__(self, x):             # <<<<<<<<<<<<<<
 *             cdef SmoothnessPrior *cp = <SmoothnessPrior*>self.thisptr
 *             cp.set_alpha(x)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySmoothnessPrior.alpha.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":354
 * 
 *     property gamma:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef SmoothnessPrior *cp
 *             cp = <SmoothnessPrior*>self.thisptr
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5gamma_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5gamma_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5gamma___get__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5gamma___get__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *__pyx_v_self) {
  SmoothnessPrior *__pyx_v_cp;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "lnpy/learn/pyhelper.pyx":356
 *         def __get__(self):
 *             cdef SmoothnessPrior *cp
 *             cp = <SmoothnessPrior*>self.thisptr             # <<<<<<<<<<<<<<
 *             return cp.get_gamma()
 * 
 */
  __pyx_v_cp = ((SmoothnessPrior *)__pyx_v_self->__pyx_base.thisptr);

  /* "lnpy/learn/pyhelper.pyx":357
 *             cdef SmoothnessPrior *cp
 *             cp = <SmoothnessPrior*>self.thisptr
 *             return cp.get_gamma()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, x):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_cp->get_gamma()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":354
 * 
 *     property gamma:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef SmoothnessPrior *cp
 *             cp = <SmoothnessPrior*>self.thisptr
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySmoothnessPrior.gamma.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":359
 *             return cp.get_gamma()
 * 
 *         def __set__(self, x):             # <<<<<<<<<<<<<<
 *             cdef SmoothnessPrior *cp = <SmoothnessPrior*>self.thisptr
 *             cp.set_gamma(x)
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5gamma_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5gamma_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5gamma_2__set__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5gamma_2__set__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *__pyx_v_self, PyObject *__pyx_v_x) {
  SmoothnessPrior *__pyx_v_cp;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "lnpy/learn/pyhelper.pyx":360
 * 
 *         def __set__(self, x):
 *             cdef SmoothnessPrior *cp = <SmoothnessPrior*>self.thisptr             # <<<<<<<<<<<<<<
 *             cp.set_gamma(x)
 * 
 */
  __pyx_v_cp = ((SmoothnessPrior *)__pyx_v_self->__pyx_base.thisptr);

  /* "lnpy/learn/pyhelper.pyx":361
 *         def __set__(self, x):
 *             cdef SmoothnessPrior *cp = <SmoothnessPrior*>self.thisptr
 *             cp.set_gamma(x)             # <<<<<<<<<<<<<<
 * 
 * def rebuild_smoothness_prior(alpha, gamma, D):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_x); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 361; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_cp->set_gamma(__pyx_t_1);

  /* "lnpy/learn/pyhelper.pyx":359
 *             return cp.get_gamma()
 * 
 *         def __set__(self, x):             # <<<<<<<<<<<<<<
 *             cdef SmoothnessPrior *cp = <SmoothnessPrior*>self.thisptr
 *             cp.set_gamma(x)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySmoothnessPrior.gamma.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":363
 *             cp.set_gamma(x)
 * 
 * def rebuild_smoothness_prior(alpha, gamma, D):             # <<<<<<<<<<<<<<
 *     return PySmoothnessPrior(alpha, gamma, D)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_3rebuild_smoothness_prior(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_4lnpy_5learn_8pyhelper_3rebuild_smoothness_prior = {"rebuild_smoothness_prior", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_3rebuild_smoothness_prior, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_3rebuild_smoothness_prior(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_alpha = 0;
  PyObject *__pyx_v_gamma = 0;
  PyObject *__pyx_v_D = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rebuild_smoothness_prior (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_alpha,&__pyx_n_s_gamma,&__pyx_n_s_D,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_gamma)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("rebuild_smoothness_prior", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 363; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_D)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("rebuild_smoothness_prior", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 363; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "rebuild_smoothness_prior") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 363; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_alpha = values[0];
    __pyx_v_gamma = values[1];
    __pyx_v_D = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rebuild_smoothness_prior", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 363; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.rebuild_smoothness_prior", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_2rebuild_smoothness_prior(__pyx_self, __pyx_v_alpha, __pyx_v_gamma, __pyx_v_D);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_2rebuild_smoothness_prior(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_alpha, PyObject *__pyx_v_gamma, PyObject *__pyx_v_D) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rebuild_smoothness_prior", 0);

  /* "lnpy/learn/pyhelper.pyx":364
 * 
 * def rebuild_smoothness_prior(alpha, gamma, D):
 *     return PySmoothnessPrior(alpha, gamma, D)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_alpha);
  __Pyx_GIVEREF(__pyx_v_alpha);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_alpha);
  __Pyx_INCREF(__pyx_v_gamma);
  __Pyx_GIVEREF(__pyx_v_gamma);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_gamma);
  __Pyx_INCREF(__pyx_v_D);
  __Pyx_GIVEREF(__pyx_v_D);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_D);
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4lnpy_5learn_8pyhelper_PySmoothnessPrior), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":363
 *             cp.set_gamma(x)
 * 
 * def rebuild_smoothness_prior(alpha, gamma, D):             # <<<<<<<<<<<<<<
 *     return PySmoothnessPrior(alpha, gamma, D)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.rebuild_smoothness_prior", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":371
 *     cpdef PyPrior prior
 * 
 *     def __cinit__(self, PyPrior prior=None):             # <<<<<<<<<<<<<<
 *         if prior is None:
 *             prior = PyGaussianPrior()
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_prior = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_prior,0};
    PyObject* values[1] = {0};
    values[0] = (PyObject *)((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prior);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 371; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_prior = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 371; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyBernoulliGLM.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_prior), __pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior, 1, "prior", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 371; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_14PyBernoulliGLM___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *)__pyx_v_self), __pyx_v_prior);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_14PyBernoulliGLM___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_prior) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_prior);

  /* "lnpy/learn/pyhelper.pyx":372
 * 
 *     def __cinit__(self, PyPrior prior=None):
 *         if prior is None:             # <<<<<<<<<<<<<<
 *             prior = PyGaussianPrior()
 *         self.thisptr = new BernoulliGLM(<Prior*>prior.get_pointer())
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_prior) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "lnpy/learn/pyhelper.pyx":373
 *     def __cinit__(self, PyPrior prior=None):
 *         if prior is None:
 *             prior = PyGaussianPrior()             # <<<<<<<<<<<<<<
 *         self.thisptr = new BernoulliGLM(<Prior*>prior.get_pointer())
 *         self.prior = prior
 */
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4lnpy_5learn_8pyhelper_PyGaussianPrior), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_prior, ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "lnpy/learn/pyhelper.pyx":372
 * 
 *     def __cinit__(self, PyPrior prior=None):
 *         if prior is None:             # <<<<<<<<<<<<<<
 *             prior = PyGaussianPrior()
 *         self.thisptr = new BernoulliGLM(<Prior*>prior.get_pointer())
 */
  }

  /* "lnpy/learn/pyhelper.pyx":374
 *         if prior is None:
 *             prior = PyGaussianPrior()
 *         self.thisptr = new BernoulliGLM(<Prior*>prior.get_pointer())             # <<<<<<<<<<<<<<
 *         self.prior = prior
 * 
 */
  __pyx_v_self->thisptr = new BernoulliGLM(((Prior *)((struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_v_prior->__pyx_vtab)->get_pointer(__pyx_v_prior)));

  /* "lnpy/learn/pyhelper.pyx":375
 *             prior = PyGaussianPrior()
 *         self.thisptr = new BernoulliGLM(<Prior*>prior.get_pointer())
 *         self.prior = prior             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_prior));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_prior));
  __Pyx_GOTREF(__pyx_v_self->prior);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->prior));
  __pyx_v_self->prior = __pyx_v_prior;

  /* "lnpy/learn/pyhelper.pyx":371
 *     cpdef PyPrior prior
 * 
 *     def __cinit__(self, PyPrior prior=None):             # <<<<<<<<<<<<<<
 *         if prior is None:
 *             prior = PyGaussianPrior()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyBernoulliGLM.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_prior);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":377
 *         self.prior = prior
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":378
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def get_prior(self):
 */
  delete __pyx_v_self->thisptr;

  /* "lnpy/learn/pyhelper.pyx":377
 *         self.prior = prior
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":380
 *         del self.thisptr
 * 
 *     def get_prior(self):             # <<<<<<<<<<<<<<
 *         return self.prior
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_5get_prior(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_5get_prior(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_prior (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_4get_prior(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_4get_prior(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_prior", 0);

  /* "lnpy/learn/pyhelper.pyx":381
 * 
 *     def get_prior(self):
 *         return self.prior             # <<<<<<<<<<<<<<
 * 
 *     def fit(self, PyProblem prob, np.ndarray[np.float64_t, ndim=1, mode='c'] w,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->prior));
  __pyx_r = ((PyObject *)__pyx_v_self->prior);
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":380
 *         del self.thisptr
 * 
 *     def get_prior(self):             # <<<<<<<<<<<<<<
 *         return self.prior
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":383
 *         return self.prior
 * 
 *     def fit(self, PyProblem prob, np.ndarray[np.float64_t, ndim=1, mode='c'] w,             # <<<<<<<<<<<<<<
 *             double tolerance=1e-2, int max_iter=100, int verbose=0):
 *         self.thisptr.fit(<Problem*>prob.get_pointer(), <double*>w.data,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_7fit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_7fit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob = 0;
  PyArrayObject *__pyx_v_w = 0;
  double __pyx_v_tolerance;
  int __pyx_v_max_iter;
  int __pyx_v_verbose;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fit (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_prob,&__pyx_n_s_w,&__pyx_n_s_tolerance,&__pyx_n_s_max_iter,&__pyx_n_s_verbose,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prob)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_w)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fit", 0, 2, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tolerance);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_max_iter);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_verbose);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fit") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_prob = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *)values[0]);
    __pyx_v_w = ((PyArrayObject *)values[1]);
    if (values[2]) {
      __pyx_v_tolerance = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_tolerance == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_tolerance = ((double)1e-2);
    }
    if (values[3]) {
      __pyx_v_max_iter = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_max_iter == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_max_iter = ((int)0x64);
    }
    if (values[4]) {
      __pyx_v_verbose = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_verbose == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_verbose = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fit", 0, 2, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyBernoulliGLM.fit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_prob), __pyx_ptype_4lnpy_5learn_8pyhelper_PyProblem, 1, "prob", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_w), __pyx_ptype_5numpy_ndarray, 1, "w", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_6fit(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *)__pyx_v_self), __pyx_v_prob, __pyx_v_w, __pyx_v_tolerance, __pyx_v_max_iter, __pyx_v_verbose);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_6fit(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob, PyArrayObject *__pyx_v_w, double __pyx_v_tolerance, int __pyx_v_max_iter, int __pyx_v_verbose) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_w;
  __Pyx_Buffer __pyx_pybuffer_w;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("fit", 0);
  __pyx_pybuffer_w.pybuffer.buf = NULL;
  __pyx_pybuffer_w.refcount = 0;
  __pyx_pybuffernd_w.data = NULL;
  __pyx_pybuffernd_w.rcbuffer = &__pyx_pybuffer_w;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_w.rcbuffer->pybuffer, (PyObject*)__pyx_v_w, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_w.diminfo[0].strides = __pyx_pybuffernd_w.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_w.diminfo[0].shape = __pyx_pybuffernd_w.rcbuffer->pybuffer.shape[0];

  /* "lnpy/learn/pyhelper.pyx":385
 *     def fit(self, PyProblem prob, np.ndarray[np.float64_t, ndim=1, mode='c'] w,
 *             double tolerance=1e-2, int max_iter=100, int verbose=0):
 *         self.thisptr.fit(<Problem*>prob.get_pointer(), <double*>w.data,             # <<<<<<<<<<<<<<
 *                          tolerance, max_iter, verbose)
 * 
 */
  __pyx_v_self->thisptr->fit(((Problem *)((struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyProblem *)__pyx_v_prob->__pyx_vtab)->get_pointer(__pyx_v_prob)), ((double *)__pyx_v_w->data), __pyx_v_tolerance, __pyx_v_max_iter, __pyx_v_verbose);

  /* "lnpy/learn/pyhelper.pyx":383
 *         return self.prior
 * 
 *     def fit(self, PyProblem prob, np.ndarray[np.float64_t, ndim=1, mode='c'] w,             # <<<<<<<<<<<<<<
 *             double tolerance=1e-2, int max_iter=100, int verbose=0):
 *         self.thisptr.fit(<Problem*>prob.get_pointer(), <double*>w.data,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_w.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyBernoulliGLM.fit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_w.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":393
 *     cpdef PyPrior prior
 * 
 *     def __cinit__(self, PyPrior prior=None):             # <<<<<<<<<<<<<<
 *         if prior is None:
 *             prior = PyGaussianPrior()
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_5PySVM_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_5PySVM_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_prior = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_prior,0};
    PyObject* values[1] = {0};
    values[0] = (PyObject *)((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prior);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_prior = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySVM.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_prior), __pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior, 1, "prior", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_5PySVM___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *)__pyx_v_self), __pyx_v_prior);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_5PySVM___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_prior) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_prior);

  /* "lnpy/learn/pyhelper.pyx":394
 * 
 *     def __cinit__(self, PyPrior prior=None):
 *         if prior is None:             # <<<<<<<<<<<<<<
 *             prior = PyGaussianPrior()
 *         self.thisptr = new SVM(<Prior*>prior.get_pointer())
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_prior) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "lnpy/learn/pyhelper.pyx":395
 *     def __cinit__(self, PyPrior prior=None):
 *         if prior is None:
 *             prior = PyGaussianPrior()             # <<<<<<<<<<<<<<
 *         self.thisptr = new SVM(<Prior*>prior.get_pointer())
 *         self.prior = prior
 */
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4lnpy_5learn_8pyhelper_PyGaussianPrior), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_prior, ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "lnpy/learn/pyhelper.pyx":394
 * 
 *     def __cinit__(self, PyPrior prior=None):
 *         if prior is None:             # <<<<<<<<<<<<<<
 *             prior = PyGaussianPrior()
 *         self.thisptr = new SVM(<Prior*>prior.get_pointer())
 */
  }

  /* "lnpy/learn/pyhelper.pyx":396
 *         if prior is None:
 *             prior = PyGaussianPrior()
 *         self.thisptr = new SVM(<Prior*>prior.get_pointer())             # <<<<<<<<<<<<<<
 *         self.prior = prior
 * 
 */
  __pyx_v_self->thisptr = new SVM(((Prior *)((struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_v_prior->__pyx_vtab)->get_pointer(__pyx_v_prior)));

  /* "lnpy/learn/pyhelper.pyx":397
 *             prior = PyGaussianPrior()
 *         self.thisptr = new SVM(<Prior*>prior.get_pointer())
 *         self.prior = prior             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_prior));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_prior));
  __Pyx_GOTREF(__pyx_v_self->prior);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->prior));
  __pyx_v_self->prior = __pyx_v_prior;

  /* "lnpy/learn/pyhelper.pyx":393
 *     cpdef PyPrior prior
 * 
 *     def __cinit__(self, PyPrior prior=None):             # <<<<<<<<<<<<<<
 *         if prior is None:
 *             prior = PyGaussianPrior()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySVM.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_prior);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":399
 *         self.prior = prior
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_5PySVM_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_5PySVM_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_5PySVM_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_5PySVM_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":400
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def get_prior(self):
 */
  delete __pyx_v_self->thisptr;

  /* "lnpy/learn/pyhelper.pyx":399
 *         self.prior = prior
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":402
 *         del self.thisptr
 * 
 *     def get_prior(self):             # <<<<<<<<<<<<<<
 *         return self.prior
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_5PySVM_5get_prior(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_5PySVM_5get_prior(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_prior (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_5PySVM_4get_prior(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_5PySVM_4get_prior(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_prior", 0);

  /* "lnpy/learn/pyhelper.pyx":403
 * 
 *     def get_prior(self):
 *         return self.prior             # <<<<<<<<<<<<<<
 * 
 *     def fit(self, PyProblem prob, np.ndarray[np.float64_t, ndim=1, mode='c'] w,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->prior));
  __pyx_r = ((PyObject *)__pyx_v_self->prior);
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":402
 *         del self.thisptr
 * 
 *     def get_prior(self):             # <<<<<<<<<<<<<<
 *         return self.prior
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":405
 *         return self.prior
 * 
 *     def fit(self, PyProblem prob, np.ndarray[np.float64_t, ndim=1, mode='c'] w,             # <<<<<<<<<<<<<<
 *             double tolerance=1e-2, int max_iter=100, int verbose=0):
 *         self.thisptr.fit(<Problem*>prob.get_pointer(), <double*>w.data,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_5PySVM_7fit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_5PySVM_7fit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob = 0;
  PyArrayObject *__pyx_v_w = 0;
  double __pyx_v_tolerance;
  int __pyx_v_max_iter;
  int __pyx_v_verbose;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fit (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_prob,&__pyx_n_s_w,&__pyx_n_s_tolerance,&__pyx_n_s_max_iter,&__pyx_n_s_verbose,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prob)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_w)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fit", 0, 2, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tolerance);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_max_iter);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_verbose);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fit") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_prob = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *)values[0]);
    __pyx_v_w = ((PyArrayObject *)values[1]);
    if (values[2]) {
      __pyx_v_tolerance = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_tolerance == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_tolerance = ((double)1e-2);
    }
    if (values[3]) {
      __pyx_v_max_iter = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_max_iter == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_max_iter = ((int)0x64);
    }
    if (values[4]) {
      __pyx_v_verbose = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_verbose == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_verbose = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fit", 0, 2, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySVM.fit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_prob), __pyx_ptype_4lnpy_5learn_8pyhelper_PyProblem, 1, "prob", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_w), __pyx_ptype_5numpy_ndarray, 1, "w", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_5PySVM_6fit(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *)__pyx_v_self), __pyx_v_prob, __pyx_v_w, __pyx_v_tolerance, __pyx_v_max_iter, __pyx_v_verbose);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_5PySVM_6fit(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob, PyArrayObject *__pyx_v_w, double __pyx_v_tolerance, int __pyx_v_max_iter, int __pyx_v_verbose) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_w;
  __Pyx_Buffer __pyx_pybuffer_w;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("fit", 0);
  __pyx_pybuffer_w.pybuffer.buf = NULL;
  __pyx_pybuffer_w.refcount = 0;
  __pyx_pybuffernd_w.data = NULL;
  __pyx_pybuffernd_w.rcbuffer = &__pyx_pybuffer_w;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_w.rcbuffer->pybuffer, (PyObject*)__pyx_v_w, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 405; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_w.diminfo[0].strides = __pyx_pybuffernd_w.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_w.diminfo[0].shape = __pyx_pybuffernd_w.rcbuffer->pybuffer.shape[0];

  /* "lnpy/learn/pyhelper.pyx":407
 *     def fit(self, PyProblem prob, np.ndarray[np.float64_t, ndim=1, mode='c'] w,
 *             double tolerance=1e-2, int max_iter=100, int verbose=0):
 *         self.thisptr.fit(<Problem*>prob.get_pointer(), <double*>w.data,             # <<<<<<<<<<<<<<
 *                          tolerance, max_iter, verbose)
 * 
 */
  __pyx_v_self->thisptr->fit(((Problem *)((struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyProblem *)__pyx_v_prob->__pyx_vtab)->get_pointer(__pyx_v_prob)), ((double *)__pyx_v_w->data), __pyx_v_tolerance, __pyx_v_max_iter, __pyx_v_verbose);

  /* "lnpy/learn/pyhelper.pyx":405
 *         return self.prior
 * 
 *     def fit(self, PyProblem prob, np.ndarray[np.float64_t, ndim=1, mode='c'] w,             # <<<<<<<<<<<<<<
 *             double tolerance=1e-2, int max_iter=100, int verbose=0):
 *         self.thisptr.fit(<Problem*>prob.get_pointer(), <double*>w.data,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_w.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySVM.fit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_w.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":415
 *     cpdef PyPrior prior
 * 
 *     def __cinit__(self, PyPrior prior=None, double dt=1., int canonical=1):             # <<<<<<<<<<<<<<
 *         if prior is None:
 *             prior = PyGaussianPrior()
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_12PyPoissonGLM_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_12PyPoissonGLM_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_prior = 0;
  double __pyx_v_dt;
  int __pyx_v_canonical;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_prior,&__pyx_n_s_dt,&__pyx_n_s_canonical,0};
    PyObject* values[3] = {0,0,0};
    values[0] = (PyObject *)((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prior);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dt);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_canonical);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_prior = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)values[0]);
    if (values[1]) {
      __pyx_v_dt = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_dt == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_dt = ((double)1.);
    }
    if (values[2]) {
      __pyx_v_canonical = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_canonical == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_canonical = ((int)1);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyPoissonGLM.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_prior), __pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior, 1, "prior", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_12PyPoissonGLM___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *)__pyx_v_self), __pyx_v_prior, __pyx_v_dt, __pyx_v_canonical);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_12PyPoissonGLM___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_prior, double __pyx_v_dt, int __pyx_v_canonical) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_prior);

  /* "lnpy/learn/pyhelper.pyx":416
 * 
 *     def __cinit__(self, PyPrior prior=None, double dt=1., int canonical=1):
 *         if prior is None:             # <<<<<<<<<<<<<<
 *             prior = PyGaussianPrior()
 *         self.thisptr = new PoissonGLM(<Prior*>prior.get_pointer(), dt,
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_prior) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "lnpy/learn/pyhelper.pyx":417
 *     def __cinit__(self, PyPrior prior=None, double dt=1., int canonical=1):
 *         if prior is None:
 *             prior = PyGaussianPrior()             # <<<<<<<<<<<<<<
 *         self.thisptr = new PoissonGLM(<Prior*>prior.get_pointer(), dt,
 *                                       canonical > 0)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4lnpy_5learn_8pyhelper_PyGaussianPrior), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 417; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_prior, ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "lnpy/learn/pyhelper.pyx":416
 * 
 *     def __cinit__(self, PyPrior prior=None, double dt=1., int canonical=1):
 *         if prior is None:             # <<<<<<<<<<<<<<
 *             prior = PyGaussianPrior()
 *         self.thisptr = new PoissonGLM(<Prior*>prior.get_pointer(), dt,
 */
  }

  /* "lnpy/learn/pyhelper.pyx":418
 *         if prior is None:
 *             prior = PyGaussianPrior()
 *         self.thisptr = new PoissonGLM(<Prior*>prior.get_pointer(), dt,             # <<<<<<<<<<<<<<
 *                                       canonical > 0)
 *         self.prior = prior
 */
  __pyx_v_self->thisptr = new PoissonGLM(((Prior *)((struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_v_prior->__pyx_vtab)->get_pointer(__pyx_v_prior)), __pyx_v_dt, (__pyx_v_canonical > 0));

  /* "lnpy/learn/pyhelper.pyx":420
 *         self.thisptr = new PoissonGLM(<Prior*>prior.get_pointer(), dt,
 *                                       canonical > 0)
 *         self.prior = prior             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_prior));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_prior));
  __Pyx_GOTREF(__pyx_v_self->prior);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->prior));
  __pyx_v_self->prior = __pyx_v_prior;

  /* "lnpy/learn/pyhelper.pyx":415
 *     cpdef PyPrior prior
 * 
 *     def __cinit__(self, PyPrior prior=None, double dt=1., int canonical=1):             # <<<<<<<<<<<<<<
 *         if prior is None:
 *             prior = PyGaussianPrior()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyPoissonGLM.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_prior);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":422
 *         self.prior = prior
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_12PyPoissonGLM_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_12PyPoissonGLM_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_12PyPoissonGLM_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_12PyPoissonGLM_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":423
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def get_prior(self):
 */
  delete __pyx_v_self->thisptr;

  /* "lnpy/learn/pyhelper.pyx":422
 *         self.prior = prior
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":425
 *         del self.thisptr
 * 
 *     def get_prior(self):             # <<<<<<<<<<<<<<
 *         return self.prior
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_12PyPoissonGLM_5get_prior(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_12PyPoissonGLM_5get_prior(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_prior (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_12PyPoissonGLM_4get_prior(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_12PyPoissonGLM_4get_prior(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_prior", 0);

  /* "lnpy/learn/pyhelper.pyx":426
 * 
 *     def get_prior(self):
 *         return self.prior             # <<<<<<<<<<<<<<
 * 
 *     def fit(self, PyProblem prob, np.ndarray[np.float64_t, ndim=1, mode='c'] w,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->prior));
  __pyx_r = ((PyObject *)__pyx_v_self->prior);
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":425
 *         del self.thisptr
 * 
 *     def get_prior(self):             # <<<<<<<<<<<<<<
 *         return self.prior
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":428
 *         return self.prior
 * 
 *     def fit(self, PyProblem prob, np.ndarray[np.float64_t, ndim=1, mode='c'] w,             # <<<<<<<<<<<<<<
 *             double tolerance=1e-2, int max_iter=100, int verbose=0):
 *         self.thisptr.fit(<Problem*>prob.get_pointer(), <double*>w.data,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_12PyPoissonGLM_7fit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_12PyPoissonGLM_7fit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob = 0;
  PyArrayObject *__pyx_v_w = 0;
  double __pyx_v_tolerance;
  int __pyx_v_max_iter;
  int __pyx_v_verbose;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fit (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_prob,&__pyx_n_s_w,&__pyx_n_s_tolerance,&__pyx_n_s_max_iter,&__pyx_n_s_verbose,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prob)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_w)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fit", 0, 2, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tolerance);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_max_iter);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_verbose);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fit") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_prob = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *)values[0]);
    __pyx_v_w = ((PyArrayObject *)values[1]);
    if (values[2]) {
      __pyx_v_tolerance = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_tolerance == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 429; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_tolerance = ((double)1e-2);
    }
    if (values[3]) {
      __pyx_v_max_iter = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_max_iter == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 429; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_max_iter = ((int)0x64);
    }
    if (values[4]) {
      __pyx_v_verbose = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_verbose == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 429; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_verbose = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fit", 0, 2, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyPoissonGLM.fit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_prob), __pyx_ptype_4lnpy_5learn_8pyhelper_PyProblem, 1, "prob", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_w), __pyx_ptype_5numpy_ndarray, 1, "w", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_12PyPoissonGLM_6fit(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *)__pyx_v_self), __pyx_v_prob, __pyx_v_w, __pyx_v_tolerance, __pyx_v_max_iter, __pyx_v_verbose);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_12PyPoissonGLM_6fit(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob, PyArrayObject *__pyx_v_w, double __pyx_v_tolerance, int __pyx_v_max_iter, int __pyx_v_verbose) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_w;
  __Pyx_Buffer __pyx_pybuffer_w;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("fit", 0);
  __pyx_pybuffer_w.pybuffer.buf = NULL;
  __pyx_pybuffer_w.refcount = 0;
  __pyx_pybuffernd_w.data = NULL;
  __pyx_pybuffernd_w.rcbuffer = &__pyx_pybuffer_w;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_w.rcbuffer->pybuffer, (PyObject*)__pyx_v_w, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_w.diminfo[0].strides = __pyx_pybuffernd_w.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_w.diminfo[0].shape = __pyx_pybuffernd_w.rcbuffer->pybuffer.shape[0];

  /* "lnpy/learn/pyhelper.pyx":430
 *     def fit(self, PyProblem prob, np.ndarray[np.float64_t, ndim=1, mode='c'] w,
 *             double tolerance=1e-2, int max_iter=100, int verbose=0):
 *         self.thisptr.fit(<Problem*>prob.get_pointer(), <double*>w.data,             # <<<<<<<<<<<<<<
 *                          tolerance, max_iter, verbose)
 * 
 */
  __pyx_v_self->thisptr->fit(((Problem *)((struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyProblem *)__pyx_v_prob->__pyx_vtab)->get_pointer(__pyx_v_prob)), ((double *)__pyx_v_w->data), __pyx_v_tolerance, __pyx_v_max_iter, __pyx_v_verbose);

  /* "lnpy/learn/pyhelper.pyx":428
 *         return self.prior
 * 
 *     def fit(self, PyProblem prob, np.ndarray[np.float64_t, ndim=1, mode='c'] w,             # <<<<<<<<<<<<<<
 *             double tolerance=1e-2, int max_iter=100, int verbose=0):
 *         self.thisptr.fit(<Problem*>prob.get_pointer(), <double*>w.data,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_w.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyPoissonGLM.fit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_w.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":438
 *     cpdef PyPrior prior
 * 
 *     def __cinit__(self, PyPrior prior=None):             # <<<<<<<<<<<<<<
 *         if prior is None:
 *             prior = PyGaussianPrior()
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_13PyGaussianGLM_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_13PyGaussianGLM_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_prior = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_prior,0};
    PyObject* values[1] = {0};
    values[0] = (PyObject *)((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prior);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_prior = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyGaussianGLM.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_prior), __pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior, 1, "prior", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_13PyGaussianGLM___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *)__pyx_v_self), __pyx_v_prior);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_13PyGaussianGLM___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *__pyx_v_prior) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_prior);

  /* "lnpy/learn/pyhelper.pyx":439
 * 
 *     def __cinit__(self, PyPrior prior=None):
 *         if prior is None:             # <<<<<<<<<<<<<<
 *             prior = PyGaussianPrior()
 *         self.thisptr = new GaussianGLM(<Prior*>prior.get_pointer())
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_prior) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "lnpy/learn/pyhelper.pyx":440
 *     def __cinit__(self, PyPrior prior=None):
 *         if prior is None:
 *             prior = PyGaussianPrior()             # <<<<<<<<<<<<<<
 *         self.thisptr = new GaussianGLM(<Prior*>prior.get_pointer())
 *         self.prior = prior
 */
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4lnpy_5learn_8pyhelper_PyGaussianPrior), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_prior, ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "lnpy/learn/pyhelper.pyx":439
 * 
 *     def __cinit__(self, PyPrior prior=None):
 *         if prior is None:             # <<<<<<<<<<<<<<
 *             prior = PyGaussianPrior()
 *         self.thisptr = new GaussianGLM(<Prior*>prior.get_pointer())
 */
  }

  /* "lnpy/learn/pyhelper.pyx":441
 *         if prior is None:
 *             prior = PyGaussianPrior()
 *         self.thisptr = new GaussianGLM(<Prior*>prior.get_pointer())             # <<<<<<<<<<<<<<
 *         self.prior = prior
 * 
 */
  __pyx_v_self->thisptr = new GaussianGLM(((Prior *)((struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior *)__pyx_v_prior->__pyx_vtab)->get_pointer(__pyx_v_prior)));

  /* "lnpy/learn/pyhelper.pyx":442
 *             prior = PyGaussianPrior()
 *         self.thisptr = new GaussianGLM(<Prior*>prior.get_pointer())
 *         self.prior = prior             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_prior));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_prior));
  __Pyx_GOTREF(__pyx_v_self->prior);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->prior));
  __pyx_v_self->prior = __pyx_v_prior;

  /* "lnpy/learn/pyhelper.pyx":438
 *     cpdef PyPrior prior
 * 
 *     def __cinit__(self, PyPrior prior=None):             # <<<<<<<<<<<<<<
 *         if prior is None:
 *             prior = PyGaussianPrior()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyGaussianGLM.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_prior);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":444
 *         self.prior = prior
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_13PyGaussianGLM_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_13PyGaussianGLM_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_13PyGaussianGLM_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_13PyGaussianGLM_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":445
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def get_prior(self):
 */
  delete __pyx_v_self->thisptr;

  /* "lnpy/learn/pyhelper.pyx":444
 *         self.prior = prior
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":447
 *         del self.thisptr
 * 
 *     def get_prior(self):             # <<<<<<<<<<<<<<
 *         return self.prior
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_13PyGaussianGLM_5get_prior(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_13PyGaussianGLM_5get_prior(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_prior (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_13PyGaussianGLM_4get_prior(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_13PyGaussianGLM_4get_prior(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_prior", 0);

  /* "lnpy/learn/pyhelper.pyx":448
 * 
 *     def get_prior(self):
 *         return self.prior             # <<<<<<<<<<<<<<
 * 
 *     def fit(self, PyProblem prob, np.ndarray[np.float64_t, ndim=1, mode='c'] w,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->prior));
  __pyx_r = ((PyObject *)__pyx_v_self->prior);
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":447
 *         del self.thisptr
 * 
 *     def get_prior(self):             # <<<<<<<<<<<<<<
 *         return self.prior
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":450
 *         return self.prior
 * 
 *     def fit(self, PyProblem prob, np.ndarray[np.float64_t, ndim=1, mode='c'] w,             # <<<<<<<<<<<<<<
 *             double tolerance=1e-2, int max_iter=100, int verbose=0):
 *         self.thisptr.fit(<Problem*>prob.get_pointer(), <double*>w.data,
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_13PyGaussianGLM_7fit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_13PyGaussianGLM_7fit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob = 0;
  PyArrayObject *__pyx_v_w = 0;
  double __pyx_v_tolerance;
  int __pyx_v_max_iter;
  int __pyx_v_verbose;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fit (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_prob,&__pyx_n_s_w,&__pyx_n_s_tolerance,&__pyx_n_s_max_iter,&__pyx_n_s_verbose,0};
    PyObject* values[5] = {0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prob)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_w)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fit", 0, 2, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_tolerance);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_max_iter);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_verbose);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fit") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_prob = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *)values[0]);
    __pyx_v_w = ((PyArrayObject *)values[1]);
    if (values[2]) {
      __pyx_v_tolerance = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_tolerance == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_tolerance = ((double)1e-2);
    }
    if (values[3]) {
      __pyx_v_max_iter = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_max_iter == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_max_iter = ((int)0x64);
    }
    if (values[4]) {
      __pyx_v_verbose = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_verbose == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_verbose = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fit", 0, 2, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyGaussianGLM.fit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_prob), __pyx_ptype_4lnpy_5learn_8pyhelper_PyProblem, 1, "prob", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_w), __pyx_ptype_5numpy_ndarray, 1, "w", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_13PyGaussianGLM_6fit(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *)__pyx_v_self), __pyx_v_prob, __pyx_v_w, __pyx_v_tolerance, __pyx_v_max_iter, __pyx_v_verbose);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_13PyGaussianGLM_6fit(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob, PyArrayObject *__pyx_v_w, double __pyx_v_tolerance, int __pyx_v_max_iter, int __pyx_v_verbose) {
  __Pyx_LocalBuf_ND __pyx_pybuffernd_w;
  __Pyx_Buffer __pyx_pybuffer_w;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("fit", 0);
  __pyx_pybuffer_w.pybuffer.buf = NULL;
  __pyx_pybuffer_w.refcount = 0;
  __pyx_pybuffernd_w.data = NULL;
  __pyx_pybuffernd_w.rcbuffer = &__pyx_pybuffer_w;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_w.rcbuffer->pybuffer, (PyObject*)__pyx_v_w, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_w.diminfo[0].strides = __pyx_pybuffernd_w.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_w.diminfo[0].shape = __pyx_pybuffernd_w.rcbuffer->pybuffer.shape[0];

  /* "lnpy/learn/pyhelper.pyx":452
 *     def fit(self, PyProblem prob, np.ndarray[np.float64_t, ndim=1, mode='c'] w,
 *             double tolerance=1e-2, int max_iter=100, int verbose=0):
 *         self.thisptr.fit(<Problem*>prob.get_pointer(), <double*>w.data,             # <<<<<<<<<<<<<<
 *                          tolerance, max_iter, verbose)
 * 
 */
  __pyx_v_self->thisptr->fit(((Problem *)((struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyProblem *)__pyx_v_prob->__pyx_vtab)->get_pointer(__pyx_v_prob)), ((double *)__pyx_v_w->data), __pyx_v_tolerance, __pyx_v_max_iter, __pyx_v_verbose);

  /* "lnpy/learn/pyhelper.pyx":450
 *         return self.prior
 * 
 *     def fit(self, PyProblem prob, np.ndarray[np.float64_t, ndim=1, mode='c'] w,             # <<<<<<<<<<<<<<
 *             double tolerance=1e-2, int max_iter=100, int verbose=0):
 *         self.thisptr.fit(<Problem*>prob.get_pointer(), <double*>w.data,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_w.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyGaussianGLM.fit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_w.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":459
 *     cdef SGD *thisptr
 * 
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=1, mode='c'] w,             # <<<<<<<<<<<<<<
 *                   double bias, double n_epochs=1.,
 *                   PyLossFunction loss=None, double alpha=1.,
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_w = 0;
  double __pyx_v_bias;
  double __pyx_v_n_epochs;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *__pyx_v_loss = 0;
  double __pyx_v_alpha;
  bool __pyx_v_warm_start;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_w,&__pyx_n_s_bias,&__pyx_n_s_n_epochs,&__pyx_n_s_loss,&__pyx_n_s_alpha,&__pyx_n_s_warm_start,0};
    PyObject* values[6] = {0,0,0,0,0,0};

    /* "lnpy/learn/pyhelper.pyx":461
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=1, mode='c'] w,
 *                   double bias, double n_epochs=1.,
 *                   PyLossFunction loss=None, double alpha=1.,             # <<<<<<<<<<<<<<
 *                   bool warm_start=False):
 *         cdef int n_dim
 */
    values[3] = (PyObject *)((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_w)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_bias)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_n_epochs);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_loss);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_warm_start);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_w = ((PyArrayObject *)values[0]);
    __pyx_v_bias = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_bias == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[2]) {
      __pyx_v_n_epochs = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_n_epochs == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_n_epochs = ((double)1.);
    }
    __pyx_v_loss = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *)values[3]);
    if (values[4]) {
      __pyx_v_alpha = __pyx_PyFloat_AsDouble(values[4]); if (unlikely((__pyx_v_alpha == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_alpha = ((double)1.);
    }
    if (values[5]) {
      __pyx_v_warm_start = __Pyx_PyObject_IsTrue(values[5]); if (unlikely((__pyx_v_warm_start == (bool)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 462; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {

      /* "lnpy/learn/pyhelper.pyx":462
 *                   double bias, double n_epochs=1.,
 *                   PyLossFunction loss=None, double alpha=1.,
 *                   bool warm_start=False):             # <<<<<<<<<<<<<<
 *         cdef int n_dim
 *         n_dim = w.shape[0] - (int)(bias > 0)
 */
      __pyx_v_warm_start = ((bool)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySGD.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_w), __pyx_ptype_5numpy_ndarray, 1, "w", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_loss), __pyx_ptype_4lnpy_5learn_8pyhelper_PyLossFunction, 1, "loss", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_5PySGD___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *)__pyx_v_self), __pyx_v_w, __pyx_v_bias, __pyx_v_n_epochs, __pyx_v_loss, __pyx_v_alpha, __pyx_v_warm_start);

  /* "lnpy/learn/pyhelper.pyx":459
 *     cdef SGD *thisptr
 * 
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=1, mode='c'] w,             # <<<<<<<<<<<<<<
 *                   double bias, double n_epochs=1.,
 *                   PyLossFunction loss=None, double alpha=1.,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_5PySGD___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *__pyx_v_self, PyArrayObject *__pyx_v_w, double __pyx_v_bias, double __pyx_v_n_epochs, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *__pyx_v_loss, double __pyx_v_alpha, bool __pyx_v_warm_start) {
  int __pyx_v_n_dim;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_w;
  __Pyx_Buffer __pyx_pybuffer_w;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_loss);
  __pyx_pybuffer_w.pybuffer.buf = NULL;
  __pyx_pybuffer_w.refcount = 0;
  __pyx_pybuffernd_w.data = NULL;
  __pyx_pybuffernd_w.rcbuffer = &__pyx_pybuffer_w;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_w.rcbuffer->pybuffer, (PyObject*)__pyx_v_w, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_w.diminfo[0].strides = __pyx_pybuffernd_w.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_w.diminfo[0].shape = __pyx_pybuffernd_w.rcbuffer->pybuffer.shape[0];

  /* "lnpy/learn/pyhelper.pyx":464
 *                   bool warm_start=False):
 *         cdef int n_dim
 *         n_dim = w.shape[0] - (int)(bias > 0)             # <<<<<<<<<<<<<<
 *         if loss is None:
 *             loss = PyGaussianLoss()
 */
  __pyx_t_1 = __Pyx_PyInt_From_Py_intptr_t((__pyx_v_w->dimensions[0])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyBool_FromLong((__pyx_v_bias > 0.0)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&PyInt_Type)), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Subtract(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_n_dim = __pyx_t_4;

  /* "lnpy/learn/pyhelper.pyx":465
 *         cdef int n_dim
 *         n_dim = w.shape[0] - (int)(bias > 0)
 *         if loss is None:             # <<<<<<<<<<<<<<
 *             loss = PyGaussianLoss()
 *         self.thisptr = new SGD(<double*>w.data, n_dim, bias,
 */
  __pyx_t_5 = (((PyObject *)__pyx_v_loss) == Py_None);
  __pyx_t_6 = (__pyx_t_5 != 0);
  if (__pyx_t_6) {

    /* "lnpy/learn/pyhelper.pyx":466
 *         n_dim = w.shape[0] - (int)(bias > 0)
 *         if loss is None:
 *             loss = PyGaussianLoss()             # <<<<<<<<<<<<<<
 *         self.thisptr = new SGD(<double*>w.data, n_dim, bias,
 *                                <LossFunction*>loss.get_pointer(),
 */
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4lnpy_5learn_8pyhelper_PyGaussianLoss), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_loss, ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "lnpy/learn/pyhelper.pyx":465
 *         cdef int n_dim
 *         n_dim = w.shape[0] - (int)(bias > 0)
 *         if loss is None:             # <<<<<<<<<<<<<<
 *             loss = PyGaussianLoss()
 *         self.thisptr = new SGD(<double*>w.data, n_dim, bias,
 */
  }

  /* "lnpy/learn/pyhelper.pyx":467
 *         if loss is None:
 *             loss = PyGaussianLoss()
 *         self.thisptr = new SGD(<double*>w.data, n_dim, bias,             # <<<<<<<<<<<<<<
 *                                <LossFunction*>loss.get_pointer(),
 *                                n_epochs, alpha, warm_start)
 */
  __pyx_v_self->thisptr = new SGD(((double *)__pyx_v_w->data), __pyx_v_n_dim, __pyx_v_bias, ((LossFunction *)((struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLossFunction *)__pyx_v_loss->__pyx_vtab)->get_pointer(__pyx_v_loss)), __pyx_v_n_epochs, __pyx_v_alpha, __pyx_v_warm_start);

  /* "lnpy/learn/pyhelper.pyx":459
 *     cdef SGD *thisptr
 * 
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=1, mode='c'] w,             # <<<<<<<<<<<<<<
 *                   double bias, double n_epochs=1.,
 *                   PyLossFunction loss=None, double alpha=1.,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_w.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySGD.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_w.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_loss);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":471
 *                                n_epochs, alpha, warm_start)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_5PySGD_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_5PySGD_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":472
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def fit(self, PyProblem prob, int start_iter=0, int verbose=0):
 */
  delete __pyx_v_self->thisptr;

  /* "lnpy/learn/pyhelper.pyx":471
 *                                n_epochs, alpha, warm_start)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":474
 *         del self.thisptr
 * 
 *     def fit(self, PyProblem prob, int start_iter=0, int verbose=0):             # <<<<<<<<<<<<<<
 *         return self.thisptr.fit(<Problem*>prob.get_pointer(), start_iter,
 *                                 verbose)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_5fit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_5fit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob = 0;
  int __pyx_v_start_iter;
  int __pyx_v_verbose;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fit (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_prob,&__pyx_n_s_start_iter,&__pyx_n_s_verbose,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prob)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_start_iter);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_verbose);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fit") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 474; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_prob = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *)values[0]);
    if (values[1]) {
      __pyx_v_start_iter = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_start_iter == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 474; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_start_iter = ((int)0);
    }
    if (values[2]) {
      __pyx_v_verbose = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_verbose == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 474; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_verbose = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fit", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 474; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySGD.fit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_prob), __pyx_ptype_4lnpy_5learn_8pyhelper_PyProblem, 1, "prob", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_5PySGD_4fit(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *)__pyx_v_self), __pyx_v_prob, __pyx_v_start_iter, __pyx_v_verbose);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_5PySGD_4fit(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob, int __pyx_v_start_iter, int __pyx_v_verbose) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("fit", 0);

  /* "lnpy/learn/pyhelper.pyx":475
 * 
 *     def fit(self, PyProblem prob, int start_iter=0, int verbose=0):
 *         return self.thisptr.fit(<Problem*>prob.get_pointer(), start_iter,             # <<<<<<<<<<<<<<
 *                                 verbose)
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "lnpy/learn/pyhelper.pyx":476
 *     def fit(self, PyProblem prob, int start_iter=0, int verbose=0):
 *         return self.thisptr.fit(<Problem*>prob.get_pointer(), start_iter,
 *                                 verbose)             # <<<<<<<<<<<<<<
 * 
 *     def get_bias(self):
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->fit(((Problem *)((struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyProblem *)__pyx_v_prob->__pyx_vtab)->get_pointer(__pyx_v_prob)), __pyx_v_start_iter, __pyx_v_verbose)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 475; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":474
 *         del self.thisptr
 * 
 *     def fit(self, PyProblem prob, int start_iter=0, int verbose=0):             # <<<<<<<<<<<<<<
 *         return self.thisptr.fit(<Problem*>prob.get_pointer(), start_iter,
 *                                 verbose)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySGD.fit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":478
 *                                 verbose)
 * 
 *     def get_bias(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_bias()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_7get_bias(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_7get_bias(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_bias (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_5PySGD_6get_bias(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_5PySGD_6get_bias(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_bias", 0);

  /* "lnpy/learn/pyhelper.pyx":479
 * 
 *     def get_bias(self):
 *         return self.thisptr.get_bias()             # <<<<<<<<<<<<<<
 * 
 *     def set_alpha(self, int alpha):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->get_bias()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":478
 *                                 verbose)
 * 
 *     def get_bias(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_bias()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySGD.get_bias", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":481
 *         return self.thisptr.get_bias()
 * 
 *     def set_alpha(self, int alpha):             # <<<<<<<<<<<<<<
 *         self.thisptr.set_alpha(alpha)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_9set_alpha(PyObject *__pyx_v_self, PyObject *__pyx_arg_alpha); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_9set_alpha(PyObject *__pyx_v_self, PyObject *__pyx_arg_alpha) {
  int __pyx_v_alpha;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_alpha (wrapper)", 0);
  assert(__pyx_arg_alpha); {
    __pyx_v_alpha = __Pyx_PyInt_As_int(__pyx_arg_alpha); if (unlikely((__pyx_v_alpha == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 481; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySGD.set_alpha", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_5PySGD_8set_alpha(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *)__pyx_v_self), ((int)__pyx_v_alpha));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_5PySGD_8set_alpha(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *__pyx_v_self, int __pyx_v_alpha) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_alpha", 0);

  /* "lnpy/learn/pyhelper.pyx":482
 * 
 *     def set_alpha(self, int alpha):
 *         self.thisptr.set_alpha(alpha)             # <<<<<<<<<<<<<<
 * 
 *     def get_alpha(self):
 */
  __pyx_v_self->thisptr->set_alpha(__pyx_v_alpha);

  /* "lnpy/learn/pyhelper.pyx":481
 *         return self.thisptr.get_bias()
 * 
 *     def set_alpha(self, int alpha):             # <<<<<<<<<<<<<<
 *         self.thisptr.set_alpha(alpha)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":484
 *         self.thisptr.set_alpha(alpha)
 * 
 *     def get_alpha(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_alpha()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_11get_alpha(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_11get_alpha(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_alpha (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_5PySGD_10get_alpha(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_5PySGD_10get_alpha(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_alpha", 0);

  /* "lnpy/learn/pyhelper.pyx":485
 * 
 *     def get_alpha(self):
 *         return self.thisptr.get_alpha()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->get_alpha()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 485; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":484
 *         self.thisptr.set_alpha(alpha)
 * 
 *     def get_alpha(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_alpha()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PySGD.get_alpha", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":491
 *     cdef ASGD *thisptr
 * 
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=1, mode='c'] w,             # <<<<<<<<<<<<<<
 *                   np.ndarray[np.float64_t, ndim=1, mode='c'] wa, double bias,
 *                   double n_epochs=1., PyLossFunction loss=None,
 */

/* Python wrapper */
static int __pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_w = 0;
  PyArrayObject *__pyx_v_wa = 0;
  double __pyx_v_bias;
  double __pyx_v_n_epochs;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *__pyx_v_loss = 0;
  double __pyx_v_alpha;
  bool __pyx_v_warm_start;
  double __pyx_v_poly_decay;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_w,&__pyx_n_s_wa,&__pyx_n_s_bias,&__pyx_n_s_n_epochs,&__pyx_n_s_loss,&__pyx_n_s_alpha,&__pyx_n_s_warm_start,&__pyx_n_s_poly_decay,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};

    /* "lnpy/learn/pyhelper.pyx":493
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=1, mode='c'] w,
 *                   np.ndarray[np.float64_t, ndim=1, mode='c'] wa, double bias,
 *                   double n_epochs=1., PyLossFunction loss=None,             # <<<<<<<<<<<<<<
 *                   double alpha=1., bool warm_start=False,
 *                   double poly_decay=2.):
 */
    values[4] = (PyObject *)((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_w)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_wa)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 8, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_bias)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 8, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_n_epochs);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_loss);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_alpha);
          if (value) { values[5] = value; kw_args--; }
        }
        case  6:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_warm_start);
          if (value) { values[6] = value; kw_args--; }
        }
        case  7:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_poly_decay);
          if (value) { values[7] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_w = ((PyArrayObject *)values[0]);
    __pyx_v_wa = ((PyArrayObject *)values[1]);
    __pyx_v_bias = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_bias == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[3]) {
      __pyx_v_n_epochs = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_n_epochs == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_n_epochs = ((double)1.);
    }
    __pyx_v_loss = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *)values[4]);
    if (values[5]) {
      __pyx_v_alpha = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_alpha == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_alpha = ((double)1.);
    }
    if (values[6]) {
      __pyx_v_warm_start = __Pyx_PyObject_IsTrue(values[6]); if (unlikely((__pyx_v_warm_start == (bool)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {

      /* "lnpy/learn/pyhelper.pyx":494
 *                   np.ndarray[np.float64_t, ndim=1, mode='c'] wa, double bias,
 *                   double n_epochs=1., PyLossFunction loss=None,
 *                   double alpha=1., bool warm_start=False,             # <<<<<<<<<<<<<<
 *                   double poly_decay=2.):
 * 
 */
      __pyx_v_warm_start = ((bool)0);
    }
    if (values[7]) {
      __pyx_v_poly_decay = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_poly_decay == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_poly_decay = ((double)2.);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 8, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyASGD.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_w), __pyx_ptype_5numpy_ndarray, 1, "w", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_wa), __pyx_ptype_5numpy_ndarray, 1, "wa", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_loss), __pyx_ptype_4lnpy_5learn_8pyhelper_PyLossFunction, 1, "loss", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD___cinit__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *)__pyx_v_self), __pyx_v_w, __pyx_v_wa, __pyx_v_bias, __pyx_v_n_epochs, __pyx_v_loss, __pyx_v_alpha, __pyx_v_warm_start, __pyx_v_poly_decay);

  /* "lnpy/learn/pyhelper.pyx":491
 *     cdef ASGD *thisptr
 * 
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=1, mode='c'] w,             # <<<<<<<<<<<<<<
 *                   np.ndarray[np.float64_t, ndim=1, mode='c'] wa, double bias,
 *                   double n_epochs=1., PyLossFunction loss=None,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD___cinit__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *__pyx_v_self, PyArrayObject *__pyx_v_w, PyArrayObject *__pyx_v_wa, double __pyx_v_bias, double __pyx_v_n_epochs, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *__pyx_v_loss, double __pyx_v_alpha, bool __pyx_v_warm_start, double __pyx_v_poly_decay) {
  int __pyx_v_ndim;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_w;
  __Pyx_Buffer __pyx_pybuffer_w;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_wa;
  __Pyx_Buffer __pyx_pybuffer_wa;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_loss);
  __pyx_pybuffer_w.pybuffer.buf = NULL;
  __pyx_pybuffer_w.refcount = 0;
  __pyx_pybuffernd_w.data = NULL;
  __pyx_pybuffernd_w.rcbuffer = &__pyx_pybuffer_w;
  __pyx_pybuffer_wa.pybuffer.buf = NULL;
  __pyx_pybuffer_wa.refcount = 0;
  __pyx_pybuffernd_wa.data = NULL;
  __pyx_pybuffernd_wa.rcbuffer = &__pyx_pybuffer_wa;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_w.rcbuffer->pybuffer, (PyObject*)__pyx_v_w, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_w.diminfo[0].strides = __pyx_pybuffernd_w.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_w.diminfo[0].shape = __pyx_pybuffernd_w.rcbuffer->pybuffer.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_wa.rcbuffer->pybuffer, (PyObject*)__pyx_v_wa, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_pybuffernd_wa.diminfo[0].strides = __pyx_pybuffernd_wa.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_wa.diminfo[0].shape = __pyx_pybuffernd_wa.rcbuffer->pybuffer.shape[0];

  /* "lnpy/learn/pyhelper.pyx":498
 * 
 *         cdef int ndim
 *         ndim = w.shape[0] - (int)(bias > 0)             # <<<<<<<<<<<<<<
 *         if loss is None:
 *             loss = PyGaussianLoss()
 */
  __pyx_t_1 = __Pyx_PyInt_From_Py_intptr_t((__pyx_v_w->dimensions[0])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyBool_FromLong((__pyx_v_bias > 0.0)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)(&PyInt_Type)), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Subtract(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_ndim = __pyx_t_4;

  /* "lnpy/learn/pyhelper.pyx":499
 *         cdef int ndim
 *         ndim = w.shape[0] - (int)(bias > 0)
 *         if loss is None:             # <<<<<<<<<<<<<<
 *             loss = PyGaussianLoss()
 *         self.thisptr = new ASGD(<double*>w.data, <double*>wa.data, ndim,
 */
  __pyx_t_5 = (((PyObject *)__pyx_v_loss) == Py_None);
  __pyx_t_6 = (__pyx_t_5 != 0);
  if (__pyx_t_6) {

    /* "lnpy/learn/pyhelper.pyx":500
 *         ndim = w.shape[0] - (int)(bias > 0)
 *         if loss is None:
 *             loss = PyGaussianLoss()             # <<<<<<<<<<<<<<
 *         self.thisptr = new ASGD(<double*>w.data, <double*>wa.data, ndim,
 *                                 bias, <LossFunction*>loss.get_pointer(),
 */
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_4lnpy_5learn_8pyhelper_PyGaussianLoss), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_loss, ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "lnpy/learn/pyhelper.pyx":499
 *         cdef int ndim
 *         ndim = w.shape[0] - (int)(bias > 0)
 *         if loss is None:             # <<<<<<<<<<<<<<
 *             loss = PyGaussianLoss()
 *         self.thisptr = new ASGD(<double*>w.data, <double*>wa.data, ndim,
 */
  }

  /* "lnpy/learn/pyhelper.pyx":501
 *         if loss is None:
 *             loss = PyGaussianLoss()
 *         self.thisptr = new ASGD(<double*>w.data, <double*>wa.data, ndim,             # <<<<<<<<<<<<<<
 *                                 bias, <LossFunction*>loss.get_pointer(),
 *                                 n_epochs, alpha, warm_start, poly_decay)
 */
  __pyx_v_self->thisptr = new ASGD(((double *)__pyx_v_w->data), ((double *)__pyx_v_wa->data), __pyx_v_ndim, __pyx_v_bias, ((LossFunction *)((struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLossFunction *)__pyx_v_loss->__pyx_vtab)->get_pointer(__pyx_v_loss)), __pyx_v_n_epochs, __pyx_v_alpha, __pyx_v_warm_start, __pyx_v_poly_decay);

  /* "lnpy/learn/pyhelper.pyx":491
 *     cdef ASGD *thisptr
 * 
 *     def __cinit__(self, np.ndarray[np.float64_t, ndim=1, mode='c'] w,             # <<<<<<<<<<<<<<
 *                   np.ndarray[np.float64_t, ndim=1, mode='c'] wa, double bias,
 *                   double n_epochs=1., PyLossFunction loss=None,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_w.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_wa.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyASGD.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_w.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_wa.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_loss);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":505
 *                                 n_epochs, alpha, warm_start, poly_decay)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD_2__dealloc__(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD_2__dealloc__(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "lnpy/learn/pyhelper.pyx":506
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def fit(self, PyProblem prob, int start_iter=0, int verbose=0):
 */
  delete __pyx_v_self->thisptr;

  /* "lnpy/learn/pyhelper.pyx":505
 *                                 n_epochs, alpha, warm_start, poly_decay)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "lnpy/learn/pyhelper.pyx":508
 *         del self.thisptr
 * 
 *     def fit(self, PyProblem prob, int start_iter=0, int verbose=0):             # <<<<<<<<<<<<<<
 *         return self.thisptr.fit(<Problem*>prob.get_pointer(), start_iter,
 *                                 verbose)
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_5fit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_5fit(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob = 0;
  int __pyx_v_start_iter;
  int __pyx_v_verbose;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fit (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_prob,&__pyx_n_s_start_iter,&__pyx_n_s_verbose,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_prob)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_start_iter);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_verbose);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fit") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_prob = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *)values[0]);
    if (values[1]) {
      __pyx_v_start_iter = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_start_iter == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_start_iter = ((int)0);
    }
    if (values[2]) {
      __pyx_v_verbose = __Pyx_PyInt_As_int(values[2]); if (unlikely((__pyx_v_verbose == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_verbose = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fit", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyASGD.fit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_prob), __pyx_ptype_4lnpy_5learn_8pyhelper_PyProblem, 1, "prob", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD_4fit(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *)__pyx_v_self), __pyx_v_prob, __pyx_v_start_iter, __pyx_v_verbose);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD_4fit(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *__pyx_v_self, struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *__pyx_v_prob, int __pyx_v_start_iter, int __pyx_v_verbose) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("fit", 0);

  /* "lnpy/learn/pyhelper.pyx":509
 * 
 *     def fit(self, PyProblem prob, int start_iter=0, int verbose=0):
 *         return self.thisptr.fit(<Problem*>prob.get_pointer(), start_iter,             # <<<<<<<<<<<<<<
 *                                 verbose)
 * 
 */
  __Pyx_XDECREF(__pyx_r);

  /* "lnpy/learn/pyhelper.pyx":510
 *     def fit(self, PyProblem prob, int start_iter=0, int verbose=0):
 *         return self.thisptr.fit(<Problem*>prob.get_pointer(), start_iter,
 *                                 verbose)             # <<<<<<<<<<<<<<
 * 
 *     def get_bias(self):
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->fit(((Problem *)((struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyProblem *)__pyx_v_prob->__pyx_vtab)->get_pointer(__pyx_v_prob)), __pyx_v_start_iter, __pyx_v_verbose)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":508
 *         del self.thisptr
 * 
 *     def fit(self, PyProblem prob, int start_iter=0, int verbose=0):             # <<<<<<<<<<<<<<
 *         return self.thisptr.fit(<Problem*>prob.get_pointer(), start_iter,
 *                                 verbose)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyASGD.fit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":512
 *                                 verbose)
 * 
 *     def get_bias(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_bias()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_7get_bias(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_7get_bias(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_bias (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD_6get_bias(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD_6get_bias(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_bias", 0);

  /* "lnpy/learn/pyhelper.pyx":513
 * 
 *     def get_bias(self):
 *         return self.thisptr.get_bias()             # <<<<<<<<<<<<<<
 * 
 *     def set_alpha(self, int alpha):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->get_bias()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":512
 *                                 verbose)
 * 
 *     def get_bias(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_bias()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyASGD.get_bias", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":515
 *         return self.thisptr.get_bias()
 * 
 *     def set_alpha(self, int alpha):             # <<<<<<<<<<<<<<
 *         self.thisptr.set_alpha(alpha)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_9set_alpha(PyObject *__pyx_v_self, PyObject *__pyx_arg_alpha); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_9set_alpha(PyObject *__pyx_v_self, PyObject *__pyx_arg_alpha) {
  int __pyx_v_alpha;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_alpha (wrapper)", 0);
  assert(__pyx_arg_alpha); {
    __pyx_v_alpha = __Pyx_PyInt_As_int(__pyx_arg_alpha); if (unlikely((__pyx_v_alpha == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 515; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyASGD.set_alpha", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD_8set_alpha(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *)__pyx_v_self), ((int)__pyx_v_alpha));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD_8set_alpha(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *__pyx_v_self, int __pyx_v_alpha) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_alpha", 0);

  /* "lnpy/learn/pyhelper.pyx":516
 * 
 *     def set_alpha(self, int alpha):
 *         self.thisptr.set_alpha(alpha)             # <<<<<<<<<<<<<<
 * 
 *     def get_alpha(self):
 */
  __pyx_v_self->thisptr->set_alpha(__pyx_v_alpha);

  /* "lnpy/learn/pyhelper.pyx":515
 *         return self.thisptr.get_bias()
 * 
 *     def set_alpha(self, int alpha):             # <<<<<<<<<<<<<<
 *         self.thisptr.set_alpha(alpha)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "lnpy/learn/pyhelper.pyx":518
 *         self.thisptr.set_alpha(alpha)
 * 
 *     def get_alpha(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_alpha()
 */

/* Python wrapper */
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_11get_alpha(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_11get_alpha(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_alpha (wrapper)", 0);
  __pyx_r = __pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD_10get_alpha(((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4lnpy_5learn_8pyhelper_6PyASGD_10get_alpha(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_alpha", 0);

  /* "lnpy/learn/pyhelper.pyx":519
 * 
 *     def get_alpha(self):
 *         return self.thisptr.get_alpha()             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->get_alpha()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "lnpy/learn/pyhelper.pyx":518
 *         self.thisptr.set_alpha(alpha)
 * 
 *     def get_alpha(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.get_alpha()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lnpy.learn.pyhelper.PyASGD.get_alpha", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5numpy_7ndarray___getbuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_copy_shape;
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_v_hasfields;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  char *__pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  if (__pyx_v_info != NULL) {
    __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(__pyx_v_info->obj);
  }

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":203
 *             # of flags
 * 
 *             if info == NULL: return             # <<<<<<<<<<<<<<
 * 
 *             cdef int copy_shape, i, ndim
 */
  __pyx_t_1 = ((__pyx_v_info == NULL) != 0);
  if (__pyx_t_1) {
    __pyx_r = 0;
    goto __pyx_L0;
  }

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":206
 * 
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":207
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":209
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_ndim = PyArray_NDIM(__pyx_v_self);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":211
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":212
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 copy_shape = 1             # <<<<<<<<<<<<<<
 *             else:
 *                 copy_shape = 0
 */
    __pyx_v_copy_shape = 1;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":211
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
    goto __pyx_L4;
  }

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":214
 *                 copy_shape = 1
 *             else:
 *                 copy_shape = 0             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
  /*else*/ {
    __pyx_v_copy_shape = 0;
  }
  __pyx_L4:;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L6_bool_binop_done;
  }

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":217
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_C_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L6_bool_binop_done:;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  if (__pyx_t_1) {

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  }

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L9_bool_binop_done;
  }

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":221
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_F_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L9_bool_binop_done:;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  if (__pyx_t_1) {

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  }

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":224
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if copy_shape:
 */
  __pyx_v_info->buf = PyArray_DATA(__pyx_v_self);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":225
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if copy_shape:
 *                 # Allocate new buffer for strides and shape info.
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":226
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
  __pyx_t_1 = (__pyx_v_copy_shape != 0);
  if (__pyx_t_1) {

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":229
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)malloc((((sizeof(Py_ssize_t)) * ((size_t)__pyx_v_ndim)) * 2)));

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":230
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":231
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_4 = __pyx_v_ndim;
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":232
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(__pyx_v_self)[__pyx_v_i]);

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":233
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(__pyx_v_self)[__pyx_v_i]);
    }

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":226
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
    goto __pyx_L11;
  }

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":235
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
  /*else*/ {
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(__pyx_v_self));

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":236
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(__pyx_v_self));
  }
  __pyx_L11:;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":237
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":238
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(__pyx_v_self);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":239
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!(PyArray_ISWRITEABLE(__pyx_v_self) != 0));

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":242
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef int offset
 */
  __pyx_v_f = NULL;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":243
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef int offset
 * 
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->descr);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_v_descr = ((PyArray_Descr *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":246
 *             cdef int offset
 * 
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields and not copy_shape:
 */
  __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":248
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
  __pyx_t_2 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L15_bool_binop_done;
  }
  __pyx_t_2 = ((!(__pyx_v_copy_shape != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L15_bool_binop_done:;
  if (__pyx_t_1) {

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":250
 *             if not hasfields and not copy_shape:
 *                 # do not call releasebuffer
 *                 info.obj = None             # <<<<<<<<<<<<<<
 *             else:
 *                 # need to call releasebuffer
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = Py_None;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":248
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
    goto __pyx_L14;
  }

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":253
 *             else:
 *                 # need to call releasebuffer
 *                 info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields:
 */
  /*else*/ {
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = ((PyObject *)__pyx_v_self);
  }
  __pyx_L14:;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":255
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  __pyx_t_1 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_1) {

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":256
 * 
 *             if not hasfields:
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 */
    __pyx_t_4 = __pyx_v_descr->type_num;
    __pyx_v_t = __pyx_t_4;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '>') != 0);
    if (!__pyx_t_2) {
      goto __pyx_L20_next_or;
    } else {
    }
    __pyx_t_2 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_L20_next_or:;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":258
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '<') != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_t_2 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L19_bool_binop_done:;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    if (__pyx_t_1) {

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":259
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":257
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":260
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
    switch (__pyx_v_t) {
      case NPY_BYTE:
      __pyx_v_f = __pyx_k_b;
      break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":261
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
      case NPY_UBYTE:
      __pyx_v_f = __pyx_k_B;
      break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":262
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
      case NPY_SHORT:
      __pyx_v_f = __pyx_k_h;
      break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":263
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
      case NPY_USHORT:
      __pyx_v_f = __pyx_k_H;
      break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":264
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
      case NPY_INT:
      __pyx_v_f = __pyx_k_i;
      break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":265
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
      case NPY_UINT:
      __pyx_v_f = __pyx_k_I;
      break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":266
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
      case NPY_LONG:
      __pyx_v_f = __pyx_k_l;
      break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":267
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
      case NPY_ULONG:
      __pyx_v_f = __pyx_k_L;
      break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":268
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
      case NPY_LONGLONG:
      __pyx_v_f = __pyx_k_q;
      break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":269
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
      case NPY_ULONGLONG:
      __pyx_v_f = __pyx_k_Q;
      break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":270
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
      case NPY_FLOAT:
      __pyx_v_f = __pyx_k_f;
      break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":271
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
      case NPY_DOUBLE:
      __pyx_v_f = __pyx_k_d;
      break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":272
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
      case NPY_LONGDOUBLE:
      __pyx_v_f = __pyx_k_g;
      break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":273
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
      case NPY_CFLOAT:
      __pyx_v_f = __pyx_k_Zf;
      break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":274
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
      case NPY_CDOUBLE:
      __pyx_v_f = __pyx_k_Zd;
      break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":275
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
      case NPY_CLONGDOUBLE:
      __pyx_v_f = __pyx_k_Zg;
      break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":276
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      case NPY_OBJECT:
      __pyx_v_f = __pyx_k_O;
      break;
      default:

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":278
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_t); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_t_3); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 278; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      break;
    }

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":279
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":280
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":255
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  }

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":282
 *                 return
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 */
  /*else*/ {
    __pyx_v_info->format = ((char *)malloc(0xFF));

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":283
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":284
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":285
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,             # <<<<<<<<<<<<<<
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 */
    __pyx_t_7 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 0xFF), (&__pyx_v_offset)); if (unlikely(__pyx_t_7 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_f = __pyx_t_7;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":288
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = c'\0' # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = '\x00';
  }

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info != NULL && __pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info != NULL && __pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":290
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

/* Python wrapper */
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);
  __pyx_pf_5numpy_7ndarray_2__releasebuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__releasebuffer__", 0);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":291
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = (PyArray_HASFIELDS(__pyx_v_self) != 0);
  if (__pyx_t_1) {

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":292
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)
 */
    free(__pyx_v_info->format);

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":291
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  }

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":293
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":294
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    free(__pyx_v_info->strides);

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":293
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  }

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":290
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":770
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":771
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":770
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":773
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":774
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 774; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":773
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":776
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":777
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":776
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":779
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":780
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 780; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":779
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":782
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":783
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":782
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":785
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child = 0;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields = 0;
  PyObject *__pyx_v_childname = NULL;
  PyObject *__pyx_v_new_offset = NULL;
  PyObject *__pyx_v_t = NULL;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  long __pyx_t_8;
  char *__pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_util_dtypestring", 0);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":790
 * 
 *     cdef dtype child
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":791
 *     cdef dtype child
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":794
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (unlikely(__pyx_v_descr->names == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __pyx_v_descr->names; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_childname, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":795
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    if (unlikely(__pyx_v_descr->fields == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_XDECREF_SET(__pyx_v_fields, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":796
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 */
    if (likely(__pyx_v_fields != Py_None)) {
      PyObject* sequence = __pyx_v_fields;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      #endif
    } else {
      __Pyx_RaiseNoneNotIterableError(); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_XDECREF_SET(__pyx_v_child, ((PyArray_Descr *)__pyx_t_3));
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_new_offset, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":798
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_6 = ((((__pyx_v_end - __pyx_v_f) - ((int)__pyx_t_5)) < 15) != 0);
    if (__pyx_t_6) {

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":799
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":798
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    }

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '>') != 0);
    if (!__pyx_t_7) {
      goto __pyx_L8_next_or;
    } else {
    }
    __pyx_t_7 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_L8_next_or:;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":802
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '<') != 0);
    if (__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_t_7 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_6 = __pyx_t_7;
    __pyx_L7_bool_binop_done:;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    if (__pyx_t_6) {

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":803
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":813
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_3 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_v_new_offset, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!__pyx_t_6) break;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":814
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 0x78;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":815
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":816
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      __pyx_t_8 = 0;
      (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + 1);
    }

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":818
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    __pyx_t_8 = 0;
    (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + __pyx_v_child->elsize);

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":820
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_6 = ((!(PyDataType_HASFIELDS(__pyx_v_child) != 0)) != 0);
    if (__pyx_t_6) {

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":821
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_child->type_num); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":822
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_6 = (((__pyx_v_end - __pyx_v_f) < 5) != 0);
      if (__pyx_t_6) {

        /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":823
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

        /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":822
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":826
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_BYTE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":827
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UBYTE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":828
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_SHORT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x68;
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":829
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_USHORT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":830
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_INT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x69;
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":831
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UINT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":832
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONG); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x6C;
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":833
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":834
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGLONG); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x71;
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":835
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONGLONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":836
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_FLOAT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x66;
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":837
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_DOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x64;
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":838
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x67;
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":839
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CFLOAT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x66;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":840
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CDOUBLE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x64;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":841
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x67;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":842
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_OBJECT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L15;
      }

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":844
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
      /*else*/ {
        __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_v_t); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_Raise(__pyx_t_3, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_L15:;

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":845
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":820
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
      goto __pyx_L13;
    }

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":849
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
    /*else*/ {
      __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_v_f = __pyx_t_9;
    }
    __pyx_L13:;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":794
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":850
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":785
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("numpy._util_dtypestring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_child);
  __Pyx_XDECREF(__pyx_v_fields);
  __Pyx_XDECREF(__pyx_v_childname);
  __Pyx_XDECREF(__pyx_v_new_offset);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":966
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  PyObject *__pyx_v_baseptr;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":968
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
  __pyx_t_1 = (__pyx_v_base == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":969
 *      cdef PyObject* baseptr
 *      if base is None:
 *          baseptr = NULL             # <<<<<<<<<<<<<<
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 */
    __pyx_v_baseptr = NULL;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":968
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
    goto __pyx_L3;
  }

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":971
 *          baseptr = NULL
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 */
  /*else*/ {
    Py_INCREF(__pyx_v_base);

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":972
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr
 */
    __pyx_v_baseptr = ((PyObject *)__pyx_v_base);
  }
  __pyx_L3:;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":973
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
 *      arr.base = baseptr
 * 
 */
  Py_XDECREF(__pyx_v_arr->base);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":974
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  __pyx_v_arr->base = __pyx_v_baseptr;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":966
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":976
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":977
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_arr->base == NULL) != 0);
  if (__pyx_t_1) {

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":978
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     else:
 *         return <object>arr.base
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;

    /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":977
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  }

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":980
 *         return None
 *     else:
 *         return <object>arr.base             # <<<<<<<<<<<<<<
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_arr->base));
    __pyx_r = ((PyObject *)__pyx_v_arr->base);
    goto __pyx_L0;
  }

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":976
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyProblem __pyx_vtable_4lnpy_5learn_8pyhelper_PyProblem;

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyProblem(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *)o);
  p->__pyx_vtab = __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyProblem;
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyProblem(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PyProblem[] = {
  {"get_N", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_5get_N, METH_NOARGS, 0},
  {"get_ndim", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_7get_ndim, METH_NOARGS, 0},
  {"get_ntrials", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_9get_ntrials, METH_NOARGS, 0},
  {"get_Y", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_11get_Y, METH_NOARGS, 0},
  {"set_weights", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_13set_weights, METH_O, 0},
  {"set_permutation", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_15set_permutation, METH_O, 0},
  {"reset_index", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_9PyProblem_17reset_index, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PyProblem = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PyProblem", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyProblem, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PyProblem, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PyProblem, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PySparseProblem __pyx_vtable_4lnpy_5learn_8pyhelper_PySparseProblem;

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PySparseProblem(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PySparseProblem *p;
  PyObject *o = __pyx_tp_new_4lnpy_5learn_8pyhelper_PyProblem(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySparseProblem *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyProblem*)__pyx_vtabptr_4lnpy_5learn_8pyhelper_PySparseProblem;
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_15PySparseProblem_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PySparseProblem(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_15PySparseProblem_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyProblem(o);
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PySparseProblem[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PySparseProblem = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PySparseProblem", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySparseProblem), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PySparseProblem, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PySparseProblem, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PySparseProblem, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyDenseProblem __pyx_vtable_4lnpy_5learn_8pyhelper_PyDenseProblem;

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyDenseProblem(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyDenseProblem *p;
  PyObject *o = __pyx_tp_new_4lnpy_5learn_8pyhelper_PyProblem(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyDenseProblem *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyProblem*)__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyDenseProblem;
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_14PyDenseProblem_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyDenseProblem(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_14PyDenseProblem_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyProblem(o);
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PyDenseProblem[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PyDenseProblem = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PyDenseProblem", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyDenseProblem), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyDenseProblem, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PyDenseProblem, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PyDenseProblem, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLossFunction __pyx_vtable_4lnpy_5learn_8pyhelper_PyLossFunction;

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyLossFunction(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *)o);
  p->__pyx_vtab = __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLossFunction;
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_14PyLossFunction_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyLossFunction(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_14PyLossFunction_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_4lnpy_5learn_8pyhelper_14PyLossFunction_binary_targets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4lnpy_5learn_8pyhelper_14PyLossFunction_14binary_targets_1__get__(o);
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PyLossFunction[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4lnpy_5learn_8pyhelper_PyLossFunction[] = {
  {(char *)"binary_targets", __pyx_getprop_4lnpy_5learn_8pyhelper_14PyLossFunction_binary_targets, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PyLossFunction = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PyLossFunction", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyLossFunction, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PyLossFunction, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4lnpy_5learn_8pyhelper_PyLossFunction, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PyLossFunction, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyGaussianLoss __pyx_vtable_4lnpy_5learn_8pyhelper_PyGaussianLoss;

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyGaussianLoss(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianLoss *p;
  PyObject *o = __pyx_tp_new_4lnpy_5learn_8pyhelper_PyLossFunction(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianLoss *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLossFunction*)__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyGaussianLoss;
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_14PyGaussianLoss_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyGaussianLoss(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_14PyGaussianLoss_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyLossFunction(o);
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PyGaussianLoss[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PyGaussianLoss = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PyGaussianLoss", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianLoss), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyGaussianLoss, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PyGaussianLoss, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PyGaussianLoss, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLogLoss __pyx_vtable_4lnpy_5learn_8pyhelper_PyLogLoss;

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyLogLoss(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLogLoss *p;
  PyObject *o = __pyx_tp_new_4lnpy_5learn_8pyhelper_PyLossFunction(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLogLoss *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLossFunction*)__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLogLoss;
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_9PyLogLoss_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyLogLoss(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_9PyLogLoss_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyLossFunction(o);
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PyLogLoss[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PyLogLoss = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PyLogLoss", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLogLoss), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyLogLoss, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PyLogLoss, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PyLogLoss, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyHingeLoss __pyx_vtable_4lnpy_5learn_8pyhelper_PyHingeLoss;

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyHingeLoss(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyHingeLoss *p;
  PyObject *o = __pyx_tp_new_4lnpy_5learn_8pyhelper_PyLossFunction(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyHingeLoss *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLossFunction*)__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyHingeLoss;
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_11PyHingeLoss_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyHingeLoss(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_11PyHingeLoss_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyLossFunction(o);
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PyHingeLoss[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PyHingeLoss = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PyHingeLoss", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyHingeLoss), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyHingeLoss, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PyHingeLoss, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PyHingeLoss, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PySquaredHingeLoss __pyx_vtable_4lnpy_5learn_8pyhelper_PySquaredHingeLoss;

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PySquaredHingeLoss(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PySquaredHingeLoss *p;
  PyObject *o = __pyx_tp_new_4lnpy_5learn_8pyhelper_PyLossFunction(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySquaredHingeLoss *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLossFunction*)__pyx_vtabptr_4lnpy_5learn_8pyhelper_PySquaredHingeLoss;
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_18PySquaredHingeLoss_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PySquaredHingeLoss(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_18PySquaredHingeLoss_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyLossFunction(o);
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PySquaredHingeLoss[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PySquaredHingeLoss = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PySquaredHingeLoss", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySquaredHingeLoss), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PySquaredHingeLoss, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PySquaredHingeLoss, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PySquaredHingeLoss, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPoissonLoss __pyx_vtable_4lnpy_5learn_8pyhelper_PyPoissonLoss;

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyPoissonLoss(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonLoss *p;
  PyObject *o = __pyx_tp_new_4lnpy_5learn_8pyhelper_PyLossFunction(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonLoss *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLossFunction*)__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyPoissonLoss;
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_13PyPoissonLoss_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyPoissonLoss(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_13PyPoissonLoss_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyLossFunction(o);
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PyPoissonLoss[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PyPoissonLoss = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PyPoissonLoss", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonLoss), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyPoissonLoss, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PyPoissonLoss, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PyPoissonLoss, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior __pyx_vtable_4lnpy_5learn_8pyhelper_PyPrior;

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyPrior(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)o);
  p->__pyx_vtab = __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyPrior;
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyPrior(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_4lnpy_5learn_8pyhelper_7PyPrior_name(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_4name_1__get__(o);
}

static PyObject *__pyx_getprop_4lnpy_5learn_8pyhelper_7PyPrior_alpha(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_5alpha_1__get__(o);
}

static int __pyx_setprop_4lnpy_5learn_8pyhelper_7PyPrior_alpha(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_5alpha_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PyPrior[] = {
  {"get_ndim", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_5get_ndim, METH_NOARGS, 0},
  {"set_ndim", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_7set_ndim, METH_O, 0},
  {"get_default_grid", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_7PyPrior_9get_default_grid, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4lnpy_5learn_8pyhelper_PyPrior[] = {
  {(char *)"name", __pyx_getprop_4lnpy_5learn_8pyhelper_7PyPrior_name, 0, 0, 0},
  {(char *)"alpha", __pyx_getprop_4lnpy_5learn_8pyhelper_7PyPrior_alpha, __pyx_setprop_4lnpy_5learn_8pyhelper_7PyPrior_alpha, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PyPrior = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PyPrior", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyPrior, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PyPrior, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4lnpy_5learn_8pyhelper_PyPrior, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PyPrior, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyGaussianPrior __pyx_vtable_4lnpy_5learn_8pyhelper_PyGaussianPrior;

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyGaussianPrior(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianPrior *p;
  PyObject *o = __pyx_tp_new_4lnpy_5learn_8pyhelper_PyPrior(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianPrior *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior*)__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyGaussianPrior;
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_15PyGaussianPrior_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyGaussianPrior(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_15PyGaussianPrior_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyPrior(o);
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PyGaussianPrior[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PyGaussianPrior = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PyGaussianPrior", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianPrior), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyGaussianPrior, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PyGaussianPrior, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PyGaussianPrior, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyLaplacePrior __pyx_vtable_4lnpy_5learn_8pyhelper_PyLaplacePrior;

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyLaplacePrior(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLaplacePrior *p;
  PyObject *o = __pyx_tp_new_4lnpy_5learn_8pyhelper_PyPrior(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLaplacePrior *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior*)__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLaplacePrior;
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_14PyLaplacePrior_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyLaplacePrior(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_14PyLaplacePrior_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyPrior(o);
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PyLaplacePrior[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PyLaplacePrior = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PyLaplacePrior", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLaplacePrior), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyLaplacePrior, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PyLaplacePrior, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PyLaplacePrior, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyMixedPrior __pyx_vtable_4lnpy_5learn_8pyhelper_PyMixedPrior;

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyMixedPrior(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *p;
  PyObject *o = __pyx_tp_new_4lnpy_5learn_8pyhelper_PyPrior(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior*)__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyMixedPrior;
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_12PyMixedPrior_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyMixedPrior(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_12PyMixedPrior_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyPrior(o);
}

static PyObject *__pyx_getprop_4lnpy_5learn_8pyhelper_12PyMixedPrior_gamma(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4lnpy_5learn_8pyhelper_12PyMixedPrior_5gamma_1__get__(o);
}

static int __pyx_setprop_4lnpy_5learn_8pyhelper_12PyMixedPrior_gamma(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4lnpy_5learn_8pyhelper_12PyMixedPrior_5gamma_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PyMixedPrior[] = {
  {"__reduce__", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_12PyMixedPrior_5__reduce__, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4lnpy_5learn_8pyhelper_PyMixedPrior[] = {
  {(char *)"gamma", __pyx_getprop_4lnpy_5learn_8pyhelper_12PyMixedPrior_gamma, __pyx_setprop_4lnpy_5learn_8pyhelper_12PyMixedPrior_gamma, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PyMixedPrior = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PyMixedPrior", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyMixedPrior), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyMixedPrior, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PyMixedPrior, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4lnpy_5learn_8pyhelper_PyMixedPrior, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PyMixedPrior, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyENetPrior __pyx_vtable_4lnpy_5learn_8pyhelper_PyENetPrior;

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyENetPrior(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior *p;
  PyObject *o = __pyx_tp_new_4lnpy_5learn_8pyhelper_PyPrior(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior*)__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyENetPrior;
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_11PyENetPrior_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyENetPrior(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_11PyENetPrior_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyPrior(o);
}

static PyObject *__pyx_getprop_4lnpy_5learn_8pyhelper_11PyENetPrior_gamma(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4lnpy_5learn_8pyhelper_11PyENetPrior_5gamma_1__get__(o);
}

static int __pyx_setprop_4lnpy_5learn_8pyhelper_11PyENetPrior_gamma(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4lnpy_5learn_8pyhelper_11PyENetPrior_5gamma_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PyENetPrior[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4lnpy_5learn_8pyhelper_PyENetPrior[] = {
  {(char *)"gamma", __pyx_getprop_4lnpy_5learn_8pyhelper_11PyENetPrior_gamma, __pyx_setprop_4lnpy_5learn_8pyhelper_11PyENetPrior_gamma, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PyENetPrior = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PyENetPrior", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyENetPrior), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyENetPrior, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PyENetPrior, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4lnpy_5learn_8pyhelper_PyENetPrior, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PyENetPrior, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PySmoothnessPrior __pyx_vtable_4lnpy_5learn_8pyhelper_PySmoothnessPrior;

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PySmoothnessPrior(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *p;
  PyObject *o = __pyx_tp_new_4lnpy_5learn_8pyhelper_PyPrior(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_4lnpy_5learn_8pyhelper_PyPrior*)__pyx_vtabptr_4lnpy_5learn_8pyhelper_PySmoothnessPrior;
  p->precision_mat = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PySmoothnessPrior(PyObject *o) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *p = (struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->precision_mat);
  #if CYTHON_COMPILING_IN_CPYTHON
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyPrior(o);
}

static int __pyx_tp_traverse_4lnpy_5learn_8pyhelper_PySmoothnessPrior(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *p = (struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *)o;
  e = ((likely(__pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior)) ? ((__pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior->tp_traverse) ? __pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_4lnpy_5learn_8pyhelper_PySmoothnessPrior)); if (e) return e;
  if (p->precision_mat) {
    e = (*v)(((PyObject*)p->precision_mat), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4lnpy_5learn_8pyhelper_PySmoothnessPrior(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *p = (struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior *)o;
  if (likely(__pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior)) { if (__pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior->tp_clear) __pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_4lnpy_5learn_8pyhelper_PySmoothnessPrior);
  tmp = ((PyObject*)p->precision_mat);
  p->precision_mat = ((PyArrayObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_alpha(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5alpha_1__get__(o);
}

static int __pyx_setprop_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_alpha(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5alpha_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_gamma(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5gamma_1__get__(o);
}

static int __pyx_setprop_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_gamma(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5gamma_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PySmoothnessPrior[] = {
  {"__reduce__", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_5__reduce__, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4lnpy_5learn_8pyhelper_PySmoothnessPrior[] = {
  {(char *)"alpha", __pyx_getprop_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_alpha, __pyx_setprop_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_alpha, 0, 0},
  {(char *)"gamma", __pyx_getprop_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_gamma, __pyx_setprop_4lnpy_5learn_8pyhelper_17PySmoothnessPrior_gamma, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PySmoothnessPrior = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PySmoothnessPrior", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySmoothnessPrior), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PySmoothnessPrior, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4lnpy_5learn_8pyhelper_PySmoothnessPrior, /*tp_traverse*/
  __pyx_tp_clear_4lnpy_5learn_8pyhelper_PySmoothnessPrior, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PySmoothnessPrior, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4lnpy_5learn_8pyhelper_PySmoothnessPrior, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PySmoothnessPrior, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyBernoulliGLM(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *)o);
  p->prior = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyBernoulliGLM(PyObject *o) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *p = (struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->prior);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4lnpy_5learn_8pyhelper_PyBernoulliGLM(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *p = (struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *)o;
  if (p->prior) {
    e = (*v)(((PyObject*)p->prior), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4lnpy_5learn_8pyhelper_PyBernoulliGLM(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *p = (struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM *)o;
  tmp = ((PyObject*)p->prior);
  p->prior = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PyBernoulliGLM[] = {
  {"get_prior", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_5get_prior, METH_NOARGS, 0},
  {"fit", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_14PyBernoulliGLM_7fit, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PyBernoulliGLM = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PyBernoulliGLM", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyBernoulliGLM), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyBernoulliGLM, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4lnpy_5learn_8pyhelper_PyBernoulliGLM, /*tp_traverse*/
  __pyx_tp_clear_4lnpy_5learn_8pyhelper_PyBernoulliGLM, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PyBernoulliGLM, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PyBernoulliGLM, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PySVM(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *)o);
  p->prior = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_5PySVM_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PySVM(PyObject *o) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *p = (struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_5PySVM_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->prior);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4lnpy_5learn_8pyhelper_PySVM(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *p = (struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *)o;
  if (p->prior) {
    e = (*v)(((PyObject*)p->prior), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4lnpy_5learn_8pyhelper_PySVM(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *p = (struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM *)o;
  tmp = ((PyObject*)p->prior);
  p->prior = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PySVM[] = {
  {"get_prior", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_5PySVM_5get_prior, METH_NOARGS, 0},
  {"fit", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_5PySVM_7fit, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PySVM = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PySVM", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySVM), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PySVM, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4lnpy_5learn_8pyhelper_PySVM, /*tp_traverse*/
  __pyx_tp_clear_4lnpy_5learn_8pyhelper_PySVM, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PySVM, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PySVM, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyPoissonGLM(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *)o);
  p->prior = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_12PyPoissonGLM_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyPoissonGLM(PyObject *o) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *p = (struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_12PyPoissonGLM_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->prior);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4lnpy_5learn_8pyhelper_PyPoissonGLM(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *p = (struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *)o;
  if (p->prior) {
    e = (*v)(((PyObject*)p->prior), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4lnpy_5learn_8pyhelper_PyPoissonGLM(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *p = (struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM *)o;
  tmp = ((PyObject*)p->prior);
  p->prior = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PyPoissonGLM[] = {
  {"get_prior", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_12PyPoissonGLM_5get_prior, METH_NOARGS, 0},
  {"fit", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_12PyPoissonGLM_7fit, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PyPoissonGLM = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PyPoissonGLM", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPoissonGLM), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyPoissonGLM, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4lnpy_5learn_8pyhelper_PyPoissonGLM, /*tp_traverse*/
  __pyx_tp_clear_4lnpy_5learn_8pyhelper_PyPoissonGLM, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PyPoissonGLM, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PyPoissonGLM, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyGaussianGLM(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *)o);
  p->prior = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_13PyGaussianGLM_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyGaussianGLM(PyObject *o) {
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *p = (struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_13PyGaussianGLM_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->prior);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4lnpy_5learn_8pyhelper_PyGaussianGLM(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *p = (struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *)o;
  if (p->prior) {
    e = (*v)(((PyObject*)p->prior), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4lnpy_5learn_8pyhelper_PyGaussianGLM(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *p = (struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM *)o;
  tmp = ((PyObject*)p->prior);
  p->prior = ((struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PyGaussianGLM[] = {
  {"get_prior", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_13PyGaussianGLM_5get_prior, METH_NOARGS, 0},
  {"fit", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_13PyGaussianGLM_7fit, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PyGaussianGLM = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PyGaussianGLM", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyGaussianGLM), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyGaussianGLM, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4lnpy_5learn_8pyhelper_PyGaussianGLM, /*tp_traverse*/
  __pyx_tp_clear_4lnpy_5learn_8pyhelper_PyGaussianGLM, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PyGaussianGLM, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PyGaussianGLM, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PySGD(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PySGD(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PySGD[] = {
  {"fit", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_5fit, METH_VARARGS|METH_KEYWORDS, 0},
  {"get_bias", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_7get_bias, METH_NOARGS, 0},
  {"set_alpha", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_9set_alpha, METH_O, 0},
  {"get_alpha", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_5PySGD_11get_alpha, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PySGD = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PySGD", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PySGD), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PySGD, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PySGD, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PySGD, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4lnpy_5learn_8pyhelper_PyASGD(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyASGD(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_4lnpy_5learn_8pyhelper_PyASGD[] = {
  {"fit", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_5fit, METH_VARARGS|METH_KEYWORDS, 0},
  {"get_bias", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_7get_bias, METH_NOARGS, 0},
  {"set_alpha", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_9set_alpha, METH_O, 0},
  {"get_alpha", (PyCFunction)__pyx_pw_4lnpy_5learn_8pyhelper_6PyASGD_11get_alpha, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4lnpy_5learn_8pyhelper_PyASGD = {
  PyVarObject_HEAD_INIT(0, 0)
  "lnpy.learn.pyhelper.PyASGD", /*tp_name*/
  sizeof(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyASGD), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4lnpy_5learn_8pyhelper_PyASGD, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4lnpy_5learn_8pyhelper_PyASGD, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4lnpy_5learn_8pyhelper_PyASGD, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "pyhelper",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_C, __pyx_k_C, sizeof(__pyx_k_C), 0, 0, 1, 1},
  {&__pyx_n_s_D, __pyx_k_D, sizeof(__pyx_k_D), 0, 0, 1, 1},
  {&__pyx_kp_u_Format_string_allocated_too_shor, __pyx_k_Format_string_allocated_too_shor, sizeof(__pyx_k_Format_string_allocated_too_shor), 0, 1, 0, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor_2, __pyx_k_Format_string_allocated_too_shor_2, sizeof(__pyx_k_Format_string_allocated_too_shor_2), 0, 1, 0, 0},
  {&__pyx_kp_u_Non_native_byte_order_not_suppor, __pyx_k_Non_native_byte_order_not_suppor, sizeof(__pyx_k_Non_native_byte_order_not_suppor), 0, 1, 0, 0},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_n_s_X, __pyx_k_X, sizeof(__pyx_k_X), 0, 0, 1, 1},
  {&__pyx_n_s_Y, __pyx_k_Y, sizeof(__pyx_k_Y), 0, 0, 1, 1},
  {&__pyx_n_s_alpha, __pyx_k_alpha, sizeof(__pyx_k_alpha), 0, 0, 1, 1},
  {&__pyx_n_s_alpha_range, __pyx_k_alpha_range, sizeof(__pyx_k_alpha_range), 0, 0, 1, 1},
  {&__pyx_n_s_bias, __pyx_k_bias, sizeof(__pyx_k_bias), 0, 0, 1, 1},
  {&__pyx_n_s_canonical, __pyx_k_canonical, sizeof(__pyx_k_canonical), 0, 0, 1, 1},
  {&__pyx_n_s_class, __pyx_k_class, sizeof(__pyx_k_class), 0, 0, 1, 1},
  {&__pyx_n_s_copy, __pyx_k_copy, sizeof(__pyx_k_copy), 0, 0, 1, 1},
  {&__pyx_n_s_dt, __pyx_k_dt, sizeof(__pyx_k_dt), 0, 0, 1, 1},
  {&__pyx_n_s_eps, __pyx_k_eps, sizeof(__pyx_k_eps), 0, 0, 1, 1},
  {&__pyx_n_s_gamma, __pyx_k_gamma, sizeof(__pyx_k_gamma), 0, 0, 1, 1},
  {&__pyx_n_s_gamma_range, __pyx_k_gamma_range, sizeof(__pyx_k_gamma_range), 0, 0, 1, 1},
  {&__pyx_n_s_get_N, __pyx_k_get_N, sizeof(__pyx_k_get_N), 0, 0, 1, 1},
  {&__pyx_n_s_get_ntrials, __pyx_k_get_ntrials, sizeof(__pyx_k_get_ntrials), 0, 0, 1, 1},
  {&__pyx_kp_s_home_arne_Postdoc_misc_code_lnp, __pyx_k_home_arne_Postdoc_misc_code_lnp, sizeof(__pyx_k_home_arne_Postdoc_misc_code_lnp), 0, 0, 1, 0},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_linear, __pyx_k_linear, sizeof(__pyx_k_linear), 0, 0, 1, 1},
  {&__pyx_n_s_linspace, __pyx_k_linspace, sizeof(__pyx_k_linspace), 0, 0, 1, 1},
  {&__pyx_n_s_lnpy_learn_pyhelper, __pyx_k_lnpy_learn_pyhelper, sizeof(__pyx_k_lnpy_learn_pyhelper), 0, 0, 1, 1},
  {&__pyx_n_s_log2, __pyx_k_log2, sizeof(__pyx_k_log2), 0, 0, 1, 1},
  {&__pyx_n_s_loss, __pyx_k_loss, sizeof(__pyx_k_loss), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_max_iter, __pyx_k_max_iter, sizeof(__pyx_k_max_iter), 0, 0, 1, 1},
  {&__pyx_n_s_mu, __pyx_k_mu, sizeof(__pyx_k_mu), 0, 0, 1, 1},
  {&__pyx_n_s_n_alpha, __pyx_k_n_alpha, sizeof(__pyx_k_n_alpha), 0, 0, 1, 1},
  {&__pyx_n_s_n_epochs, __pyx_k_n_epochs, sizeof(__pyx_k_n_epochs), 0, 0, 1, 1},
  {&__pyx_n_s_n_gamma, __pyx_k_n_gamma, sizeof(__pyx_k_n_gamma), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_kp_u_ndarray_is_not_C_contiguous, __pyx_k_ndarray_is_not_C_contiguous, sizeof(__pyx_k_ndarray_is_not_C_contiguous), 0, 1, 0, 0},
  {&__pyx_kp_u_ndarray_is_not_Fortran_contiguou, __pyx_k_ndarray_is_not_Fortran_contiguou, sizeof(__pyx_k_ndarray_is_not_Fortran_contiguou), 0, 1, 0, 0},
  {&__pyx_n_s_ndim, __pyx_k_ndim, sizeof(__pyx_k_ndim), 0, 0, 1, 1},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_n_s_p, __pyx_k_p, sizeof(__pyx_k_p), 0, 0, 1, 1},
  {&__pyx_n_s_p1, __pyx_k_p1, sizeof(__pyx_k_p1), 0, 0, 1, 1},
  {&__pyx_n_s_p2, __pyx_k_p2, sizeof(__pyx_k_p2), 0, 0, 1, 1},
  {&__pyx_n_s_penalize_bias, __pyx_k_penalize_bias, sizeof(__pyx_k_penalize_bias), 0, 0, 1, 1},
  {&__pyx_n_s_poly_decay, __pyx_k_poly_decay, sizeof(__pyx_k_poly_decay), 0, 0, 1, 1},
  {&__pyx_n_s_prior, __pyx_k_prior, sizeof(__pyx_k_prior), 0, 0, 1, 1},
  {&__pyx_n_s_prob, __pyx_k_prob, sizeof(__pyx_k_prob), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_q, __pyx_k_q, sizeof(__pyx_k_q), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_rebuild_mixed_prior, __pyx_k_rebuild_mixed_prior, sizeof(__pyx_k_rebuild_mixed_prior), 0, 0, 1, 1},
  {&__pyx_n_s_rebuild_smoothness_prior, __pyx_k_rebuild_smoothness_prior, sizeof(__pyx_k_rebuild_smoothness_prior), 0, 0, 1, 1},
  {&__pyx_n_s_scaling, __pyx_k_scaling, sizeof(__pyx_k_scaling), 0, 0, 1, 1},
  {&__pyx_n_s_start_iter, __pyx_k_start_iter, sizeof(__pyx_k_start_iter), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_tolerance, __pyx_k_tolerance, sizeof(__pyx_k_tolerance), 0, 0, 1, 1},
  {&__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_k_unknown_dtype_code_in_numpy_pxd, sizeof(__pyx_k_unknown_dtype_code_in_numpy_pxd), 0, 1, 0, 0},
  {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
  {&__pyx_n_s_verbose, __pyx_k_verbose, sizeof(__pyx_k_verbose), 0, 0, 1, 1},
  {&__pyx_n_s_w, __pyx_k_w, sizeof(__pyx_k_w), 0, 0, 1, 1},
  {&__pyx_n_s_wa, __pyx_k_wa, sizeof(__pyx_k_wa), 0, 0, 1, 1},
  {&__pyx_n_s_warm_start, __pyx_k_warm_start, sizeof(__pyx_k_warm_start), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "lnpy/learn/pyhelper.pyx":217
 * 
 *     def get_default_grid(self, n_alpha=10, alpha_range=(2.**-20, 2.**20),
 *                          n_gamma=10, gamma_range=(0., 1.)):             # <<<<<<<<<<<<<<
 * 
 *         param_grid = {}
 */
  __pyx_tuple__2 = PyTuple_Pack(2, __pyx_float_0_, __pyx_float_1_); if (unlikely(!__pyx_tuple__2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_C_contiguous); if (unlikely(!__pyx_tuple__3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_Fortran_contiguou); if (unlikely(!__pyx_tuple__4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":259
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":799
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor); if (unlikely(!__pyx_tuple__6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":803
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__7)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":823
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor_2); if (unlikely(!__pyx_tuple__8)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "lnpy/learn/pyhelper.pyx":294
 *             cp.set_gamma(x)
 * 
 * def rebuild_mixed_prior(p1, p2, alpha, gamma):             # <<<<<<<<<<<<<<
 *     return PyMixedPrior(p1, p2, alpha, gamma)
 * 
 */
  __pyx_tuple__9 = PyTuple_Pack(4, __pyx_n_s_p1, __pyx_n_s_p2, __pyx_n_s_alpha, __pyx_n_s_gamma); if (unlikely(!__pyx_tuple__9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);
  __pyx_codeobj__10 = (PyObject*)__Pyx_PyCode_New(4, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__9, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_arne_Postdoc_misc_code_lnp, __pyx_n_s_rebuild_mixed_prior, 294, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "lnpy/learn/pyhelper.pyx":363
 *             cp.set_gamma(x)
 * 
 * def rebuild_smoothness_prior(alpha, gamma, D):             # <<<<<<<<<<<<<<
 *     return PySmoothnessPrior(alpha, gamma, D)
 * 
 */
  __pyx_tuple__11 = PyTuple_Pack(3, __pyx_n_s_alpha, __pyx_n_s_gamma, __pyx_n_s_D); if (unlikely(!__pyx_tuple__11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 363; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);
  __pyx_codeobj__12 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__11, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_arne_Postdoc_misc_code_lnp, __pyx_n_s_rebuild_smoothness_prior, 363, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 363; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_float_0_ = PyFloat_FromDouble(0.); if (unlikely(!__pyx_float_0_)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_float_1_ = PyFloat_FromDouble(1.); if (unlikely(!__pyx_float_1_)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_float_2_ = PyFloat_FromDouble(2.); if (unlikely(!__pyx_float_2_)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_10 = PyInt_FromLong(10); if (unlikely(!__pyx_int_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initpyhelper(void); /*proto*/
PyMODINIT_FUNC initpyhelper(void)
#else
PyMODINIT_FUNC PyInit_pyhelper(void); /*proto*/
PyMODINIT_FUNC PyInit_pyhelper(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_pyhelper(void)", 0);
  if (__Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("pyhelper", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_lnpy__learn__pyhelper) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "lnpy.learn.pyhelper")) {
      if (unlikely(PyDict_SetItemString(modules, "lnpy.learn.pyhelper", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyProblem = &__pyx_vtable_4lnpy_5learn_8pyhelper_PyProblem;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PyProblem.get_pointer = (Problem *(*)(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyProblem *))__pyx_f_4lnpy_5learn_8pyhelper_9PyProblem_get_pointer;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PyProblem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PyProblem.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4lnpy_5learn_8pyhelper_PyProblem.tp_dict, __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyProblem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PyProblem", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PyProblem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 12; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PyProblem = &__pyx_type_4lnpy_5learn_8pyhelper_PyProblem;
  __pyx_vtabptr_4lnpy_5learn_8pyhelper_PySparseProblem = &__pyx_vtable_4lnpy_5learn_8pyhelper_PySparseProblem;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PySparseProblem.__pyx_base = *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyProblem;
  __pyx_type_4lnpy_5learn_8pyhelper_PySparseProblem.tp_base = __pyx_ptype_4lnpy_5learn_8pyhelper_PyProblem;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PySparseProblem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PySparseProblem.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4lnpy_5learn_8pyhelper_PySparseProblem.tp_dict, __pyx_vtabptr_4lnpy_5learn_8pyhelper_PySparseProblem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PySparseProblem", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PySparseProblem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PySparseProblem = &__pyx_type_4lnpy_5learn_8pyhelper_PySparseProblem;
  __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyDenseProblem = &__pyx_vtable_4lnpy_5learn_8pyhelper_PyDenseProblem;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PyDenseProblem.__pyx_base = *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyProblem;
  __pyx_type_4lnpy_5learn_8pyhelper_PyDenseProblem.tp_base = __pyx_ptype_4lnpy_5learn_8pyhelper_PyProblem;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PyDenseProblem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PyDenseProblem.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4lnpy_5learn_8pyhelper_PyDenseProblem.tp_dict, __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyDenseProblem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PyDenseProblem", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PyDenseProblem) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PyDenseProblem = &__pyx_type_4lnpy_5learn_8pyhelper_PyDenseProblem;
  __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLossFunction = &__pyx_vtable_4lnpy_5learn_8pyhelper_PyLossFunction;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PyLossFunction.get_pointer = (LossFunction *(*)(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *))__pyx_f_4lnpy_5learn_8pyhelper_14PyLossFunction_get_pointer;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PyLossFunction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PyLossFunction.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4lnpy_5learn_8pyhelper_PyLossFunction.tp_dict, __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLossFunction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PyLossFunction", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PyLossFunction) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PyLossFunction = &__pyx_type_4lnpy_5learn_8pyhelper_PyLossFunction;
  __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyGaussianLoss = &__pyx_vtable_4lnpy_5learn_8pyhelper_PyGaussianLoss;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PyGaussianLoss.__pyx_base = *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLossFunction;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PyGaussianLoss.__pyx_base.get_pointer = (LossFunction *(*)(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *))__pyx_f_4lnpy_5learn_8pyhelper_14PyGaussianLoss_get_pointer;
  __pyx_type_4lnpy_5learn_8pyhelper_PyGaussianLoss.tp_base = __pyx_ptype_4lnpy_5learn_8pyhelper_PyLossFunction;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PyGaussianLoss) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PyGaussianLoss.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4lnpy_5learn_8pyhelper_PyGaussianLoss.tp_dict, __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyGaussianLoss) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PyGaussianLoss", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PyGaussianLoss) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PyGaussianLoss = &__pyx_type_4lnpy_5learn_8pyhelper_PyGaussianLoss;
  __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLogLoss = &__pyx_vtable_4lnpy_5learn_8pyhelper_PyLogLoss;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PyLogLoss.__pyx_base = *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLossFunction;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PyLogLoss.__pyx_base.get_pointer = (LossFunction *(*)(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *))__pyx_f_4lnpy_5learn_8pyhelper_9PyLogLoss_get_pointer;
  __pyx_type_4lnpy_5learn_8pyhelper_PyLogLoss.tp_base = __pyx_ptype_4lnpy_5learn_8pyhelper_PyLossFunction;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PyLogLoss) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PyLogLoss.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4lnpy_5learn_8pyhelper_PyLogLoss.tp_dict, __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLogLoss) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PyLogLoss", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PyLogLoss) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PyLogLoss = &__pyx_type_4lnpy_5learn_8pyhelper_PyLogLoss;
  __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyHingeLoss = &__pyx_vtable_4lnpy_5learn_8pyhelper_PyHingeLoss;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PyHingeLoss.__pyx_base = *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLossFunction;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PyHingeLoss.__pyx_base.get_pointer = (LossFunction *(*)(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *))__pyx_f_4lnpy_5learn_8pyhelper_11PyHingeLoss_get_pointer;
  __pyx_type_4lnpy_5learn_8pyhelper_PyHingeLoss.tp_base = __pyx_ptype_4lnpy_5learn_8pyhelper_PyLossFunction;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PyHingeLoss) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PyHingeLoss.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4lnpy_5learn_8pyhelper_PyHingeLoss.tp_dict, __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyHingeLoss) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PyHingeLoss", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PyHingeLoss) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PyHingeLoss = &__pyx_type_4lnpy_5learn_8pyhelper_PyHingeLoss;
  __pyx_vtabptr_4lnpy_5learn_8pyhelper_PySquaredHingeLoss = &__pyx_vtable_4lnpy_5learn_8pyhelper_PySquaredHingeLoss;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PySquaredHingeLoss.__pyx_base = *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLossFunction;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PySquaredHingeLoss.__pyx_base.get_pointer = (LossFunction *(*)(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *))__pyx_f_4lnpy_5learn_8pyhelper_18PySquaredHingeLoss_get_pointer;
  __pyx_type_4lnpy_5learn_8pyhelper_PySquaredHingeLoss.tp_base = __pyx_ptype_4lnpy_5learn_8pyhelper_PyLossFunction;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PySquaredHingeLoss) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PySquaredHingeLoss.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4lnpy_5learn_8pyhelper_PySquaredHingeLoss.tp_dict, __pyx_vtabptr_4lnpy_5learn_8pyhelper_PySquaredHingeLoss) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PySquaredHingeLoss", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PySquaredHingeLoss) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PySquaredHingeLoss = &__pyx_type_4lnpy_5learn_8pyhelper_PySquaredHingeLoss;
  __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyPoissonLoss = &__pyx_vtable_4lnpy_5learn_8pyhelper_PyPoissonLoss;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PyPoissonLoss.__pyx_base = *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLossFunction;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PyPoissonLoss.__pyx_base.get_pointer = (LossFunction *(*)(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyLossFunction *))__pyx_f_4lnpy_5learn_8pyhelper_13PyPoissonLoss_get_pointer;
  __pyx_type_4lnpy_5learn_8pyhelper_PyPoissonLoss.tp_base = __pyx_ptype_4lnpy_5learn_8pyhelper_PyLossFunction;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PyPoissonLoss) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PyPoissonLoss.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4lnpy_5learn_8pyhelper_PyPoissonLoss.tp_dict, __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyPoissonLoss) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PyPoissonLoss", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PyPoissonLoss) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PyPoissonLoss = &__pyx_type_4lnpy_5learn_8pyhelper_PyPoissonLoss;
  __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyPrior = &__pyx_vtable_4lnpy_5learn_8pyhelper_PyPrior;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PyPrior.get_pointer = (Prior *(*)(struct __pyx_obj_4lnpy_5learn_8pyhelper_PyPrior *))__pyx_f_4lnpy_5learn_8pyhelper_7PyPrior_get_pointer;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PyPrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PyPrior.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4lnpy_5learn_8pyhelper_PyPrior.tp_dict, __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyPrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PyPrior", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PyPrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior = &__pyx_type_4lnpy_5learn_8pyhelper_PyPrior;
  __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyGaussianPrior = &__pyx_vtable_4lnpy_5learn_8pyhelper_PyGaussianPrior;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PyGaussianPrior.__pyx_base = *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyPrior;
  __pyx_type_4lnpy_5learn_8pyhelper_PyGaussianPrior.tp_base = __pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PyGaussianPrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PyGaussianPrior.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4lnpy_5learn_8pyhelper_PyGaussianPrior.tp_dict, __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyGaussianPrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PyGaussianPrior", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PyGaussianPrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PyGaussianPrior = &__pyx_type_4lnpy_5learn_8pyhelper_PyGaussianPrior;
  __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLaplacePrior = &__pyx_vtable_4lnpy_5learn_8pyhelper_PyLaplacePrior;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PyLaplacePrior.__pyx_base = *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyPrior;
  __pyx_type_4lnpy_5learn_8pyhelper_PyLaplacePrior.tp_base = __pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PyLaplacePrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 250; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PyLaplacePrior.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4lnpy_5learn_8pyhelper_PyLaplacePrior.tp_dict, __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyLaplacePrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 250; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PyLaplacePrior", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PyLaplacePrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 250; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PyLaplacePrior = &__pyx_type_4lnpy_5learn_8pyhelper_PyLaplacePrior;
  __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyMixedPrior = &__pyx_vtable_4lnpy_5learn_8pyhelper_PyMixedPrior;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PyMixedPrior.__pyx_base = *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyPrior;
  __pyx_type_4lnpy_5learn_8pyhelper_PyMixedPrior.tp_base = __pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PyMixedPrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PyMixedPrior.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4lnpy_5learn_8pyhelper_PyMixedPrior.tp_dict, __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyMixedPrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PyMixedPrior", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PyMixedPrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PyMixedPrior = &__pyx_type_4lnpy_5learn_8pyhelper_PyMixedPrior;
  __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyENetPrior = &__pyx_vtable_4lnpy_5learn_8pyhelper_PyENetPrior;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PyENetPrior.__pyx_base = *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyPrior;
  __pyx_type_4lnpy_5learn_8pyhelper_PyENetPrior.tp_base = __pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PyENetPrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PyENetPrior.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4lnpy_5learn_8pyhelper_PyENetPrior.tp_dict, __pyx_vtabptr_4lnpy_5learn_8pyhelper_PyENetPrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PyENetPrior", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PyENetPrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PyENetPrior = &__pyx_type_4lnpy_5learn_8pyhelper_PyENetPrior;
  __pyx_vtabptr_4lnpy_5learn_8pyhelper_PySmoothnessPrior = &__pyx_vtable_4lnpy_5learn_8pyhelper_PySmoothnessPrior;
  __pyx_vtable_4lnpy_5learn_8pyhelper_PySmoothnessPrior.__pyx_base = *__pyx_vtabptr_4lnpy_5learn_8pyhelper_PyPrior;
  __pyx_type_4lnpy_5learn_8pyhelper_PySmoothnessPrior.tp_base = __pyx_ptype_4lnpy_5learn_8pyhelper_PyPrior;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PySmoothnessPrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PySmoothnessPrior.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_4lnpy_5learn_8pyhelper_PySmoothnessPrior.tp_dict, __pyx_vtabptr_4lnpy_5learn_8pyhelper_PySmoothnessPrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "PySmoothnessPrior", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PySmoothnessPrior) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PySmoothnessPrior = &__pyx_type_4lnpy_5learn_8pyhelper_PySmoothnessPrior;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PyBernoulliGLM) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PyBernoulliGLM.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PyBernoulliGLM", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PyBernoulliGLM) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PyBernoulliGLM = &__pyx_type_4lnpy_5learn_8pyhelper_PyBernoulliGLM;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PySVM) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 389; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PySVM.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PySVM", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PySVM) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 389; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PySVM = &__pyx_type_4lnpy_5learn_8pyhelper_PySVM;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PyPoissonGLM) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PyPoissonGLM.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PyPoissonGLM", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PyPoissonGLM) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PyPoissonGLM = &__pyx_type_4lnpy_5learn_8pyhelper_PyPoissonGLM;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PyGaussianGLM) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PyGaussianGLM.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PyGaussianGLM", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PyGaussianGLM) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PyGaussianGLM = &__pyx_type_4lnpy_5learn_8pyhelper_PyGaussianGLM;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PySGD) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PySGD.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PySGD", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PySGD) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PySGD = &__pyx_type_4lnpy_5learn_8pyhelper_PySGD;
  if (PyType_Ready(&__pyx_type_4lnpy_5learn_8pyhelper_PyASGD) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 488; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_4lnpy_5learn_8pyhelper_PyASGD.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PyASGD", (PyObject *)&__pyx_type_4lnpy_5learn_8pyhelper_PyASGD) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 488; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_4lnpy_5learn_8pyhelper_PyASGD = &__pyx_type_4lnpy_5learn_8pyhelper_PyASGD;
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr), 0); if (unlikely(!__pyx_ptype_5numpy_dtype)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType("numpy", "flatiter", sizeof(PyArrayIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_flatiter)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType("numpy", "broadcast", sizeof(PyArrayMultiIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_broadcast)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_5numpy_ndarray)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType("numpy", "ufunc", sizeof(PyUFuncObject), 0); if (unlikely(!__pyx_ptype_5numpy_ufunc)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 861; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif

  /* "lnpy/learn/pyhelper.pyx":5
 * #cython: wraparound=False
 * 
 * import  numpy as np             # <<<<<<<<<<<<<<
 * cimport numpy as np
 * cimport pyhelper
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "lnpy/learn/pyhelper.pyx":9
 * cimport pyhelper
 * 
 * np.import_array()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  import_array();

  /* "lnpy/learn/pyhelper.pyx":216
 *         self.thisptr.set_ndim(d)
 * 
 *     def get_default_grid(self, n_alpha=10, alpha_range=(2.**-20, 2.**20),             # <<<<<<<<<<<<<<
 *                          n_gamma=10, gamma_range=(0., 1.)):
 * 
 */
  __pyx_t_1 = PyFloat_FromDouble(pow(2., -20.0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(pow(2., 20.0)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 216; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_k_ = __pyx_t_3;
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;

  /* "lnpy/learn/pyhelper.pyx":294
 *             cp.set_gamma(x)
 * 
 * def rebuild_mixed_prior(p1, p2, alpha, gamma):             # <<<<<<<<<<<<<<
 *     return PyMixedPrior(p1, p2, alpha, gamma)
 * 
 */
  __pyx_t_3 = PyCFunction_NewEx(&__pyx_mdef_4lnpy_5learn_8pyhelper_1rebuild_mixed_prior, NULL, __pyx_n_s_lnpy_learn_pyhelper); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_rebuild_mixed_prior, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "lnpy/learn/pyhelper.pyx":363
 *             cp.set_gamma(x)
 * 
 * def rebuild_smoothness_prior(alpha, gamma, D):             # <<<<<<<<<<<<<<
 *     return PySmoothnessPrior(alpha, gamma, D)
 * 
 */
  __pyx_t_3 = PyCFunction_NewEx(&__pyx_mdef_4lnpy_5learn_8pyhelper_3rebuild_smoothness_prior, NULL, __pyx_n_s_lnpy_learn_pyhelper); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 363; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_rebuild_smoothness_prior, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 363; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "lnpy/learn/pyhelper.pyx":1
 * #!python             # <<<<<<<<<<<<<<
 * #cython: boundscheck=False
 * #cython: wraparound=False
 */
  __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "../../../../anaconda/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd":976
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init lnpy.learn.pyhelper", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init lnpy.learn.pyhelper");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* --- Runtime support code --- */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

static CYTHON_INLINE int __Pyx_IsLittleEndian(void) {
  unsigned int n = 1;
  return *(unsigned char*)(&n) != 0;
}
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type) {
  stack[0].field = &ctx->root;
  stack[0].parent_offset = 0;
  ctx->root.type = type;
  ctx->root.name = "buffer dtype";
  ctx->root.offset = 0;
  ctx->head = stack;
  ctx->head->field = &ctx->root;
  ctx->fmt_offset = 0;
  ctx->head->parent_offset = 0;
  ctx->new_packmode = '@';
  ctx->enc_packmode = '@';
  ctx->new_count = 1;
  ctx->enc_count = 0;
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  ctx->is_valid_array = 0;
  ctx->struct_alignment = 0;
  while (type->typegroup == 'S') {
    ++ctx->head;
    ctx->head->field = type->fields;
    ctx->head->parent_offset = 0;
    type = type->fields->type;
  }
}
static int __Pyx_BufFmt_ParseNumber(const char** ts) {
    int count;
    const char* t = *ts;
    if (*t < '0' || *t > '9') {
      return -1;
    } else {
        count = *t++ - '0';
        while (*t >= '0' && *t < '9') {
            count *= 10;
            count += *t++ - '0';
        }
    }
    *ts = t;
    return count;
}
static int __Pyx_BufFmt_ExpectNumber(const char **ts) {
    int number = __Pyx_BufFmt_ParseNumber(ts);
    if (number == -1)
        PyErr_Format(PyExc_ValueError,\
                     "Does not understand character buffer dtype format string ('%c')", **ts);
    return number;
}
static void __Pyx_BufFmt_RaiseUnexpectedChar(char ch) {
  PyErr_Format(PyExc_ValueError,
               "Unexpected format string character: '%c'", ch);
}
static const char* __Pyx_BufFmt_DescribeTypeChar(char ch, int is_complex) {
  switch (ch) {
    case 'c': return "'char'";
    case 'b': return "'signed char'";
    case 'B': return "'unsigned char'";
    case 'h': return "'short'";
    case 'H': return "'unsigned short'";
    case 'i': return "'int'";
    case 'I': return "'unsigned int'";
    case 'l': return "'long'";
    case 'L': return "'unsigned long'";
    case 'q': return "'long long'";
    case 'Q': return "'unsigned long long'";
    case 'f': return (is_complex ? "'complex float'" : "'float'");
    case 'd': return (is_complex ? "'complex double'" : "'double'");
    case 'g': return (is_complex ? "'complex long double'" : "'long double'");
    case 'T': return "a struct";
    case 'O': return "Python object";
    case 'P': return "a pointer";
    case 's': case 'p': return "a string";
    case 0: return "end";
    default: return "unparseable format string";
  }
}
static size_t __Pyx_BufFmt_TypeCharToStandardSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return 2;
    case 'i': case 'I': case 'l': case 'L': return 4;
    case 'q': case 'Q': return 8;
    case 'f': return (is_complex ? 8 : 4);
    case 'd': return (is_complex ? 16 : 8);
    case 'g': {
      PyErr_SetString(PyExc_ValueError, "Python does not define a standard format string size for long double ('g')..");
      return 0;
    }
    case 'O': case 'P': return sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static size_t __Pyx_BufFmt_TypeCharToNativeSize(char ch, int is_complex) {
  switch (ch) {
    case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(short);
    case 'i': case 'I': return sizeof(int);
    case 'l': case 'L': return sizeof(long);
    #ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(PY_LONG_LONG);
    #endif
    case 'f': return sizeof(float) * (is_complex ? 2 : 1);
    case 'd': return sizeof(double) * (is_complex ? 2 : 1);
    case 'g': return sizeof(long double) * (is_complex ? 2 : 1);
    case 'O': case 'P': return sizeof(void*);
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
typedef struct { char c; short x; } __Pyx_st_short;
typedef struct { char c; int x; } __Pyx_st_int;
typedef struct { char c; long x; } __Pyx_st_long;
typedef struct { char c; float x; } __Pyx_st_float;
typedef struct { char c; double x; } __Pyx_st_double;
typedef struct { char c; long double x; } __Pyx_st_longdouble;
typedef struct { char c; void *x; } __Pyx_st_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { char c; PY_LONG_LONG x; } __Pyx_st_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToAlignment(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_st_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_st_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_st_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_st_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_st_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_st_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_st_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_st_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
/* These are for computing the padding at the end of the struct to align
   on the first member of the struct. This will probably the same as above,
   but we don't have any guarantees.
 */
typedef struct { short x; char c; } __Pyx_pad_short;
typedef struct { int x; char c; } __Pyx_pad_int;
typedef struct { long x; char c; } __Pyx_pad_long;
typedef struct { float x; char c; } __Pyx_pad_float;
typedef struct { double x; char c; } __Pyx_pad_double;
typedef struct { long double x; char c; } __Pyx_pad_longdouble;
typedef struct { void *x; char c; } __Pyx_pad_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { PY_LONG_LONG x; char c; } __Pyx_pad_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToPadding(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_pad_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_pad_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_pad_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_pad_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_pad_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_pad_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_pad_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_pad_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static char __Pyx_BufFmt_TypeCharToGroup(char ch, int is_complex) {
  switch (ch) {
    case 'c':
        return 'H';
    case 'b': case 'h': case 'i':
    case 'l': case 'q': case 's': case 'p':
        return 'I';
    case 'B': case 'H': case 'I': case 'L': case 'Q':
        return 'U';
    case 'f': case 'd': case 'g':
        return (is_complex ? 'C' : 'R');
    case 'O':
        return 'O';
    case 'P':
        return 'P';
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
static void __Pyx_BufFmt_RaiseExpected(__Pyx_BufFmt_Context* ctx) {
  if (ctx->head == NULL || ctx->head->field == &ctx->root) {
    const char* expected;
    const char* quote;
    if (ctx->head == NULL) {
      expected = "end";
      quote = "";
    } else {
      expected = ctx->head->field->type->name;
      quote = "'";
    }
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected %s%s%s but got %s",
                 quote, expected, quote,
                 __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex));
  } else {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_StructField* parent = (ctx->head - 1)->field;
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected '%s' but got %s in '%s.%s'",
                 field->type->name, __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex),
                 parent->type->name, field->name);
  }
}
static int __Pyx_BufFmt_ProcessTypeChunk(__Pyx_BufFmt_Context* ctx) {
  char group;
  size_t size, offset, arraysize = 1;
  if (ctx->enc_type == 0) return 0;
  if (ctx->head->field->type->arraysize[0]) {
    int i, ndim = 0;
    if (ctx->enc_type == 's' || ctx->enc_type == 'p') {
        ctx->is_valid_array = ctx->head->field->type->ndim == 1;
        ndim = 1;
        if (ctx->enc_count != ctx->head->field->type->arraysize[0]) {
            PyErr_Format(PyExc_ValueError,
                         "Expected a dimension of size %zu, got %zu",
                         ctx->head->field->type->arraysize[0], ctx->enc_count);
            return -1;
        }
    }
    if (!ctx->is_valid_array) {
      PyErr_Format(PyExc_ValueError, "Expected %d dimensions, got %d",
                   ctx->head->field->type->ndim, ndim);
      return -1;
    }
    for (i = 0; i < ctx->head->field->type->ndim; i++) {
      arraysize *= ctx->head->field->type->arraysize[i];
    }
    ctx->is_valid_array = 0;
    ctx->enc_count = 1;
  }
  group = __Pyx_BufFmt_TypeCharToGroup(ctx->enc_type, ctx->is_complex);
  do {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_TypeInfo* type = field->type;
    if (ctx->enc_packmode == '@' || ctx->enc_packmode == '^') {
      size = __Pyx_BufFmt_TypeCharToNativeSize(ctx->enc_type, ctx->is_complex);
    } else {
      size = __Pyx_BufFmt_TypeCharToStandardSize(ctx->enc_type, ctx->is_complex);
    }
    if (ctx->enc_packmode == '@') {
      size_t align_at = __Pyx_BufFmt_TypeCharToAlignment(ctx->enc_type, ctx->is_complex);
      size_t align_mod_offset;
      if (align_at == 0) return -1;
      align_mod_offset = ctx->fmt_offset % align_at;
      if (align_mod_offset > 0) ctx->fmt_offset += align_at - align_mod_offset;
      if (ctx->struct_alignment == 0)
          ctx->struct_alignment = __Pyx_BufFmt_TypeCharToPadding(ctx->enc_type,
                                                                 ctx->is_complex);
    }
    if (type->size != size || type->typegroup != group) {
      if (type->typegroup == 'C' && type->fields != NULL) {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        ++ctx->head;
        ctx->head->field = type->fields;
        ctx->head->parent_offset = parent_offset;
        continue;
      }
      if ((type->typegroup == 'H' || group == 'H') && type->size == size) {
      } else {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
      }
    }
    offset = ctx->head->parent_offset + field->offset;
    if (ctx->fmt_offset != offset) {
      PyErr_Format(PyExc_ValueError,
                   "Buffer dtype mismatch; next field is at offset %" CYTHON_FORMAT_SSIZE_T "d but %" CYTHON_FORMAT_SSIZE_T "d expected",
                   (Py_ssize_t)ctx->fmt_offset, (Py_ssize_t)offset);
      return -1;
    }
    ctx->fmt_offset += size;
    if (arraysize)
      ctx->fmt_offset += (arraysize - 1) * size;
    --ctx->enc_count;
    while (1) {
      if (field == &ctx->root) {
        ctx->head = NULL;
        if (ctx->enc_count != 0) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
        }
        break;
      }
      ctx->head->field = ++field;
      if (field->type == NULL) {
        --ctx->head;
        field = ctx->head->field;
        continue;
      } else if (field->type->typegroup == 'S') {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        if (field->type->fields->type == NULL) continue;
        field = field->type->fields;
        ++ctx->head;
        ctx->head->field = field;
        ctx->head->parent_offset = parent_offset;
        break;
      } else {
        break;
      }
    }
  } while (ctx->enc_count);
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  return 0;
}
static CYTHON_INLINE PyObject *
__pyx_buffmt_parse_array(__Pyx_BufFmt_Context* ctx, const char** tsp)
{
    const char *ts = *tsp;
    int i = 0, number;
    int ndim = ctx->head->field->type->ndim;
;
    ++ts;
    if (ctx->new_count != 1) {
        PyErr_SetString(PyExc_ValueError,
                        "Cannot handle repeated arrays in format string");
        return NULL;
    }
    if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
    while (*ts && *ts != ')') {
        switch (*ts) {
            case ' ': case '\f': case '\r': case '\n': case '\t': case '\v':  continue;
            default:  break;
        }
        number = __Pyx_BufFmt_ExpectNumber(&ts);
        if (number == -1) return NULL;
        if (i < ndim && (size_t) number != ctx->head->field->type->arraysize[i])
            return PyErr_Format(PyExc_ValueError,
                        "Expected a dimension of size %zu, got %d",
                        ctx->head->field->type->arraysize[i], number);
        if (*ts != ',' && *ts != ')')
            return PyErr_Format(PyExc_ValueError,
                                "Expected a comma in format string, got '%c'", *ts);
        if (*ts == ',') ts++;
        i++;
    }
    if (i != ndim)
        return PyErr_Format(PyExc_ValueError, "Expected %d dimension(s), got %d",
                            ctx->head->field->type->ndim, i);
    if (!*ts) {
        PyErr_SetString(PyExc_ValueError,
                        "Unexpected end of format string, expected ')'");
        return NULL;
    }
    ctx->is_valid_array = 1;
    ctx->new_count = 1;
    *tsp = ++ts;
    return Py_None;
}
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts) {
  int got_Z = 0;
  while (1) {
    switch(*ts) {
      case 0:
        if (ctx->enc_type != 0 && ctx->head == NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        if (ctx->head != NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        return ts;
      case ' ':
      case '\r':
      case '\n':
        ++ts;
        break;
      case '<':
        if (!__Pyx_IsLittleEndian()) {
          PyErr_SetString(PyExc_ValueError, "Little-endian buffer not supported on big-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '>':
      case '!':
        if (__Pyx_IsLittleEndian()) {
          PyErr_SetString(PyExc_ValueError, "Big-endian buffer not supported on little-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '=':
      case '@':
      case '^':
        ctx->new_packmode = *ts++;
        break;
      case 'T':
        {
          const char* ts_after_sub;
          size_t i, struct_count = ctx->new_count;
          size_t struct_alignment = ctx->struct_alignment;
          ctx->new_count = 1;
          ++ts;
          if (*ts != '{') {
            PyErr_SetString(PyExc_ValueError, "Buffer acquisition: Expected '{' after 'T'");
            return NULL;
          }
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          ctx->enc_count = 0;
          ctx->struct_alignment = 0;
          ++ts;
          ts_after_sub = ts;
          for (i = 0; i != struct_count; ++i) {
            ts_after_sub = __Pyx_BufFmt_CheckString(ctx, ts);
            if (!ts_after_sub) return NULL;
          }
          ts = ts_after_sub;
          if (struct_alignment) ctx->struct_alignment = struct_alignment;
        }
        break;
      case '}':
        {
          size_t alignment = ctx->struct_alignment;
          ++ts;
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          if (alignment && ctx->fmt_offset % alignment) {
            ctx->fmt_offset += alignment - (ctx->fmt_offset % alignment);
          }
        }
        return ts;
      case 'x':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->fmt_offset += ctx->new_count;
        ctx->new_count = 1;
        ctx->enc_count = 0;
        ctx->enc_type = 0;
        ctx->enc_packmode = ctx->new_packmode;
        ++ts;
        break;
      case 'Z':
        got_Z = 1;
        ++ts;
        if (*ts != 'f' && *ts != 'd' && *ts != 'g') {
          __Pyx_BufFmt_RaiseUnexpectedChar('Z');
          return NULL;
        }
      case 'c': case 'b': case 'B': case 'h': case 'H': case 'i': case 'I':
      case 'l': case 'L': case 'q': case 'Q':
      case 'f': case 'd': case 'g':
      case 'O': case 'p':
        if (ctx->enc_type == *ts && got_Z == ctx->is_complex &&
            ctx->enc_packmode == ctx->new_packmode) {
          ctx->enc_count += ctx->new_count;
          ctx->new_count = 1;
          got_Z = 0;
          ++ts;
          break;
        }
      case 's':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->enc_count = ctx->new_count;
        ctx->enc_packmode = ctx->new_packmode;
        ctx->enc_type = *ts;
        ctx->is_complex = got_Z;
        ++ts;
        ctx->new_count = 1;
        got_Z = 0;
        break;
      case ':':
        ++ts;
        while(*ts != ':') ++ts;
        ++ts;
        break;
      case '(':
        if (!__pyx_buffmt_parse_array(ctx, &ts)) return NULL;
        break;
      default:
        {
          int number = __Pyx_BufFmt_ExpectNumber(&ts);
          if (number == -1) return NULL;
          ctx->new_count = (size_t)number;
        }
    }
  }
}
static CYTHON_INLINE void __Pyx_ZeroBuffer(Py_buffer* buf) {
  buf->buf = NULL;
  buf->obj = NULL;
  buf->strides = __Pyx_zeros;
  buf->shape = __Pyx_zeros;
  buf->suboffsets = __Pyx_minusones;
}
static CYTHON_INLINE int __Pyx_GetBufferAndValidate(
        Py_buffer* buf, PyObject* obj,  __Pyx_TypeInfo* dtype, int flags,
        int nd, int cast, __Pyx_BufFmt_StackElem* stack)
{
  if (obj == Py_None || obj == NULL) {
    __Pyx_ZeroBuffer(buf);
    return 0;
  }
  buf->buf = NULL;
  if (__Pyx_GetBuffer(obj, buf, flags) == -1) goto fail;
  if (buf->ndim != nd) {
    PyErr_Format(PyExc_ValueError,
                 "Buffer has wrong number of dimensions (expected %d, got %d)",
                 nd, buf->ndim);
    goto fail;
  }
  if (!cast) {
    __Pyx_BufFmt_Context ctx;
    __Pyx_BufFmt_Init(&ctx, stack, dtype);
    if (!__Pyx_BufFmt_CheckString(&ctx, buf->format)) goto fail;
  }
  if ((unsigned)buf->itemsize != dtype->size) {
    PyErr_Format(PyExc_ValueError,
      "Item size of buffer (%" CYTHON_FORMAT_SSIZE_T "d byte%s) does not match size of '%s' (%" CYTHON_FORMAT_SSIZE_T "d byte%s)",
      buf->itemsize, (buf->itemsize > 1) ? "s" : "",
      dtype->name, (Py_ssize_t)dtype->size, (dtype->size > 1) ? "s" : "");
    goto fail;
  }
  if (buf->suboffsets == NULL) buf->suboffsets = __Pyx_minusones;
  return 0;
fail:;
  __Pyx_ZeroBuffer(buf);
  return -1;
}
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info) {
  if (info->buf == NULL) return;
  if (info->suboffsets == __Pyx_minusones) info->suboffsets = NULL;
  __Pyx_ReleaseBuffer(info);
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static CYTHON_INLINE npy_intp __Pyx_div_npy_intp(npy_intp a, npy_intp b) {
    npy_intp q = a / b;
    npy_intp r = a - q*b;
    q -= ((r != 0) & ((r ^ b) < 0));
    return q;
}

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyList_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyTuple_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (PyErr_ExceptionMatches(PyExc_OverflowError))
                        PyErr_Clear();
                    else
                        return NULL;
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_traverse != current_tp_traverse)
        type = type->tp_base;
    while (type && type->tp_traverse == current_tp_traverse)
        type = type->tp_base;
    if (type && type->tp_traverse)
        return type->tp_traverse(obj, v, a);
    return 0;
}

static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_clear) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_clear != current_tp_clear)
        type = type->tp_base;
    while (type && type->tp_clear == current_tp_clear)
        type = type->tp_base;
    if (type && type->tp_clear)
        type->tp_clear(obj);
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

#if PY_MAJOR_VERSION < 3
static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags) {
    if (PyObject_CheckBuffer(obj)) return PyObject_GetBuffer(obj, view, flags);
        if (PyObject_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) return __pyx_pw_5numpy_7ndarray_1__getbuffer__(obj, view, flags);
    PyErr_Format(PyExc_TypeError, "'%.200s' does not have the buffer interface", Py_TYPE(obj)->tp_name);
    return -1;
}
static void __Pyx_ReleaseBuffer(Py_buffer *view) {
    PyObject *obj = view->obj;
    if (!obj) return;
    if (PyObject_CheckBuffer(obj)) {
        PyBuffer_Release(view);
        return;
    }
        if (PyObject_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) { __pyx_pw_5numpy_7ndarray_3__releasebuffer__(obj, view); return; }
    Py_DECREF(obj);
    view->obj = NULL;
}
#endif


          #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
#endif

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, -(sdigit) digits[0])
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE Py_intptr_t __Pyx_PyInt_As_Py_intptr_t(PyObject *x) {
    const Py_intptr_t neg_one = (Py_intptr_t) -1, const_zero = (Py_intptr_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(Py_intptr_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(Py_intptr_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (Py_intptr_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (Py_intptr_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(Py_intptr_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(Py_intptr_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) >= 2 * PyLong_SHIFT) {
                            return (Py_intptr_t) (((((Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(Py_intptr_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) >= 3 * PyLong_SHIFT) {
                            return (Py_intptr_t) (((((((Py_intptr_t)digits[2]) << PyLong_SHIFT) | (Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(Py_intptr_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) >= 4 * PyLong_SHIFT) {
                            return (Py_intptr_t) (((((((((Py_intptr_t)digits[3]) << PyLong_SHIFT) | (Py_intptr_t)digits[2]) << PyLong_SHIFT) | (Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (Py_intptr_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(Py_intptr_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(Py_intptr_t, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(Py_intptr_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(Py_intptr_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (Py_intptr_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(Py_intptr_t, sdigit, -(sdigit) digits[0])
                case  1: __PYX_VERIFY_RETURN_INT(Py_intptr_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(Py_intptr_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) - 1 > 2 * PyLong_SHIFT) {
                            return (Py_intptr_t) (((Py_intptr_t)-1)*(((((Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(Py_intptr_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) - 1 > 2 * PyLong_SHIFT) {
                            return (Py_intptr_t) ((((((Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(Py_intptr_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) - 1 > 3 * PyLong_SHIFT) {
                            return (Py_intptr_t) (((Py_intptr_t)-1)*(((((((Py_intptr_t)digits[2]) << PyLong_SHIFT) | (Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(Py_intptr_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) - 1 > 3 * PyLong_SHIFT) {
                            return (Py_intptr_t) ((((((((Py_intptr_t)digits[2]) << PyLong_SHIFT) | (Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(Py_intptr_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) - 1 > 4 * PyLong_SHIFT) {
                            return (Py_intptr_t) (((Py_intptr_t)-1)*(((((((((Py_intptr_t)digits[3]) << PyLong_SHIFT) | (Py_intptr_t)digits[2]) << PyLong_SHIFT) | (Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(Py_intptr_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(Py_intptr_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(Py_intptr_t) - 1 > 4 * PyLong_SHIFT) {
                            return (Py_intptr_t) ((((((((((Py_intptr_t)digits[3]) << PyLong_SHIFT) | (Py_intptr_t)digits[2]) << PyLong_SHIFT) | (Py_intptr_t)digits[1]) << PyLong_SHIFT) | (Py_intptr_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(Py_intptr_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(Py_intptr_t, long, PyLong_AsLong(x))
            } else if (sizeof(Py_intptr_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(Py_intptr_t, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            Py_intptr_t val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (Py_intptr_t) -1;
        }
    } else {
        Py_intptr_t val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (Py_intptr_t) -1;
        val = __Pyx_PyInt_As_Py_intptr_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to Py_intptr_t");
    return (Py_intptr_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to Py_intptr_t");
    return (Py_intptr_t) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_Py_intptr_t(Py_intptr_t value) {
    const Py_intptr_t neg_one = (Py_intptr_t) -1, const_zero = (Py_intptr_t) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(Py_intptr_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(Py_intptr_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(Py_intptr_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(Py_intptr_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(Py_intptr_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(Py_intptr_t),
                                     little, !is_unsigned);
    }
}

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        float denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(a, a);
                    case 3:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, a);
                    case 4:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_absf(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        double denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(a, a);
                    case 3:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, a);
                    case 4:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_abs(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value) {
    const enum NPY_TYPES neg_one = (enum NPY_TYPES) -1, const_zero = (enum NPY_TYPES) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum NPY_TYPES) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(enum NPY_TYPES) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum NPY_TYPES) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum NPY_TYPES),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, -(sdigit) digits[0])
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if CYTHON_COMPILING_IN_CPYTHON && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return __Pyx_NewRef(x);
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(x);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
